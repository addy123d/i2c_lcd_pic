

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 13 00:04:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 06/04/2022 GMT
    47                           ; 
    48                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F25K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   0015D8                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _segment_with_dot
    86   0015D8  BF                 	db	191
    87   0015D9  86                 	db	134
    88   0015DA  DB                 	db	219
    89   0015DB  CF                 	db	207
    90   0015DC  E6                 	db	230
    91   0015DD  ED                 	db	237
    92   0015DE  FD                 	db	253
    93   0015DF  87                 	db	135
    94   0015E0  FF                 	db	255
    95   0015E1  EF                 	db	239
    96   0015E2  00                 	db	0
    97                           
    98                           ;initializer for _segment
    99   0015E3  3F                 	db	63
   100   0015E4  06                 	db	6
   101   0015E5  5B                 	db	91
   102   0015E6  4F                 	db	79
   103   0015E7  66                 	db	102
   104   0015E8  6D                 	db	109
   105   0015E9  7D                 	db	125
   106   0015EA  07                 	db	7
   107   0015EB  7F                 	db	127
   108   0015EC  6F                 	db	111
   109   0015ED  00                 	db	0
   110                           
   111                           ;initializer for _BackLight_State
   112   0015EE  08                 	db	8
   113   000000                     _TRISBbits	set	3987
   114   000000                     _EECON2	set	4007
   115                           
   116                           	psect	nvCOMRAM
   117   000045                     __pnvCOMRAM:
   118                           	callstack 0
   119   000045                     _i2c_add:
   120                           	callstack 0
   121   000045                     	ds	1
   122   000000                     _ANSELBbits	set	3897
   123   000000                     _ANSELCbits	set	3898
   124   000000                     _PORTB	set	3969
   125   000000                     _LATAbits	set	3977
   126   000000                     _LATCbits	set	3979
   127   000000                     _TRISAbits	set	3986
   128   000000                     _TRISCbits	set	3988
   129   000000                     _OSCTUNE	set	3995
   130   000000                     _PIR2bits	set	4001
   131   000000                     _EECON1bits	set	4006
   132   000000                     _EEDATA	set	4008
   133   000000                     _EEADR	set	4009
   134   000000                     _PORTCbits	set	3970
   135   000000                     _OSCCON	set	4051
   136   000000                     _INTCONbits	set	4082
   137   000000                     _PIR3bits	set	4004
   138   000000                     _SSP2CON2bits	set	3947
   139   000000                     _SSP2CON1	set	3948
   140   000000                     _SSP2STAT	set	3949
   141   000000                     _SSP2BUF	set	3951
   142   000000                     _SSP2ADD	set	3950
   143                           
   144                           	psect	smallconst
   145   000600                     __psmallconst:
   146                           	callstack 0
   147   000600  00                 	db	0
   148   000601                     STR_1:
   149   000601  4F                 	db	79	;'O'
   150   000602  56                 	db	86	;'V'
   151   000603  45                 	db	69	;'E'
   152   000604  52                 	db	82	;'R'
   153   000605  00                 	db	0
   154   000606  00                 	db	0	; dummy byte at the end
   155   000000                     
   156                           ; #config settings
   157                           
   158                           	psect	cinit
   159   0014D2                     __pcinit:
   160                           	callstack 0
   161   0014D2                     start_initialization:
   162                           	callstack 0
   163   0014D2                     __initialization:
   164                           	callstack 0
   165                           
   166                           ; Initialize objects allocated to COMRAM (23 bytes)
   167                           ; load TBLPTR registers with __pidataCOMRAM
   168   0014D2  0ED8               	movlw	low __pidataCOMRAM
   169   0014D4  6EF6               	movwf	tblptrl,c
   170   0014D6  0E15               	movlw	high __pidataCOMRAM
   171   0014D8  6EF7               	movwf	tblptrh,c
   172   0014DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   173   0014DC  6EF8               	movwf	tblptru,c
   174   0014DE  EE00  F020         	lfsr	0,__pdataCOMRAM
   175   0014E2  EE10 F017          	lfsr	1,23
   176   0014E6                     copy_data0:
   177   0014E6  0009               	tblrd		*+
   178   0014E8  CFF5 FFEE          	movff	tablat,postinc0
   179   0014EC  50E5               	movf	postdec1,w,c
   180   0014EE  50E1               	movf	fsr1l,w,c
   181   0014F0  E1FA               	bnz	copy_data0
   182                           
   183                           ; Clear objects allocated to COMRAM (14 bytes)
   184   0014F2  EE00  F037         	lfsr	0,__pbssCOMRAM
   185   0014F6  0E0E               	movlw	14
   186   0014F8                     clear_0:
   187   0014F8  6AEE               	clrf	postinc0,c
   188   0014FA  06E8               	decf	wreg,f,c
   189   0014FC  E1FD               	bnz	clear_0
   190   0014FE                     end_of_initialization:
   191                           	callstack 0
   192   0014FE                     __end_of__initialization:
   193                           	callstack 0
   194   0014FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195   001500  6EF8               	movwf	tblptru,c
   196   001502  0100               	movlb	0
   197   001504  EFDA  F006         	goto	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMRAM
   200   000037                     __pbssCOMRAM:
   201                           	callstack 0
   202   000037                     _display_function_count:
   203                           	callstack 0
   204   000037                     	ds	2
   205   000039                     _DEL:
   206                           	callstack 0
   207   000039                     	ds	2
   208   00003B                     _minute_second_digit:
   209                           	callstack 0
   210   00003B                     	ds	2
   211   00003D                     _minute_first_digit:
   212                           	callstack 0
   213   00003D                     	ds	2
   214   00003F                     _hour_second_digit:
   215                           	callstack 0
   216   00003F                     	ds	2
   217   000041                     _hour_first_digit:
   218                           	callstack 0
   219   000041                     	ds	2
   220   000043                     _segmentCounter:
   221                           	callstack 0
   222   000043                     	ds	1
   223   000044                     _RS:
   224                           	callstack 0
   225   000044                     	ds	1
   226                           
   227                           	psect	dataCOMRAM
   228   000020                     __pdataCOMRAM:
   229                           	callstack 0
   230   000020                     _segment_with_dot:
   231                           	callstack 0
   232   000020                     	ds	11
   233   00002B                     _segment:
   234                           	callstack 0
   235   00002B                     	ds	11
   236   000036                     _BackLight_State:
   237                           	callstack 0
   238   000036                     	ds	1
   239                           
   240                           	psect	cstackCOMRAM
   241   000001                     __pcstackCOMRAM:
   242                           	callstack 0
   243   000001                     ??_stopTimer:
   244   000001                     ?___awmod:
   245                           	callstack 0
   246   000001                     ?___lwmod:
   247                           	callstack 0
   248   000001                     EEPROM_Write@data:
   249                           	callstack 0
   250   000001                     EEPROM_Read@address:
   251                           	callstack 0
   252   000001                     I2C2_Send@BYTE:
   253                           	callstack 0
   254   000001                     ___awmod@dividend:
   255                           	callstack 0
   256   000001                     ___lwmod@dividend:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x0
   260   000001                     	ds	1
   261   000002                     IO_Expander_Write@Data:
   262                           	callstack 0
   263   000002                     EEPROM_Write@address:
   264                           	callstack 0
   265   000002                     inttochar@digit:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x1
   269   000002                     	ds	1
   270   000003                     ??_EEPROM_Mem_Initialise:
   271   000003                     LCD_Write_4Bit@Nibble:
   272                           	callstack 0
   273   000003                     ___awmod@divisor:
   274                           	callstack 0
   275   000003                     ___lwmod@divisor:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279   000003                     	ds	1
   280   000004                     LCD_CMD@CMD:
   281                           	callstack 0
   282   000004                     LCD_Write_Char@Data:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286   000004                     	ds	1
   287   000005                     ??_LCD_Init:
   288   000005                     LCD_Set_Cursor@COL:
   289                           	callstack 0
   290   000005                     ___awmod@counter:
   291                           	callstack 0
   292   000005                     ___lwmod@counter:
   293                           	callstack 0
   294   000005                     LCD_Write_String@Str:
   295                           	callstack 0
   296   000005                     EEPROM_Mem_Initialise@mem_check:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x4
   300   000005                     	ds	1
   301   000006                     ??_LCD_Set_Cursor:
   302   000006                     ___awmod@sign:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x5
   306   000006                     	ds	1
   307   000007                     ??_LCD_Write_String:
   308   000007                     LCD_Init@I2C_Add:
   309                           	callstack 0
   310   000007                     EEPROM_Mem_Initialise@flag_addr:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314   000007                     	ds	1
   315   000008                     LCD_Set_Cursor@ROW:
   316                           	callstack 0
   317   000008                     EEPROM_Mem_Initialise@eeprom_addr:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x7
   321   000008                     	ds	1
   322   000009                     lcd_print@col:
   323                           	callstack 0
   324   000009                     LCD_Write_String@i:
   325                           	callstack 0
   326   000009                     display@buttonCounter:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x8
   330   000009                     	ds	1
   331   00000A                     lcd_print@Data:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x9
   335   00000A                     	ds	1
   336   00000B                     ??_stopMessage:
   337   00000B                     lcd_print@row:
   338                           	callstack 0
   339   00000B                     display@update:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0xA
   343   00000B                     	ds	2
   344   00000D                     ??_startTimer:
   345   00000D                     ??_startUpcounter:
   346   00000D                     ??_display:
   347                           
   348                           ; 1 bytes @ 0xC
   349   00000D                     	ds	1
   350   00000E                     startTimer@hour_first_flag:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xD
   354   00000E                     	ds	1
   355   00000F                     startUpcounter@actualpos:
   356                           	callstack 0
   357   00000F                     display@hour_f_digit:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0xE
   361   00000F                     	ds	1
   362   000010                     startTimer@minute_first_flag:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0xF
   366   000010                     	ds	1
   367   000011                     startUpcounter@displaypos:
   368                           	callstack 0
   369   000011                     display@hour_s_digit:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x10
   373   000011                     	ds	1
   374   000012                     startTimer@minute_second_flag:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x11
   378   000012                     	ds	1
   379   000013                     display@minute_f_digit:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x12
   383   000013                     	ds	1
   384   000014                     startTimer@timeUp:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x13
   388   000014                     	ds	1
   389   000015                     display@minute_s_digit:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x14
   393   000015                     	ds	1
   394   000016                     startTimer@RESET:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x15
   398   000016                     	ds	2
   399   000018                     ??_main:
   400                           
   401                           ; 1 bytes @ 0x17
   402   000018                     	ds	2
   403   00001A                     main@stop_flag:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x19
   407   00001A                     	ds	2
   408   00001C                     main@isEditMode:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x1B
   412   00001C                     	ds	2
   413   00001E                     main@shiftCounter:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x1D
   417   00001E                     	ds	2
   418                           
   419 ;;
   420 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   421 ;;
   422 ;; *************** function _main *****************
   423 ;; Defined at:
   424 ;;		line 739 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  shiftCounter    2   29[COMRAM] unsigned int 
   429 ;;  updateFlag      2    0        unsigned int 
   430 ;;  isEditMode      2   27[COMRAM] unsigned int 
   431 ;;  stop_flag       2   25[COMRAM] unsigned int 
   432 ;;  transition_s    2    0        unsigned int 
   433 ;;  transition_e    2    0        unsigned int 
   434 ;;  minute_secon    1    0        unsigned char 
   435 ;;  minute_first    1    0        unsigned char 
   436 ;;  hour_second_    1    0        unsigned char 
   437 ;;  hour_first_d    1    0        unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   447 ;;      Params:         0       0       0       0       0       0       0
   448 ;;      Locals:         6       0       0       0       0       0       0
   449 ;;      Temps:          2       0       0       0       0       0       0
   450 ;;      Totals:         8       0       0       0       0       0       0
   451 ;;Total ram usage:        8 bytes
   452 ;; Hardware stack levels required when called: 7
   453 ;; This function calls:
   454 ;;		_EEPROM_Mem_Initialise
   455 ;;		_I2C2_Init
   456 ;;		_LCD_Init
   457 ;;		_blue_led
   458 ;;		_display
   459 ;;		_red_led
   460 ;;		_startTimer
   461 ;;		_startUpcounter
   462 ;;		_stopTimer
   463 ;; This function is called by:
   464 ;;		Startup code after reset
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text0
   469   000DB4                     __ptext0:
   470                           	callstack 0
   471   000DB4                     _main:
   472                           	callstack 24
   473   000DB4                     
   474                           ;main.c: 743:     OSCCON = 0x70;
   475   000DB4  0E70               	movlw	112
   476   000DB6  6ED3               	movwf	211,c	;volatile
   477                           
   478                           ;main.c: 744:     OSCTUNE = 0xC0;
   479   000DB8  0EC0               	movlw	192
   480   000DBA  6E9B               	movwf	155,c	;volatile
   481   000DBC                     
   482                           ;main.c: 747:     TRISCbits.TRISC0 = 1;
   483   000DBC  8094               	bsf	148,0,c	;volatile
   484   000DBE                     
   485                           ;main.c: 748:     TRISCbits.TRISC1 = 1;
   486   000DBE  8294               	bsf	148,1,c	;volatile
   487   000DC0                     
   488                           ;main.c: 749:     TRISCbits.TRISC2 = 1;
   489   000DC0  8494               	bsf	148,2,c	;volatile
   490   000DC2                     
   491                           ;main.c: 752:     ANSELCbits.ANSC2 = 0;
   492   000DC2  010F               	movlb	15	; () banked
   493   000DC4  953A               	bcf	58,2,b	;volatile
   494   000DC6                     
   495                           ; BSR set to: 15
   496                           ;main.c: 755:     TRISAbits.TRISA4 = 0;
   497   000DC6  9892               	bcf	146,4,c	;volatile
   498   000DC8                     
   499                           ; BSR set to: 15
   500                           ;main.c: 756:     TRISAbits.TRISA5 = 0;
   501   000DC8  9A92               	bcf	146,5,c	;volatile
   502   000DCA                     
   503                           ; BSR set to: 15
   504                           ;main.c: 757:     TRISAbits.TRISA6 = 0;
   505   000DCA  9C92               	bcf	146,6,c	;volatile
   506   000DCC                     
   507                           ; BSR set to: 15
   508                           ;main.c: 759:     TRISAbits.TRISA7 = 0;
   509   000DCC  9E92               	bcf	146,7,c	;volatile
   510   000DCE                     
   511                           ; BSR set to: 15
   512                           ;main.c: 760:     TRISCbits.TRISC3 = 0;
   513   000DCE  9694               	bcf	148,3,c	;volatile
   514   000DD0                     
   515                           ; BSR set to: 15
   516                           ;main.c: 763:     LATAbits.LATA4 = 1;
   517   000DD0  8889               	bsf	137,4,c	;volatile
   518   000DD2                     
   519                           ; BSR set to: 15
   520                           ;main.c: 764:     LATAbits.LATA5 = 1;
   521   000DD2  8A89               	bsf	137,5,c	;volatile
   522   000DD4                     
   523                           ; BSR set to: 15
   524                           ;main.c: 765:     LATAbits.LATA6 = 1;
   525   000DD4  8C89               	bsf	137,6,c	;volatile
   526   000DD6                     
   527                           ; BSR set to: 15
   528                           ;main.c: 767:     LATCbits.LATC3 = 0;
   529   000DD6  968B               	bcf	139,3,c	;volatile
   530   000DD8                     
   531                           ; BSR set to: 15
   532                           ;main.c: 770:     I2C2_Init();
   533   000DD8  ECE0  F00A         	call	_I2C2_Init	;wreg free
   534   000DDC                     
   535                           ;main.c: 772:     LCD_Init((0x38 << 1));
   536   000DDC  0E70               	movlw	112
   537   000DDE  EC69  F008         	call	_LCD_Init
   538   000DE2                     
   539                           ;main.c: 775:     startUpcounter();
   540   000DE2  ECE4  F008         	call	_startUpcounter	;wreg free
   541   000DE6                     
   542                           ;main.c: 777:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   543   000DE6  0E52               	movlw	82
   544   000DE8  6E19               	movwf	(??_main+1)^0,c
   545   000DEA  0E2B               	movlw	43
   546   000DEC  6E18               	movwf	??_main^0,c
   547   000DEE  0E00               	movlw	0
   548   000DF0                     u1367:
   549   000DF0  2EE8               	decfsz	wreg,f,c
   550   000DF2  D7FE               	bra	u1367
   551   000DF4  2E18               	decfsz	??_main^0,f,c
   552   000DF6  D7FC               	bra	u1367
   553   000DF8  2E19               	decfsz	(??_main+1)^0,f,c
   554   000DFA  D7FA               	bra	u1367
   555   000DFC  D000               	nop2	
   556   000DFE                     
   557                           ;main.c: 778:     EEPROM_Mem_Initialise();
   558   000DFE  ECC0  F007         	call	_EEPROM_Mem_Initialise	;wreg free
   559   000E02                     
   560                           ;main.c: 794:     unsigned int isEditMode = 0;
   561   000E02  0E00               	movlw	0
   562   000E04  6E1D               	movwf	(main@isEditMode+1)^0,c
   563   000E06  0E00               	movlw	0
   564   000E08  6E1C               	movwf	main@isEditMode^0,c
   565   000E0A                     
   566                           ;main.c: 795:     unsigned int shiftCounter = 1;
   567   000E0A  0E00               	movlw	0
   568   000E0C  6E1F               	movwf	(main@shiftCounter+1)^0,c
   569   000E0E  0E01               	movlw	1
   570   000E10  6E1E               	movwf	main@shiftCounter^0,c
   571   000E12                     
   572                           ;main.c: 796:     unsigned int stop_flag = 0;
   573   000E12  0E00               	movlw	0
   574   000E14  6E1B               	movwf	(main@stop_flag+1)^0,c
   575   000E16  0E00               	movlw	0
   576   000E18  6E1A               	movwf	main@stop_flag^0,c
   577   000E1A                     l2273:
   578                           
   579                           ;main.c: 803:     {;main.c: 804:         if (PORTCbits.RC0 == 0)
   580   000E1A  B082               	btfsc	130,0,c	;volatile
   581   000E1C  EF12  F007         	goto	u1281
   582   000E20  EF14  F007         	goto	u1280
   583   000E24                     u1281:
   584   000E24  EF1E  F007         	goto	l253
   585   000E28                     u1280:
   586   000E28                     
   587                           ;main.c: 805:         {;main.c: 806:             LATAbits.LATA7 = 1;
   588   000E28  8E89               	bsf	137,7,c	;volatile
   589   000E2A                     
   590                           ;main.c: 808:             isEditMode ^= 1;
   591   000E2A  0E01               	movlw	1
   592   000E2C  1A1C               	xorwf	main@isEditMode^0,f,c
   593   000E2E                     
   594                           ;main.c: 809:             stop_flag = 0;
   595   000E2E  0E00               	movlw	0
   596   000E30  6E1B               	movwf	(main@stop_flag+1)^0,c
   597   000E32  0E00               	movlw	0
   598   000E34  6E1A               	movwf	main@stop_flag^0,c
   599   000E36                     
   600                           ;main.c: 811:             LATAbits.LATA7 = 0;
   601   000E36  9E89               	bcf	137,7,c	;volatile
   602                           
   603                           ;main.c: 812:         }
   604   000E38  EF0D  F007         	goto	l2273
   605   000E3C                     l253:
   606   000E3C  B282               	btfsc	130,1,c	;volatile
   607   000E3E  EF23  F007         	goto	u1291
   608   000E42  EF25  F007         	goto	u1290
   609   000E46                     u1291:
   610   000E46  EF66  F007         	goto	l255
   611   000E4A                     u1290:
   612   000E4A                     
   613                           ;main.c: 814:         {;main.c: 815:             LATAbits.LATA7 = 1;
   614   000E4A  8E89               	bsf	137,7,c	;volatile
   615   000E4C                     
   616                           ;main.c: 818:             stop_flag = 0;
   617   000E4C  0E00               	movlw	0
   618   000E4E  6E1B               	movwf	(main@stop_flag+1)^0,c
   619   000E50  0E00               	movlw	0
   620   000E52  6E1A               	movwf	main@stop_flag^0,c
   621   000E54                     
   622                           ;main.c: 820:             if (isEditMode)
   623   000E54  501C               	movf	main@isEditMode^0,w,c
   624   000E56  101D               	iorwf	(main@isEditMode+1)^0,w,c
   625   000E58  B4D8               	btfsc	status,2,c
   626   000E5A  EF31  F007         	goto	u1301
   627   000E5E  EF33  F007         	goto	u1300
   628   000E62                     u1301:
   629   000E62  EF5E  F007         	goto	l2299
   630   000E66                     u1300:
   631   000E66                     
   632                           ;main.c: 821:             {;main.c: 823:                 _delay((unsigned long)((100)*(6
      +                          4000000/4000.0)));
   633   000E66  0E09               	movlw	9
   634   000E68  6E19               	movwf	(??_main+1)^0,c
   635   000E6A  0E1E               	movlw	30
   636   000E6C  6E18               	movwf	??_main^0,c
   637   000E6E  0EE4               	movlw	228
   638   000E70                     u1377:
   639   000E70  2EE8               	decfsz	wreg,f,c
   640   000E72  D7FE               	bra	u1377
   641   000E74  2E18               	decfsz	??_main^0,f,c
   642   000E76  D7FC               	bra	u1377
   643   000E78  2E19               	decfsz	(??_main+1)^0,f,c
   644   000E7A  D7FA               	bra	u1377
   645   000E7C  D000               	nop2	
   646   000E7E                     
   647                           ;main.c: 825:                 if (shiftCounter < 4)
   648   000E7E  501F               	movf	(main@shiftCounter+1)^0,w,c
   649   000E80  E107               	bnz	u1311
   650   000E82  0E04               	movlw	4
   651   000E84  5C1E               	subwf	main@shiftCounter^0,w,c
   652   000E86  B0D8               	btfsc	status,0,c
   653   000E88  EF48  F007         	goto	u1311
   654   000E8C  EF4A  F007         	goto	u1310
   655   000E90                     u1311:
   656   000E90  EF4E  F007         	goto	l2295
   657   000E94                     u1310:
   658   000E94                     
   659                           ;main.c: 826:                     shiftCounter++;
   660   000E94  4A1E               	infsnz	main@shiftCounter^0,f,c
   661   000E96  2A1F               	incf	(main@shiftCounter+1)^0,f,c
   662   000E98  EF52  F007         	goto	l2297
   663   000E9C                     l2295:
   664                           
   665                           ;main.c: 828:                     shiftCounter = 1;
   666   000E9C  0E00               	movlw	0
   667   000E9E  6E1F               	movwf	(main@shiftCounter+1)^0,c
   668   000EA0  0E01               	movlw	1
   669   000EA2  6E1E               	movwf	main@shiftCounter^0,c
   670   000EA4                     l2297:
   671                           
   672                           ;main.c: 830:                 display(shiftCounter, updateFlag);
   673   000EA4  C01E  F009         	movff	main@shiftCounter,display@buttonCounter
   674   000EA8  C01F  F00A         	movff	main@shiftCounter+1,display@buttonCounter+1
   675   000EAC  0E00               	movlw	0
   676   000EAE  6E0C               	movwf	(display@update+1)^0,c
   677   000EB0  0E00               	movlw	0
   678   000EB2  6E0B               	movwf	display@update^0,c
   679   000EB4  EC04  F003         	call	_display	;wreg free
   680                           
   681                           ;main.c: 831:             }
   682   000EB8  EF0D  F007         	goto	l2273
   683   000EBC                     l2299:
   684                           
   685                           ;main.c: 833:             {;main.c: 841:                 shiftCounter = 1;
   686   000EBC  0E00               	movlw	0
   687   000EBE  6E1F               	movwf	(main@shiftCounter+1)^0,c
   688   000EC0  0E01               	movlw	1
   689   000EC2  6E1E               	movwf	main@shiftCounter^0,c
   690   000EC4                     
   691                           ;main.c: 851:                 startTimer();
   692   000EC4  EC24  F005         	call	_startTimer	;wreg free
   693   000EC8  EF0D  F007         	goto	l2273
   694   000ECC                     l255:
   695   000ECC  B482               	btfsc	130,2,c	;volatile
   696   000ECE  EF6B  F007         	goto	u1321
   697   000ED2  EF6D  F007         	goto	u1320
   698   000ED6                     u1321:
   699   000ED6  EF8B  F007         	goto	l2319
   700   000EDA                     u1320:
   701   000EDA                     
   702                           ;main.c: 855:         {;main.c: 856:             LATAbits.LATA7 = 1;
   703   000EDA  8E89               	bsf	137,7,c	;volatile
   704   000EDC                     
   705                           ;main.c: 859:             if (isEditMode)
   706   000EDC  501C               	movf	main@isEditMode^0,w,c
   707   000EDE  101D               	iorwf	(main@isEditMode+1)^0,w,c
   708   000EE0  B4D8               	btfsc	status,2,c
   709   000EE2  EF75  F007         	goto	u1331
   710   000EE6  EF77  F007         	goto	u1330
   711   000EEA                     u1331:
   712   000EEA  EF83  F007         	goto	l2313
   713   000EEE                     u1330:
   714   000EEE                     
   715                           ;main.c: 862:                 display(shiftCounter, updateFlag);
   716   000EEE  C01E  F009         	movff	main@shiftCounter,display@buttonCounter
   717   000EF2  C01F  F00A         	movff	main@shiftCounter+1,display@buttonCounter+1
   718   000EF6  0E00               	movlw	0
   719   000EF8  6E0C               	movwf	(display@update+1)^0,c
   720   000EFA  0E01               	movlw	1
   721   000EFC  6E0B               	movwf	display@update^0,c
   722   000EFE  EC04  F003         	call	_display	;wreg free
   723                           
   724                           ;main.c: 863:             }
   725   000F02  EF0D  F007         	goto	l2273
   726   000F06                     l2313:
   727                           
   728                           ;main.c: 865:             {;main.c: 866:                 stop_flag = 1;
   729   000F06  0E00               	movlw	0
   730   000F08  6E1B               	movwf	(main@stop_flag+1)^0,c
   731   000F0A  0E01               	movlw	1
   732   000F0C  6E1A               	movwf	main@stop_flag^0,c
   733   000F0E                     
   734                           ;main.c: 870:                     stopTimer();
   735   000F0E  EC4C  F00A         	call	_stopTimer	;wreg free
   736   000F12  EF0D  F007         	goto	l2273
   737   000F16                     l2319:
   738   000F16                     
   739                           ;main.c: 877:             if (isEditMode == 0)
   740   000F16  501C               	movf	main@isEditMode^0,w,c
   741   000F18  101D               	iorwf	(main@isEditMode+1)^0,w,c
   742   000F1A  A4D8               	btfss	status,2,c
   743   000F1C  EF92  F007         	goto	u1341
   744   000F20  EF94  F007         	goto	u1340
   745   000F24                     u1341:
   746   000F24  EFAF  F007         	goto	l2331
   747   000F28                     u1340:
   748   000F28                     
   749                           ;main.c: 878:             {;main.c: 879:                 red_led();
   750   000F28  EC26  F00B         	call	_red_led	;wreg free
   751   000F2C                     
   752                           ;main.c: 881:                 if (stop_flag)
   753   000F2C  501A               	movf	main@stop_flag^0,w,c
   754   000F2E  101B               	iorwf	(main@stop_flag+1)^0,w,c
   755   000F30  B4D8               	btfsc	status,2,c
   756   000F32  EF9D  F007         	goto	u1351
   757   000F36  EF9F  F007         	goto	u1350
   758   000F3A                     u1351:
   759   000F3A  EFA3  F007         	goto	l2329
   760   000F3E                     u1350:
   761   000F3E                     
   762                           ;main.c: 882:                 {;main.c: 883:                     stopTimer();
   763   000F3E  EC4C  F00A         	call	_stopTimer	;wreg free
   764                           
   765                           ;main.c: 884:                 }
   766   000F42  EFBB  F007         	goto	l2337
   767   000F46                     l2329:
   768                           
   769                           ;main.c: 886:                 {;main.c: 887:                     display(0, 0);
   770   000F46  0E00               	movlw	0
   771   000F48  6E0A               	movwf	(display@buttonCounter+1)^0,c
   772   000F4A  0E00               	movlw	0
   773   000F4C  6E09               	movwf	display@buttonCounter^0,c
   774   000F4E  0E00               	movlw	0
   775   000F50  6E0C               	movwf	(display@update+1)^0,c
   776   000F52  0E00               	movlw	0
   777   000F54  6E0B               	movwf	display@update^0,c
   778   000F56  EC04  F003         	call	_display	;wreg free
   779   000F5A  EFBB  F007         	goto	l2337
   780   000F5E                     l2331:
   781   000F5E                     
   782                           ;main.c: 893:                 blue_led();
   783   000F5E  EC2E  F00B         	call	_blue_led	;wreg free
   784   000F62                     
   785                           ;main.c: 894:                 display(shiftCounter, updateFlag);
   786   000F62  C01E  F009         	movff	main@shiftCounter,display@buttonCounter
   787   000F66  C01F  F00A         	movff	main@shiftCounter+1,display@buttonCounter+1
   788   000F6A  0E00               	movlw	0
   789   000F6C  6E0C               	movwf	(display@update+1)^0,c
   790   000F6E  0E00               	movlw	0
   791   000F70  6E0B               	movwf	display@update^0,c
   792   000F72  EC04  F003         	call	_display	;wreg free
   793   000F76                     l2337:
   794                           
   795                           ;main.c: 897:             LATAbits.LATA7 = 0;
   796   000F76  9E89               	bcf	137,7,c	;volatile
   797   000F78  EF0D  F007         	goto	l2273
   798   000F7C  EF00  F000         	goto	start
   799   000F80                     __end_of_main:
   800                           	callstack 0
   801                           
   802 ;; *************** function _startUpcounter *****************
   803 ;; Defined at:
   804 ;;		line 447 in file "main.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  displaypos      2   16[COMRAM] unsigned int 
   809 ;;  actualpos       2   14[COMRAM] unsigned int 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   819 ;;      Params:         0       0       0       0       0       0       0
   820 ;;      Locals:         4       0       0       0       0       0       0
   821 ;;      Temps:          2       0       0       0       0       0       0
   822 ;;      Totals:         6       0       0       0       0       0       0
   823 ;;Total ram usage:        6 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 6
   826 ;; This function calls:
   827 ;;		_LCD_CLR
   828 ;;		_inttochar
   829 ;;		_lcd_print
   830 ;;		_seven_segment_config
   831 ;;		_stopMessage
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text1
   838   0011C8                     __ptext1:
   839                           	callstack 0
   840   0011C8                     _startUpcounter:
   841                           	callstack 24
   842   0011C8                     
   843                           ;main.c: 450:     seven_segment_config();
   844   0011C8  EC35  F00B         	call	_seven_segment_config	;wreg free
   845   0011CC                     
   846                           ;main.c: 451:     unsigned int displaypos, actualpos;;main.c: 453:     for (segmentCount
      +                          er = 0; segmentCounter < 2; segmentCounter++)
   847   0011CC  0E00               	movlw	0
   848   0011CE  6E43               	movwf	_segmentCounter^0,c
   849   0011D0  0E01               	movlw	1
   850   0011D2  6443               	cpfsgt	_segmentCounter^0,c
   851   0011D4  EFEE  F008         	goto	u1041
   852   0011D8  EFF0  F008         	goto	u1040
   853   0011DC                     u1041:
   854   0011DC  EFF2  F008         	goto	l182
   855   0011E0                     u1040:
   856   0011E0  EF3D  F009         	goto	l2055
   857   0011E4                     l182:
   858                           
   859                           ;main.c: 454:     {;main.c: 455:         LATAbits.LATA7 = 1;
   860   0011E4  8E89               	bsf	137,7,c	;volatile
   861   0011E6                     
   862                           ;main.c: 457:         for (displaypos = 3; displaypos < 7; displaypos++)
   863   0011E6  0E00               	movlw	0
   864   0011E8  6E12               	movwf	(startUpcounter@displaypos+1)^0,c
   865   0011EA  0E03               	movlw	3
   866   0011EC  6E11               	movwf	startUpcounter@displaypos^0,c
   867   0011EE                     l2039:
   868                           
   869                           ;main.c: 458:         {;main.c: 459:             actualpos = displaypos * 2;
   870   0011EE  90D8               	bcf	status,0,c
   871   0011F0  3411               	rlcf	startUpcounter@displaypos^0,w,c
   872   0011F2  6E0F               	movwf	startUpcounter@actualpos^0,c
   873   0011F4  3412               	rlcf	(startUpcounter@displaypos+1)^0,w,c
   874   0011F6  6E10               	movwf	(startUpcounter@actualpos+1)^0,c
   875   0011F8                     
   876                           ;main.c: 461:             lcd_print(1, actualpos, inttochar(segmentCounter));
   877   0011F8  C00F  F009         	movff	startUpcounter@actualpos,lcd_print@col
   878   0011FC  C043  F002         	movff	_segmentCounter,inttochar@digit
   879   001200  6A03               	clrf	(inttochar@digit+1)^0,c
   880   001202  EC32  F00B         	call	_inttochar	;wreg free
   881   001206  6E0A               	movwf	lcd_print@Data^0,c
   882   001208  0E01               	movlw	1
   883   00120A  ECF8  F00A         	call	_lcd_print
   884   00120E                     
   885                           ;main.c: 462:             lcd_print(1, actualpos + 1, '.');
   886   00120E  280F               	incf	startUpcounter@actualpos^0,w,c
   887   001210  6E09               	movwf	lcd_print@col^0,c
   888   001212  0E2E               	movlw	46
   889   001214  6E0A               	movwf	lcd_print@Data^0,c
   890   001216  0E01               	movlw	1
   891   001218  ECF8  F00A         	call	_lcd_print
   892   00121C                     
   893                           ;main.c: 463:         }
   894   00121C  4A11               	infsnz	startUpcounter@displaypos^0,f,c
   895   00121E  2A12               	incf	(startUpcounter@displaypos+1)^0,f,c
   896   001220  5012               	movf	(startUpcounter@displaypos+1)^0,w,c
   897   001222  E109               	bnz	u1050
   898   001224  0E07               	movlw	7
   899   001226  5C11               	subwf	startUpcounter@displaypos^0,w,c
   900   001228  A0D8               	btfss	status,0,c
   901   00122A  EF19  F009         	goto	u1051
   902   00122E  EF1B  F009         	goto	u1050
   903   001232                     u1051:
   904   001232  EFF7  F008         	goto	l2039
   905   001236                     u1050:
   906   001236                     
   907                           ;main.c: 464:         _delay((unsigned long)((500)*(64000000/4000.0)));
   908   001236  0E29               	movlw	41
   909   001238  6E0E               	movwf	(??_startUpcounter+1)^0,c
   910   00123A  0E96               	movlw	150
   911   00123C  6E0D               	movwf	??_startUpcounter^0,c
   912   00123E  0E7F               	movlw	127
   913   001240                     u1387:
   914   001240  2EE8               	decfsz	wreg,f,c
   915   001242  D7FE               	bra	u1387
   916   001244  2E0D               	decfsz	??_startUpcounter^0,f,c
   917   001246  D7FC               	bra	u1387
   918   001248  2E0E               	decfsz	(??_startUpcounter+1)^0,f,c
   919   00124A  D7FA               	bra	u1387
   920   00124C  F000               	nop	
   921   00124E                     
   922                           ;main.c: 466:         LATAbits.LATA7 = 0;
   923   00124E  9E89               	bcf	137,7,c	;volatile
   924                           
   925                           ;main.c: 467:         _delay((unsigned long)((500)*(64000000/4000.0)));
   926   001250  0E29               	movlw	41
   927   001252  6E0E               	movwf	(??_startUpcounter+1)^0,c
   928   001254  0E96               	movlw	150
   929   001256  6E0D               	movwf	??_startUpcounter^0,c
   930   001258  0E7F               	movlw	127
   931   00125A                     u1397:
   932   00125A  2EE8               	decfsz	wreg,f,c
   933   00125C  D7FE               	bra	u1397
   934   00125E  2E0D               	decfsz	??_startUpcounter^0,f,c
   935   001260  D7FC               	bra	u1397
   936   001262  2E0E               	decfsz	(??_startUpcounter+1)^0,f,c
   937   001264  D7FA               	bra	u1397
   938   001266  F000               	nop	
   939   001268                     
   940                           ;main.c: 468:     }
   941   001268  2A43               	incf	_segmentCounter^0,f,c
   942   00126A  0E01               	movlw	1
   943   00126C  6443               	cpfsgt	_segmentCounter^0,c
   944   00126E  EF3B  F009         	goto	u1061
   945   001272  EF3D  F009         	goto	u1060
   946   001276                     u1061:
   947   001276  EFF2  F008         	goto	l182
   948   00127A                     u1060:
   949   00127A                     l2055:
   950                           
   951                           ;main.c: 470:     LCD_CLR();
   952   00127A  EC16  F00B         	call	_LCD_CLR	;wreg free
   953   00127E                     
   954                           ;main.c: 472:     stopMessage();
   955   00127E  EC2C  F00A         	call	_stopMessage	;wreg free
   956   001282  0012               	return		;funcret
   957   001284                     __end_of_startUpcounter:
   958                           	callstack 0
   959                           
   960 ;; *************** function _lcd_print *****************
   961 ;; Defined at:
   962 ;;		line 697 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  row             1    wreg     unsigned char 
   965 ;;  col             1    8[COMRAM] unsigned char 
   966 ;;  Data            1    9[COMRAM] unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  row             1   10[COMRAM] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   978 ;;      Params:         2       0       0       0       0       0       0
   979 ;;      Locals:         1       0       0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0
   981 ;;      Totals:         3       0       0       0       0       0       0
   982 ;;Total ram usage:        3 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 5
   985 ;; This function calls:
   986 ;;		_LCD_Set_Cursor
   987 ;;		_LCD_Write_Char
   988 ;; This function is called by:
   989 ;;		_startUpcounter
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text2
   994   0015F0                     __ptext2:
   995                           	callstack 0
   996   0015F0                     _lcd_print:
   997                           	callstack 24
   998                           
   999                           ;incstack = 0
  1000                           ;lcd_print@row stored from wreg
  1001   0015F0  6E0B               	movwf	lcd_print@row^0,c
  1002   0015F2                     
  1003                           ;main.c: 697: void lcd_print(unsigned char row, unsigned char col, char Data);main.c: 69
      +                          8: {;main.c: 703:     LCD_Set_Cursor(row, col);
  1004   0015F2  C009  F005         	movff	lcd_print@col,LCD_Set_Cursor@COL
  1005   0015F6  500B               	movf	lcd_print@row^0,w,c
  1006   0015F8  EC9A  F009         	call	_LCD_Set_Cursor
  1007                           
  1008                           ;main.c: 704:     LCD_Write_Char(Data);
  1009   0015FC  500A               	movf	lcd_print@Data^0,w,c
  1010   0015FE  ECAC  F00A         	call	_LCD_Write_Char
  1011   001602  0012               	return		;funcret
  1012   001604                     __end_of_lcd_print:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _startTimer *****************
  1016 ;; Defined at:
  1017 ;;		line 257 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  RESET           2   21[COMRAM] int 
  1022 ;;  timeUp          2   19[COMRAM] int 
  1023 ;;  minute_secon    2   17[COMRAM] int 
  1024 ;;  minute_first    2   15[COMRAM] int 
  1025 ;;  hour_first_f    2   13[COMRAM] int 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1035 ;;      Params:         0       0       0       0       0       0       0
  1036 ;;      Locals:        10       0       0       0       0       0       0
  1037 ;;      Temps:          1       0       0       0       0       0       0
  1038 ;;      Totals:        11       0       0       0       0       0       0
  1039 ;;Total ram usage:       11 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 6
  1042 ;; This function calls:
  1043 ;;		_EEPROM_Read
  1044 ;;		___awmod
  1045 ;;		_green_led
  1046 ;;		_seven_segment_config
  1047 ;;		_stopMessage
  1048 ;;		_stopTimer
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text3
  1055   000A48                     __ptext3:
  1056                           	callstack 0
  1057   000A48                     _startTimer:
  1058                           	callstack 24
  1059   000A48                     
  1060                           ;main.c: 260:     int RESET = 0;
  1061   000A48  0E00               	movlw	0
  1062   000A4A  6E17               	movwf	(startTimer@RESET+1)^0,c
  1063   000A4C  0E00               	movlw	0
  1064   000A4E  6E16               	movwf	startTimer@RESET^0,c
  1065                           
  1066                           ;main.c: 261:     int timeUp = 0;
  1067   000A50  0E00               	movlw	0
  1068   000A52  6E15               	movwf	(startTimer@timeUp+1)^0,c
  1069   000A54  0E00               	movlw	0
  1070   000A56  6E14               	movwf	startTimer@timeUp^0,c
  1071                           
  1072                           ;main.c: 262:     int hour_first_flag = 0;
  1073   000A58  0E00               	movlw	0
  1074   000A5A  6E0F               	movwf	(startTimer@hour_first_flag+1)^0,c
  1075   000A5C  0E00               	movlw	0
  1076   000A5E  6E0E               	movwf	startTimer@hour_first_flag^0,c
  1077                           
  1078                           ;main.c: 263:     int minute_first_flag = 0;
  1079   000A60  0E00               	movlw	0
  1080   000A62  6E11               	movwf	(startTimer@minute_first_flag+1)^0,c
  1081   000A64  0E00               	movlw	0
  1082   000A66  6E10               	movwf	startTimer@minute_first_flag^0,c
  1083                           
  1084                           ;main.c: 264:     int minute_second_flag = 0;
  1085   000A68  0E00               	movlw	0
  1086   000A6A  6E13               	movwf	(startTimer@minute_second_flag+1)^0,c
  1087   000A6C  0E00               	movlw	0
  1088   000A6E  6E12               	movwf	startTimer@minute_second_flag^0,c
  1089   000A70                     
  1090                           ;main.c: 267:     LATAbits.LATA0 = 0;
  1091   000A70  9089               	bcf	137,0,c	;volatile
  1092   000A72                     
  1093                           ;main.c: 268:     LATAbits.LATA1 = 0;
  1094   000A72  9289               	bcf	137,1,c	;volatile
  1095   000A74                     
  1096                           ;main.c: 269:     LATAbits.LATA2 = 0;
  1097   000A74  9489               	bcf	137,2,c	;volatile
  1098   000A76                     
  1099                           ;main.c: 270:     LATAbits.LATA3 = 0;
  1100   000A76  9689               	bcf	137,3,c	;volatile
  1101   000A78                     
  1102                           ;main.c: 273:     hour_first_digit = EEPROM_Read(0x0A);
  1103   000A78  0E0A               	movlw	10
  1104   000A7A  EC1E  F00B         	call	_EEPROM_Read
  1105   000A7E  6E0D               	movwf	??_startTimer^0,c
  1106   000A80  500D               	movf	??_startTimer^0,w,c
  1107   000A82  6E41               	movwf	_hour_first_digit^0,c
  1108   000A84  6A42               	clrf	(_hour_first_digit+1)^0,c
  1109   000A86                     
  1110                           ;main.c: 274:     hour_second_digit = EEPROM_Read(0x0B);
  1111   000A86  0E0B               	movlw	11
  1112   000A88  EC1E  F00B         	call	_EEPROM_Read
  1113   000A8C  6E0D               	movwf	??_startTimer^0,c
  1114   000A8E  500D               	movf	??_startTimer^0,w,c
  1115   000A90  6E3F               	movwf	_hour_second_digit^0,c
  1116   000A92  6A40               	clrf	(_hour_second_digit+1)^0,c
  1117   000A94  EFC1  F006         	goto	l2017
  1118   000A98                     l1897:
  1119                           
  1120                           ;main.c: 277:     {;main.c: 278:         seven_segment_config();
  1121   000A98  EC35  F00B         	call	_seven_segment_config	;wreg free
  1122   000A9C                     
  1123                           ;main.c: 280:         hour_first_flag = hour_first_flag + 1;
  1124   000A9C  0E01               	movlw	1
  1125   000A9E  240E               	addwf	startTimer@hour_first_flag^0,w,c
  1126   000AA0  6E0E               	movwf	startTimer@hour_first_flag^0,c
  1127   000AA2  0E00               	movlw	0
  1128   000AA4  200F               	addwfc	(startTimer@hour_first_flag+1)^0,w,c
  1129   000AA6  6E0F               	movwf	(startTimer@hour_first_flag+1)^0,c
  1130   000AA8                     
  1131                           ;main.c: 282:         if (hour_first_flag > 1)
  1132   000AA8  BE0F               	btfsc	(startTimer@hour_first_flag+1)^0,7,c
  1133   000AAA  EF60  F005         	goto	u831
  1134   000AAE  500F               	movf	(startTimer@hour_first_flag+1)^0,w,c
  1135   000AB0  E109               	bnz	u830
  1136   000AB2  0E02               	movlw	2
  1137   000AB4  5C0E               	subwf	startTimer@hour_first_flag^0,w,c
  1138   000AB6  A0D8               	btfss	status,0,c
  1139   000AB8  EF60  F005         	goto	u831
  1140   000ABC  EF62  F005         	goto	u830
  1141   000AC0                     u831:
  1142   000AC0  EFB7  F006         	goto	l2013
  1143   000AC4                     u830:
  1144   000AC4                     
  1145                           ;main.c: 283:             hour_second_digit = 9;
  1146   000AC4  0E00               	movlw	0
  1147   000AC6  6E40               	movwf	(_hour_second_digit+1)^0,c
  1148   000AC8  0E09               	movlw	9
  1149   000ACA  6E3F               	movwf	_hour_second_digit^0,c
  1150   000ACC  EFB7  F006         	goto	l2013
  1151   000AD0                     l1905:
  1152                           
  1153                           ;main.c: 286:         {;main.c: 288:             minute_first_flag = minute_first_flag +
      +                           1;
  1154   000AD0  0E01               	movlw	1
  1155   000AD2  2410               	addwf	startTimer@minute_first_flag^0,w,c
  1156   000AD4  6E10               	movwf	startTimer@minute_first_flag^0,c
  1157   000AD6  0E00               	movlw	0
  1158   000AD8  2011               	addwfc	(startTimer@minute_first_flag+1)^0,w,c
  1159   000ADA  6E11               	movwf	(startTimer@minute_first_flag+1)^0,c
  1160   000ADC                     
  1161                           ;main.c: 290:             seven_segment_config();
  1162   000ADC  EC35  F00B         	call	_seven_segment_config	;wreg free
  1163   000AE0                     
  1164                           ;main.c: 292:             if (minute_first_flag > 1)
  1165   000AE0  BE11               	btfsc	(startTimer@minute_first_flag+1)^0,7,c
  1166   000AE2  EF7C  F005         	goto	u841
  1167   000AE6  5011               	movf	(startTimer@minute_first_flag+1)^0,w,c
  1168   000AE8  E109               	bnz	u840
  1169   000AEA  0E02               	movlw	2
  1170   000AEC  5C10               	subwf	startTimer@minute_first_flag^0,w,c
  1171   000AEE  A0D8               	btfss	status,0,c
  1172   000AF0  EF7C  F005         	goto	u841
  1173   000AF4  EF7E  F005         	goto	u840
  1174   000AF8                     u841:
  1175   000AF8  EF84  F005         	goto	l1913
  1176   000AFC                     u840:
  1177   000AFC                     
  1178                           ;main.c: 293:             {;main.c: 294:                 minute_first_digit = 5;
  1179   000AFC  0E00               	movlw	0
  1180   000AFE  6E3E               	movwf	(_minute_first_digit+1)^0,c
  1181   000B00  0E05               	movlw	5
  1182   000B02  6E3D               	movwf	_minute_first_digit^0,c
  1183                           
  1184                           ;main.c: 295:             }
  1185   000B04  EF99  F006         	goto	l2005
  1186   000B08                     l1913:
  1187                           
  1188                           ;main.c: 297:             {;main.c: 298:                 minute_first_digit = EEPROM_Rea
      +                          d(0x0C);
  1189   000B08  0E0C               	movlw	12
  1190   000B0A  EC1E  F00B         	call	_EEPROM_Read
  1191   000B0E  6E0D               	movwf	??_startTimer^0,c
  1192   000B10  500D               	movf	??_startTimer^0,w,c
  1193   000B12  6E3D               	movwf	_minute_first_digit^0,c
  1194   000B14  6A3E               	clrf	(_minute_first_digit+1)^0,c
  1195                           
  1196                           ;main.c: 299:                 minute_second_digit = EEPROM_Read(0x0D);
  1197   000B16  0E0D               	movlw	13
  1198   000B18  EC1E  F00B         	call	_EEPROM_Read
  1199   000B1C  6E0D               	movwf	??_startTimer^0,c
  1200   000B1E  500D               	movf	??_startTimer^0,w,c
  1201   000B20  6E3B               	movwf	_minute_second_digit^0,c
  1202   000B22  6A3C               	clrf	(_minute_second_digit+1)^0,c
  1203   000B24  EF99  F006         	goto	l2005
  1204   000B28                     l1915:
  1205                           
  1206                           ;main.c: 303:             {;main.c: 304:                 minute_second_flag = minute_sec
      +                          ond_flag + 1;
  1207   000B28  0E01               	movlw	1
  1208   000B2A  2412               	addwf	startTimer@minute_second_flag^0,w,c
  1209   000B2C  6E12               	movwf	startTimer@minute_second_flag^0,c
  1210   000B2E  0E00               	movlw	0
  1211   000B30  2013               	addwfc	(startTimer@minute_second_flag+1)^0,w,c
  1212   000B32  6E13               	movwf	(startTimer@minute_second_flag+1)^0,c
  1213                           
  1214                           ;main.c: 306:                 if (minute_second_flag > 1)
  1215   000B34  BE13               	btfsc	(startTimer@minute_second_flag+1)^0,7,c
  1216   000B36  EFA6  F005         	goto	u851
  1217   000B3A  5013               	movf	(startTimer@minute_second_flag+1)^0,w,c
  1218   000B3C  E109               	bnz	u850
  1219   000B3E  0E02               	movlw	2
  1220   000B40  5C12               	subwf	startTimer@minute_second_flag^0,w,c
  1221   000B42  A0D8               	btfss	status,0,c
  1222   000B44  EFA6  F005         	goto	u851
  1223   000B48  EFA8  F005         	goto	u850
  1224   000B4C                     u851:
  1225   000B4C  EF7B  F006         	goto	l1997
  1226   000B50                     u850:
  1227   000B50                     
  1228                           ;main.c: 307:                     minute_second_digit = 9;
  1229   000B50  0E00               	movlw	0
  1230   000B52  6E3C               	movwf	(_minute_second_digit+1)^0,c
  1231   000B54  0E09               	movlw	9
  1232   000B56  6E3B               	movwf	_minute_second_digit^0,c
  1233   000B58  EF7B  F006         	goto	l1997
  1234   000B5C                     l1919:
  1235                           
  1236                           ;main.c: 311:                 {;main.c: 314:                     if ((hour_first_digit =
      +                          = 0) && (hour_second_digit == 0) && (minute_first_digit == 0) && (minute_second_digit ==
      +                           0))
  1237   000B5C  5041               	movf	_hour_first_digit^0,w,c
  1238   000B5E  1042               	iorwf	(_hour_first_digit+1)^0,w,c
  1239   000B60  A4D8               	btfss	status,2,c
  1240   000B62  EFB5  F005         	goto	u861
  1241   000B66  EFB7  F005         	goto	u860
  1242   000B6A                     u861:
  1243   000B6A  EFD8  F005         	goto	l1929
  1244   000B6E                     u860:
  1245   000B6E  503F               	movf	_hour_second_digit^0,w,c
  1246   000B70  1040               	iorwf	(_hour_second_digit+1)^0,w,c
  1247   000B72  A4D8               	btfss	status,2,c
  1248   000B74  EFBE  F005         	goto	u871
  1249   000B78  EFC0  F005         	goto	u870
  1250   000B7C                     u871:
  1251   000B7C  EFD8  F005         	goto	l1929
  1252   000B80                     u870:
  1253   000B80  503D               	movf	_minute_first_digit^0,w,c
  1254   000B82  103E               	iorwf	(_minute_first_digit+1)^0,w,c
  1255   000B84  A4D8               	btfss	status,2,c
  1256   000B86  EFC7  F005         	goto	u881
  1257   000B8A  EFC9  F005         	goto	u880
  1258   000B8E                     u881:
  1259   000B8E  EFD8  F005         	goto	l1929
  1260   000B92                     u880:
  1261   000B92  503B               	movf	_minute_second_digit^0,w,c
  1262   000B94  103C               	iorwf	(_minute_second_digit+1)^0,w,c
  1263   000B96  A4D8               	btfss	status,2,c
  1264   000B98  EFD0  F005         	goto	u891
  1265   000B9C  EFD2  F005         	goto	u890
  1266   000BA0                     u891:
  1267   000BA0  EFD8  F005         	goto	l1929
  1268   000BA4                     u890:
  1269   000BA4                     
  1270                           ;main.c: 315:                     {;main.c: 316:                         timeUp = 1;
  1271   000BA4  0E00               	movlw	0
  1272   000BA6  6E15               	movwf	(startTimer@timeUp+1)^0,c
  1273   000BA8  0E01               	movlw	1
  1274   000BAA  6E14               	movwf	startTimer@timeUp^0,c
  1275                           
  1276                           ;main.c: 317:                         break;
  1277   000BAC  EF82  F006         	goto	l1999
  1278   000BB0                     l1929:
  1279                           
  1280                           ;main.c: 320:                     for (DEL = 4990; DEL > 0; DEL--)
  1281   000BB0  0E13               	movlw	19
  1282   000BB2  6E3A               	movwf	(_DEL+1)^0,c
  1283   000BB4  0E7E               	movlw	126
  1284   000BB6  6E39               	movwf	_DEL^0,c
  1285   000BB8                     l1935:
  1286                           
  1287                           ;main.c: 321:                     {;main.c: 323:                         green_led();
  1288   000BB8  EC2A  F00B         	call	_green_led	;wreg free
  1289   000BBC                     
  1290                           ;main.c: 324:                         LATCbits.LATC3 = 1;
  1291   000BBC  868B               	bsf	139,3,c	;volatile
  1292   000BBE                     
  1293                           ;main.c: 327:                         LATAbits.LATA0 = 1;
  1294   000BBE  8089               	bsf	137,0,c	;volatile
  1295   000BC0                     
  1296                           ;main.c: 328:                         PORTB = segment[hour_first_digit];
  1297   000BC0  0E2B               	movlw	low _segment
  1298   000BC2  2441               	addwf	_hour_first_digit^0,w,c
  1299   000BC4  6ED9               	movwf	fsr2l,c
  1300   000BC6  0E00               	movlw	high _segment
  1301   000BC8  2042               	addwfc	(_hour_first_digit+1)^0,w,c
  1302   000BCA  6EDA               	movwf	fsr2h,c
  1303   000BCC  50DF               	movf	indf2,w,c
  1304   000BCE  6E81               	movwf	129,c	;volatile
  1305   000BD0                     
  1306                           ;main.c: 329:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1307   000BD0  0E3F               	movlw	63
  1308   000BD2  6E0D               	movwf	??_startTimer^0,c
  1309   000BD4  0E55               	movlw	85
  1310   000BD6                     u1407:
  1311   000BD6  2EE8               	decfsz	wreg,f,c
  1312   000BD8  D7FE               	bra	u1407
  1313   000BDA  2E0D               	decfsz	??_startTimer^0,f,c
  1314   000BDC  D7FC               	bra	u1407
  1315   000BDE  F000               	nop	
  1316   000BE0                     
  1317                           ;main.c: 330:                         LATAbits.LATA0 = 0;
  1318   000BE0  9089               	bcf	137,0,c	;volatile
  1319   000BE2                     
  1320                           ;main.c: 334:                         LATAbits.LATA1 = 1;
  1321   000BE2  8289               	bsf	137,1,c	;volatile
  1322   000BE4                     
  1323                           ;main.c: 335:                         PORTB = segment[hour_second_digit];
  1324   000BE4  0E2B               	movlw	low _segment
  1325   000BE6  243F               	addwf	_hour_second_digit^0,w,c
  1326   000BE8  6ED9               	movwf	fsr2l,c
  1327   000BEA  0E00               	movlw	high _segment
  1328   000BEC  2040               	addwfc	(_hour_second_digit+1)^0,w,c
  1329   000BEE  6EDA               	movwf	fsr2h,c
  1330   000BF0  50DF               	movf	indf2,w,c
  1331   000BF2  6E81               	movwf	129,c	;volatile
  1332   000BF4                     
  1333                           ;main.c: 336:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1334   000BF4  0E3F               	movlw	63
  1335   000BF6  6E0D               	movwf	??_startTimer^0,c
  1336   000BF8  0E55               	movlw	85
  1337   000BFA                     u1417:
  1338   000BFA  2EE8               	decfsz	wreg,f,c
  1339   000BFC  D7FE               	bra	u1417
  1340   000BFE  2E0D               	decfsz	??_startTimer^0,f,c
  1341   000C00  D7FC               	bra	u1417
  1342   000C02  F000               	nop	
  1343   000C04                     
  1344                           ;main.c: 337:                         LATAbits.LATA1 = 0;
  1345   000C04  9289               	bcf	137,1,c	;volatile
  1346   000C06                     
  1347                           ;main.c: 341:                         LATAbits.LATA2 = 1;
  1348   000C06  8489               	bsf	137,2,c	;volatile
  1349   000C08                     
  1350                           ;main.c: 342:                         PORTB = segment[minute_first_digit];
  1351   000C08  0E2B               	movlw	low _segment
  1352   000C0A  243D               	addwf	_minute_first_digit^0,w,c
  1353   000C0C  6ED9               	movwf	fsr2l,c
  1354   000C0E  0E00               	movlw	high _segment
  1355   000C10  203E               	addwfc	(_minute_first_digit+1)^0,w,c
  1356   000C12  6EDA               	movwf	fsr2h,c
  1357   000C14  50DF               	movf	indf2,w,c
  1358   000C16  6E81               	movwf	129,c	;volatile
  1359   000C18                     
  1360                           ;main.c: 343:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1361   000C18  0E3F               	movlw	63
  1362   000C1A  6E0D               	movwf	??_startTimer^0,c
  1363   000C1C  0E55               	movlw	85
  1364   000C1E                     u1427:
  1365   000C1E  2EE8               	decfsz	wreg,f,c
  1366   000C20  D7FE               	bra	u1427
  1367   000C22  2E0D               	decfsz	??_startTimer^0,f,c
  1368   000C24  D7FC               	bra	u1427
  1369   000C26  F000               	nop	
  1370   000C28                     
  1371                           ;main.c: 344:                         LATAbits.LATA2 = 0;
  1372   000C28  9489               	bcf	137,2,c	;volatile
  1373   000C2A                     
  1374                           ;main.c: 347:                         LATAbits.LATA3 = 1;
  1375   000C2A  8689               	bsf	137,3,c	;volatile
  1376   000C2C                     
  1377                           ;main.c: 348:                         PORTB = segment[minute_second_digit];
  1378   000C2C  0E2B               	movlw	low _segment
  1379   000C2E  243B               	addwf	_minute_second_digit^0,w,c
  1380   000C30  6ED9               	movwf	fsr2l,c
  1381   000C32  0E00               	movlw	high _segment
  1382   000C34  203C               	addwfc	(_minute_second_digit+1)^0,w,c
  1383   000C36  6EDA               	movwf	fsr2h,c
  1384   000C38  50DF               	movf	indf2,w,c
  1385   000C3A  6E81               	movwf	129,c	;volatile
  1386   000C3C                     
  1387                           ;main.c: 349:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1388   000C3C  0E3F               	movlw	63
  1389   000C3E  6E0D               	movwf	??_startTimer^0,c
  1390   000C40  0E55               	movlw	85
  1391   000C42                     u1437:
  1392   000C42  2EE8               	decfsz	wreg,f,c
  1393   000C44  D7FE               	bra	u1437
  1394   000C46  2E0D               	decfsz	??_startTimer^0,f,c
  1395   000C48  D7FC               	bra	u1437
  1396   000C4A  F000               	nop	
  1397   000C4C                     
  1398                           ;main.c: 350:                         LATAbits.LATA3 = 0;
  1399   000C4C  9689               	bcf	137,3,c	;volatile
  1400   000C4E                     
  1401                           ;main.c: 352:                         LATAbits.LATA7 = 0;
  1402   000C4E  9E89               	bcf	137,7,c	;volatile
  1403   000C50                     
  1404                           ;main.c: 354:                         if (DEL % 79 == 0)
  1405   000C50  C039  F001         	movff	_DEL,___awmod@dividend
  1406   000C54  C03A  F002         	movff	_DEL+1,___awmod@dividend+1
  1407   000C58  0E00               	movlw	0
  1408   000C5A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1409   000C5C  0E4F               	movlw	79
  1410   000C5E  6E03               	movwf	___awmod@divisor^0,c
  1411   000C60  EC42  F009         	call	___awmod	;wreg free
  1412   000C64  5001               	movf	?___awmod^0,w,c
  1413   000C66  1002               	iorwf	(?___awmod+1)^0,w,c
  1414   000C68  A4D8               	btfss	status,2,c
  1415   000C6A  EF39  F006         	goto	u901
  1416   000C6E  EF3B  F006         	goto	u900
  1417   000C72                     u901:
  1418   000C72  EF47  F006         	goto	l1983
  1419   000C76                     u900:
  1420   000C76                     
  1421                           ;main.c: 355:                         {;main.c: 356:                             LATAbit
      +                          s.LATA1 = 1;
  1422   000C76  8289               	bsf	137,1,c	;volatile
  1423   000C78                     
  1424                           ;main.c: 357:                             PORTB = 0x80;
  1425   000C78  0E80               	movlw	128
  1426   000C7A  6E81               	movwf	129,c	;volatile
  1427   000C7C                     
  1428                           ;main.c: 358:                             _delay((unsigned long)((3)*(64000000/4000.0)))
      +                          ;
  1429   000C7C  0E3F               	movlw	63
  1430   000C7E  6E0D               	movwf	??_startTimer^0,c
  1431   000C80  0E55               	movlw	85
  1432   000C82                     u1447:
  1433   000C82  2EE8               	decfsz	wreg,f,c
  1434   000C84  D7FE               	bra	u1447
  1435   000C86  2E0D               	decfsz	??_startTimer^0,f,c
  1436   000C88  D7FC               	bra	u1447
  1437   000C8A  F000               	nop	
  1438   000C8C                     
  1439                           ;main.c: 359:                             LATAbits.LATA1 = 0;
  1440   000C8C  9289               	bcf	137,1,c	;volatile
  1441   000C8E                     l1983:
  1442                           
  1443                           ;main.c: 363:                         if (PORTCbits.RC2 == 0)
  1444   000C8E  B482               	btfsc	130,2,c	;volatile
  1445   000C90  EF4C  F006         	goto	u911
  1446   000C94  EF4E  F006         	goto	u910
  1447   000C98                     u911:
  1448   000C98  EF54  F006         	goto	l1987
  1449   000C9C                     u910:
  1450   000C9C                     
  1451                           ;main.c: 364:                         {;main.c: 365:                             RESET =
      +                           1;
  1452   000C9C  0E00               	movlw	0
  1453   000C9E  6E17               	movwf	(startTimer@RESET+1)^0,c
  1454   000CA0  0E01               	movlw	1
  1455   000CA2  6E16               	movwf	startTimer@RESET^0,c
  1456                           
  1457                           ;main.c: 366:                             break;
  1458   000CA4  EF64  F006         	goto	l1991
  1459   000CA8                     l1987:
  1460                           
  1461                           ;main.c: 368:                     }
  1462   000CA8  0639               	decf	_DEL^0,f,c
  1463   000CAA  A0D8               	btfss	status,0,c
  1464   000CAC  063A               	decf	(_DEL+1)^0,f,c
  1465   000CAE  BE3A               	btfsc	(_DEL+1)^0,7,c
  1466   000CB0  EF64  F006         	goto	u920
  1467   000CB4  503A               	movf	(_DEL+1)^0,w,c
  1468   000CB6  E106               	bnz	u921
  1469   000CB8  0439               	decf	_DEL^0,w,c
  1470   000CBA  B0D8               	btfsc	status,0,c
  1471   000CBC  EF62  F006         	goto	u921
  1472   000CC0  EF64  F006         	goto	u920
  1473   000CC4                     u921:
  1474   000CC4  EFDC  F005         	goto	l1935
  1475   000CC8                     u920:
  1476   000CC8                     l1991:
  1477                           
  1478                           ;main.c: 370:                     if (RESET || timeUp)
  1479   000CC8  5016               	movf	startTimer@RESET^0,w,c
  1480   000CCA  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1481   000CCC  A4D8               	btfss	status,2,c
  1482   000CCE  EF6B  F006         	goto	u931
  1483   000CD2  EF6D  F006         	goto	u930
  1484   000CD6                     u931:
  1485   000CD6  EF82  F006         	goto	l1999
  1486   000CDA                     u930:
  1487   000CDA  5014               	movf	startTimer@timeUp^0,w,c
  1488   000CDC  1015               	iorwf	(startTimer@timeUp+1)^0,w,c
  1489   000CDE  B4D8               	btfsc	status,2,c
  1490   000CE0  EF74  F006         	goto	u941
  1491   000CE4  EF76  F006         	goto	u940
  1492   000CE8                     u941:
  1493   000CE8  EF78  F006         	goto	l1995
  1494   000CEC                     u940:
  1495   000CEC  EF82  F006         	goto	l1999
  1496   000CF0                     l1995:
  1497                           
  1498                           ;main.c: 373:                 }
  1499   000CF0  063B               	decf	_minute_second_digit^0,f,c
  1500   000CF2  A0D8               	btfss	status,0,c
  1501   000CF4  063C               	decf	(_minute_second_digit+1)^0,f,c
  1502   000CF6                     l1997:
  1503   000CF6  BE3C               	btfsc	(_minute_second_digit+1)^0,7,c
  1504   000CF8  EF82  F006         	goto	u950
  1505   000CFC  EF80  F006         	goto	u951
  1506   000D00                     u951:
  1507   000D00  EFAE  F005         	goto	l1919
  1508   000D04                     u950:
  1509   000D04                     l1999:
  1510                           
  1511                           ;main.c: 375:                 if (RESET || timeUp)
  1512   000D04  5016               	movf	startTimer@RESET^0,w,c
  1513   000D06  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1514   000D08  A4D8               	btfss	status,2,c
  1515   000D0A  EF89  F006         	goto	u961
  1516   000D0E  EF8B  F006         	goto	u960
  1517   000D12                     u961:
  1518   000D12  EFA0  F006         	goto	l2007
  1519   000D16                     u960:
  1520   000D16  5014               	movf	startTimer@timeUp^0,w,c
  1521   000D18  1015               	iorwf	(startTimer@timeUp+1)^0,w,c
  1522   000D1A  B4D8               	btfsc	status,2,c
  1523   000D1C  EF92  F006         	goto	u971
  1524   000D20  EF94  F006         	goto	u970
  1525   000D24                     u971:
  1526   000D24  EF96  F006         	goto	l2003
  1527   000D28                     u970:
  1528   000D28  EFA0  F006         	goto	l2007
  1529   000D2C                     l2003:
  1530                           
  1531                           ;main.c: 378:             }
  1532   000D2C  063D               	decf	_minute_first_digit^0,f,c
  1533   000D2E  A0D8               	btfss	status,0,c
  1534   000D30  063E               	decf	(_minute_first_digit+1)^0,f,c
  1535   000D32                     l2005:
  1536   000D32  BE3E               	btfsc	(_minute_first_digit+1)^0,7,c
  1537   000D34  EFA0  F006         	goto	u980
  1538   000D38  EF9E  F006         	goto	u981
  1539   000D3C                     u981:
  1540   000D3C  EF94  F005         	goto	l1915
  1541   000D40                     u980:
  1542   000D40                     l2007:
  1543                           
  1544                           ;main.c: 380:             if (RESET || timeUp)
  1545   000D40  5016               	movf	startTimer@RESET^0,w,c
  1546   000D42  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1547   000D44  A4D8               	btfss	status,2,c
  1548   000D46  EFA7  F006         	goto	u991
  1549   000D4A  EFA9  F006         	goto	u990
  1550   000D4E                     u991:
  1551   000D4E  EFBE  F006         	goto	l2015
  1552   000D52                     u990:
  1553   000D52  5014               	movf	startTimer@timeUp^0,w,c
  1554   000D54  1015               	iorwf	(startTimer@timeUp+1)^0,w,c
  1555   000D56  B4D8               	btfsc	status,2,c
  1556   000D58  EFB0  F006         	goto	u1001
  1557   000D5C  EFB2  F006         	goto	u1000
  1558   000D60                     u1001:
  1559   000D60  EFB4  F006         	goto	l2011
  1560   000D64                     u1000:
  1561   000D64  EFBE  F006         	goto	l2015
  1562   000D68                     l2011:
  1563                           
  1564                           ;main.c: 383:         }
  1565   000D68  063F               	decf	_hour_second_digit^0,f,c
  1566   000D6A  A0D8               	btfss	status,0,c
  1567   000D6C  0640               	decf	(_hour_second_digit+1)^0,f,c
  1568   000D6E                     l2013:
  1569   000D6E  BE40               	btfsc	(_hour_second_digit+1)^0,7,c
  1570   000D70  EFBE  F006         	goto	u1010
  1571   000D74  EFBC  F006         	goto	u1011
  1572   000D78                     u1011:
  1573   000D78  EF68  F005         	goto	l1905
  1574   000D7C                     u1010:
  1575   000D7C                     l2015:
  1576                           
  1577                           ;main.c: 384:     }
  1578   000D7C  0641               	decf	_hour_first_digit^0,f,c
  1579   000D7E  A0D8               	btfss	status,0,c
  1580   000D80  0642               	decf	(_hour_first_digit+1)^0,f,c
  1581   000D82                     l2017:
  1582   000D82  BE42               	btfsc	(_hour_first_digit+1)^0,7,c
  1583   000D84  EFC8  F006         	goto	u1020
  1584   000D88  EFC6  F006         	goto	u1021
  1585   000D8C                     u1021:
  1586   000D8C  EF4C  F005         	goto	l1897
  1587   000D90                     u1020:
  1588   000D90                     
  1589                           ;main.c: 386:     LATAbits.LATA7 = 1;
  1590   000D90  8E89               	bsf	137,7,c	;volatile
  1591   000D92                     
  1592                           ;main.c: 388:     if (RESET)
  1593   000D92  5016               	movf	startTimer@RESET^0,w,c
  1594   000D94  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1595   000D96  B4D8               	btfsc	status,2,c
  1596   000D98  EFD0  F006         	goto	u1031
  1597   000D9C  EFD2  F006         	goto	u1030
  1598   000DA0                     u1031:
  1599   000DA0  EFD6  F006         	goto	l171
  1600   000DA4                     u1030:
  1601   000DA4                     
  1602                           ;main.c: 389:     {;main.c: 390:         stopTimer();
  1603   000DA4  EC4C  F00A         	call	_stopTimer	;wreg free
  1604                           
  1605                           ;main.c: 391:     }
  1606   000DA8  EFD9  F006         	goto	l173
  1607   000DAC                     l171:
  1608                           
  1609                           ;main.c: 393:     {;main.c: 394:         LATCbits.LATC3 = 0;
  1610   000DAC  968B               	bcf	139,3,c	;volatile
  1611   000DAE                     
  1612                           ;main.c: 395:         stopMessage();
  1613   000DAE  EC2C  F00A         	call	_stopMessage	;wreg free
  1614   000DB2                     l173:
  1615   000DB2  0012               	return		;funcret
  1616   000DB4                     __end_of_startTimer:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _stopTimer *****************
  1620 ;; Defined at:
  1621 ;;		line 404 in file "main.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1635 ;;      Params:         0       0       0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0       0
  1637 ;;      Temps:          2       0       0       0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 1
  1642 ;; This function calls:
  1643 ;;		_red_led
  1644 ;;		_seven_segment_config
  1645 ;; This function is called by:
  1646 ;;		_startTimer
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text4
  1652   001498                     __ptext4:
  1653                           	callstack 0
  1654   001498                     _stopTimer:
  1655                           	callstack 29
  1656   001498                     
  1657                           ;main.c: 407:     red_led();
  1658   001498  EC26  F00B         	call	_red_led	;wreg free
  1659   00149C                     
  1660                           ;main.c: 409:     LATCbits.LATC3 = 0;
  1661   00149C  968B               	bcf	139,3,c	;volatile
  1662                           
  1663                           ;main.c: 412:     seven_segment_config();
  1664   00149E  EC35  F00B         	call	_seven_segment_config	;wreg free
  1665   0014A2                     
  1666                           ;main.c: 414:     segmentCounter = 0;
  1667   0014A2  0E00               	movlw	0
  1668   0014A4  6E43               	movwf	_segmentCounter^0,c
  1669   0014A6                     
  1670                           ;main.c: 415:     PORTB = segment[segmentCounter];
  1671   0014A6  0E2B               	movlw	low _segment
  1672   0014A8  2443               	addwf	_segmentCounter^0,w,c
  1673   0014AA  6ED9               	movwf	fsr2l,c
  1674   0014AC  6ADA               	clrf	fsr2h,c
  1675   0014AE  0E00               	movlw	high _segment
  1676   0014B0  22DA               	addwfc	fsr2h,f,c
  1677   0014B2  50DF               	movf	indf2,w,c
  1678   0014B4  6E81               	movwf	129,c	;volatile
  1679   0014B6                     
  1680                           ;main.c: 416:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1681   0014B6  0E09               	movlw	9
  1682   0014B8  6E02               	movwf	(??_stopTimer+1)^0,c
  1683   0014BA  0E1E               	movlw	30
  1684   0014BC  6E01               	movwf	??_stopTimer^0,c
  1685   0014BE  0EE4               	movlw	228
  1686   0014C0                     u1457:
  1687   0014C0  2EE8               	decfsz	wreg,f,c
  1688   0014C2  D7FE               	bra	u1457
  1689   0014C4  2E01               	decfsz	??_stopTimer^0,f,c
  1690   0014C6  D7FC               	bra	u1457
  1691   0014C8  2E02               	decfsz	(??_stopTimer+1)^0,f,c
  1692   0014CA  D7FA               	bra	u1457
  1693   0014CC  D000               	nop2	
  1694   0014CE                     
  1695                           ;main.c: 418:     LATAbits.LATA7 = 0;
  1696   0014CE  9E89               	bcf	137,7,c	;volatile
  1697   0014D0  0012               	return		;funcret
  1698   0014D2                     __end_of_stopTimer:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _seven_segment_config *****************
  1702 ;; Defined at:
  1703 ;;		line 229 in file "main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		None
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1717 ;;      Params:         0       0       0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_startTimer
  1727 ;;		_stopTimer
  1728 ;;		_startUpcounter
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text5
  1733   00166A                     __ptext5:
  1734                           	callstack 0
  1735   00166A                     _seven_segment_config:
  1736                           	callstack 29
  1737   00166A  0012               	return		;funcret
  1738   00166C                     __end_of_seven_segment_config:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _stopMessage *****************
  1742 ;; Defined at:
  1743 ;;		line 425 in file "main.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  DEL             2    0        unsigned int 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1757 ;;      Params:         0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0
  1759 ;;      Temps:          2       0       0       0       0       0       0
  1760 ;;      Totals:         2       0       0       0       0       0       0
  1761 ;;Total ram usage:        2 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 5
  1764 ;; This function calls:
  1765 ;;		_LCD_CLR
  1766 ;;		_LCD_Init
  1767 ;;		_LCD_Set_Cursor
  1768 ;;		_LCD_Write_String
  1769 ;;		_red_led
  1770 ;; This function is called by:
  1771 ;;		_startTimer
  1772 ;;		_startUpcounter
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text6
  1777   001458                     __ptext6:
  1778                           	callstack 0
  1779   001458                     _stopMessage:
  1780                           	callstack 24
  1781   001458                     
  1782                           ;main.c: 427:     unsigned int DEL;;main.c: 429:     red_led();
  1783   001458  EC26  F00B         	call	_red_led	;wreg free
  1784   00145C                     
  1785                           ;main.c: 431:     LCD_Init((0x38 << 1));
  1786   00145C  0E70               	movlw	112
  1787   00145E  EC69  F008         	call	_LCD_Init
  1788   001462                     
  1789                           ;main.c: 433:     LCD_Set_Cursor(1, 7);
  1790   001462  0E07               	movlw	7
  1791   001464  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  1792   001466  0E01               	movlw	1
  1793   001468  EC9A  F009         	call	_LCD_Set_Cursor
  1794   00146C                     
  1795                           ;main.c: 434:     LCD_Write_String("OVER");
  1796   00146C  0E01               	movlw	low STR_1
  1797   00146E  6E05               	movwf	LCD_Write_String@Str^0,c
  1798   001470  0E06               	movlw	high STR_1
  1799   001472  6E06               	movwf	(LCD_Write_String@Str+1)^0,c
  1800   001474  EC01  F00A         	call	_LCD_Write_String	;wreg free
  1801   001478                     
  1802                           ;main.c: 436:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1803   001478  0E29               	movlw	41
  1804   00147A  6E0C               	movwf	(??_stopMessage+1)^0,c
  1805   00147C  0E96               	movlw	150
  1806   00147E  6E0B               	movwf	??_stopMessage^0,c
  1807   001480  0E7F               	movlw	127
  1808   001482                     u1467:
  1809   001482  2EE8               	decfsz	wreg,f,c
  1810   001484  D7FE               	bra	u1467
  1811   001486  2E0B               	decfsz	??_stopMessage^0,f,c
  1812   001488  D7FC               	bra	u1467
  1813   00148A  2E0C               	decfsz	(??_stopMessage+1)^0,f,c
  1814   00148C  D7FA               	bra	u1467
  1815   00148E  F000               	nop	
  1816   001490                     
  1817                           ;main.c: 438:     LCD_CLR();
  1818   001490  EC16  F00B         	call	_LCD_CLR	;wreg free
  1819   001494                     
  1820                           ;main.c: 439:     LATAbits.LATA7 = 0;
  1821   001494  9E89               	bcf	137,7,c	;volatile
  1822   001496  0012               	return		;funcret
  1823   001498                     __end_of_stopMessage:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _red_led *****************
  1827 ;; Defined at:
  1828 ;;		line 196 in file "main.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		None
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1842 ;;      Params:         0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_stopTimer
  1852 ;;		_stopMessage
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text7
  1858   00164C                     __ptext7:
  1859                           	callstack 0
  1860   00164C                     _red_led:
  1861                           	callstack 29
  1862   00164C                     
  1863                           ;main.c: 198:     LATAbits.LATA5 = 0;
  1864   00164C  9A89               	bcf	137,5,c	;volatile
  1865                           
  1866                           ;main.c: 200:     LATAbits.LATA4 = 1;
  1867   00164E  8889               	bsf	137,4,c	;volatile
  1868                           
  1869                           ;main.c: 201:     LATAbits.LATA6 = 1;
  1870   001650  8C89               	bsf	137,6,c	;volatile
  1871   001652  0012               	return		;funcret
  1872   001654                     __end_of_red_led:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _LCD_Write_String *****************
  1876 ;; Defined at:
  1877 ;;		line 137 in file "main.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  Str             2    4[COMRAM] PTR unsigned char 
  1880 ;;		 -> STR_1(5), 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  i               2    8[COMRAM] int 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1892 ;;      Params:         2       0       0       0       0       0       0
  1893 ;;      Locals:         2       0       0       0       0       0       0
  1894 ;;      Temps:          2       0       0       0       0       0       0
  1895 ;;      Totals:         6       0       0       0       0       0       0
  1896 ;;Total ram usage:        6 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 4
  1899 ;; This function calls:
  1900 ;;		_LCD_Write_Char
  1901 ;; This function is called by:
  1902 ;;		_stopMessage
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text8
  1907   001402                     __ptext8:
  1908                           	callstack 0
  1909   001402                     _LCD_Write_String:
  1910                           	callstack 24
  1911   001402                     
  1912                           ;main.c: 137: void LCD_Write_String(char *Str);main.c: 138: {;main.c: 139:     for (int 
      +                          i = 0; Str[i] != '\0'; i++)
  1913   001402  0E00               	movlw	0
  1914   001404  6E0A               	movwf	(LCD_Write_String@i+1)^0,c
  1915   001406  0E00               	movlw	0
  1916   001408  6E09               	movwf	LCD_Write_String@i^0,c
  1917   00140A  EF17  F00A         	goto	l1773
  1918   00140E                     l1769:
  1919                           
  1920                           ;main.c: 140:         LCD_Write_Char(Str[i]);
  1921   00140E  5009               	movf	LCD_Write_String@i^0,w,c
  1922   001410  2405               	addwf	LCD_Write_String@Str^0,w,c
  1923   001412  6E07               	movwf	??_LCD_Write_String^0,c
  1924   001414  500A               	movf	(LCD_Write_String@i+1)^0,w,c
  1925   001416  2006               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  1926   001418  6E08               	movwf	(??_LCD_Write_String+1)^0,c
  1927   00141A  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
  1928   00141E  C008  FFF7         	movff	??_LCD_Write_String+1,tblptrh
  1929   001422                     	if	0	;tblptru may be non-zero
  1930   001422                     	endif
  1931   001422                     	if	0	;tblptru may be non-zero
  1932   001422                     	endif
  1933   001422  0008               	tblrd		*
  1934   001424  50F5               	movf	tablat,w,c
  1935   001426  ECAC  F00A         	call	_LCD_Write_Char
  1936   00142A  4A09               	infsnz	LCD_Write_String@i^0,f,c
  1937   00142C  2A0A               	incf	(LCD_Write_String@i+1)^0,f,c
  1938   00142E                     l1773:
  1939   00142E  5009               	movf	LCD_Write_String@i^0,w,c
  1940   001430  2405               	addwf	LCD_Write_String@Str^0,w,c
  1941   001432  6E07               	movwf	??_LCD_Write_String^0,c
  1942   001434  500A               	movf	(LCD_Write_String@i+1)^0,w,c
  1943   001436  2006               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  1944   001438  6E08               	movwf	(??_LCD_Write_String+1)^0,c
  1945   00143A  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
  1946   00143E  C008  FFF7         	movff	??_LCD_Write_String+1,tblptrh
  1947   001442                     	if	0	;tblptru may be non-zero
  1948   001442                     	endif
  1949   001442                     	if	0	;tblptru may be non-zero
  1950   001442                     	endif
  1951   001442  0008               	tblrd		*
  1952   001444  50F5               	movf	tablat,w,c
  1953   001446  0900               	iorlw	0
  1954   001448  A4D8               	btfss	status,2,c
  1955   00144A  EF29  F00A         	goto	u721
  1956   00144E  EF2B  F00A         	goto	u720
  1957   001452                     u721:
  1958   001452  EF07  F00A         	goto	l1769
  1959   001456                     u720:
  1960   001456  0012               	return		;funcret
  1961   001458                     __end_of_LCD_Write_String:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _LCD_Init *****************
  1965 ;; Defined at:
  1966 ;;		line 83 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  I2C_Add         1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  I2C_Add         1    6[COMRAM] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         0       0       0       0       0       0       0
  1981 ;;      Locals:         1       0       0       0       0       0       0
  1982 ;;      Temps:          2       0       0       0       0       0       0
  1983 ;;      Totals:         3       0       0       0       0       0       0
  1984 ;;Total ram usage:        3 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 4
  1987 ;; This function calls:
  1988 ;;		_IO_Expander_Write
  1989 ;;		_LCD_CMD
  1990 ;; This function is called by:
  1991 ;;		_stopMessage
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text9
  1997   0010D2                     __ptext9:
  1998                           	callstack 0
  1999   0010D2                     _LCD_Init:
  2000                           	callstack 24
  2001                           
  2002                           ;incstack = 0
  2003                           ;LCD_Init@I2C_Add stored from wreg
  2004   0010D2  6E07               	movwf	LCD_Init@I2C_Add^0,c
  2005   0010D4                     
  2006                           ;main.c: 83: void LCD_Init(unsigned char I2C_Add);main.c: 84: {;main.c: 85:     i2c_add 
      +                          = I2C_Add;
  2007   0010D4  C007  F045         	movff	LCD_Init@I2C_Add,_i2c_add
  2008   0010D8                     
  2009                           ;main.c: 86:     IO_Expander_Write(0x00);
  2010   0010D8  0E00               	movlw	0
  2011   0010DA  ECC6  F00A         	call	_IO_Expander_Write
  2012   0010DE                     
  2013                           ;main.c: 87:     _delay((unsigned long)((30)*(64000000/4000.0)));
  2014   0010DE  0E03               	movlw	3
  2015   0010E0  6E06               	movwf	(??_LCD_Init+1)^0,c
  2016   0010E2  0E70               	movlw	112
  2017   0010E4  6E05               	movwf	??_LCD_Init^0,c
  2018   0010E6  0E5C               	movlw	92
  2019   0010E8                     u1477:
  2020   0010E8  2EE8               	decfsz	wreg,f,c
  2021   0010EA  D7FE               	bra	u1477
  2022   0010EC  2E05               	decfsz	??_LCD_Init^0,f,c
  2023   0010EE  D7FC               	bra	u1477
  2024   0010F0  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2025   0010F2  D7FA               	bra	u1477
  2026   0010F4  D000               	nop2	
  2027                           
  2028                           ;main.c: 88:     LCD_CMD(0x03);
  2029   0010F6  0E03               	movlw	3
  2030   0010F8  ECB9  F00A         	call	_LCD_CMD
  2031   0010FC                     
  2032                           ;main.c: 89:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2033   0010FC  0E68               	movlw	104
  2034   0010FE  6E05               	movwf	??_LCD_Init^0,c
  2035   001100  0EE4               	movlw	228
  2036   001102                     u1487:
  2037   001102  2EE8               	decfsz	wreg,f,c
  2038   001104  D7FE               	bra	u1487
  2039   001106  2E05               	decfsz	??_LCD_Init^0,f,c
  2040   001108  D7FC               	bra	u1487
  2041   00110A  D000               	nop2	
  2042   00110C                     
  2043                           ;main.c: 90:     LCD_CMD(0x03);
  2044   00110C  0E03               	movlw	3
  2045   00110E  ECB9  F00A         	call	_LCD_CMD
  2046                           
  2047                           ;main.c: 91:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2048   001112  0E68               	movlw	104
  2049   001114  6E05               	movwf	??_LCD_Init^0,c
  2050   001116  0EE4               	movlw	228
  2051   001118                     u1497:
  2052   001118  2EE8               	decfsz	wreg,f,c
  2053   00111A  D7FE               	bra	u1497
  2054   00111C  2E05               	decfsz	??_LCD_Init^0,f,c
  2055   00111E  D7FC               	bra	u1497
  2056   001120  D000               	nop2	
  2057   001122                     
  2058                           ;main.c: 92:     LCD_CMD(0x03);
  2059   001122  0E03               	movlw	3
  2060   001124  ECB9  F00A         	call	_LCD_CMD
  2061   001128                     
  2062                           ;main.c: 93:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2063   001128  0E68               	movlw	104
  2064   00112A  6E05               	movwf	??_LCD_Init^0,c
  2065   00112C  0EE4               	movlw	228
  2066   00112E                     u1507:
  2067   00112E  2EE8               	decfsz	wreg,f,c
  2068   001130  D7FE               	bra	u1507
  2069   001132  2E05               	decfsz	??_LCD_Init^0,f,c
  2070   001134  D7FC               	bra	u1507
  2071   001136  D000               	nop2	
  2072                           
  2073                           ;main.c: 94:     LCD_CMD(0x02);
  2074   001138  0E02               	movlw	2
  2075   00113A  ECB9  F00A         	call	_LCD_CMD
  2076   00113E                     
  2077                           ;main.c: 95:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2078   00113E  0E68               	movlw	104
  2079   001140  6E05               	movwf	??_LCD_Init^0,c
  2080   001142  0EE4               	movlw	228
  2081   001144                     u1517:
  2082   001144  2EE8               	decfsz	wreg,f,c
  2083   001146  D7FE               	bra	u1517
  2084   001148  2E05               	decfsz	??_LCD_Init^0,f,c
  2085   00114A  D7FC               	bra	u1517
  2086   00114C  D000               	nop2	
  2087   00114E                     
  2088                           ;main.c: 96:     LCD_CMD(0x20 | (2 << 2));
  2089   00114E  0E28               	movlw	40
  2090   001150  ECB9  F00A         	call	_LCD_CMD
  2091                           
  2092                           ;main.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2093   001154  0E05               	movlw	5
  2094   001156  6E06               	movwf	(??_LCD_Init+1)^0,c
  2095   001158  0E0F               	movlw	15
  2096   00115A  6E05               	movwf	??_LCD_Init^0,c
  2097   00115C  0EF1               	movlw	241
  2098   00115E                     u1527:
  2099   00115E  2EE8               	decfsz	wreg,f,c
  2100   001160  D7FE               	bra	u1527
  2101   001162  2E05               	decfsz	??_LCD_Init^0,f,c
  2102   001164  D7FC               	bra	u1527
  2103   001166  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2104   001168  D7FA               	bra	u1527
  2105   00116A  F000               	nop	
  2106   00116C                     
  2107                           ;main.c: 98:     LCD_CMD(0x0C);
  2108   00116C  0E0C               	movlw	12
  2109   00116E  ECB9  F00A         	call	_LCD_CMD
  2110   001172                     
  2111                           ;main.c: 99:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2112   001172  0E05               	movlw	5
  2113   001174  6E06               	movwf	(??_LCD_Init+1)^0,c
  2114   001176  0E0F               	movlw	15
  2115   001178  6E05               	movwf	??_LCD_Init^0,c
  2116   00117A  0EF1               	movlw	241
  2117   00117C                     u1537:
  2118   00117C  2EE8               	decfsz	wreg,f,c
  2119   00117E  D7FE               	bra	u1537
  2120   001180  2E05               	decfsz	??_LCD_Init^0,f,c
  2121   001182  D7FC               	bra	u1537
  2122   001184  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2123   001186  D7FA               	bra	u1537
  2124   001188  F000               	nop	
  2125                           
  2126                           ;main.c: 100:     LCD_CMD(0x01);
  2127   00118A  0E01               	movlw	1
  2128   00118C  ECB9  F00A         	call	_LCD_CMD
  2129   001190                     
  2130                           ;main.c: 101:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2131   001190  0E05               	movlw	5
  2132   001192  6E06               	movwf	(??_LCD_Init+1)^0,c
  2133   001194  0E0F               	movlw	15
  2134   001196  6E05               	movwf	??_LCD_Init^0,c
  2135   001198  0EF1               	movlw	241
  2136   00119A                     u1547:
  2137   00119A  2EE8               	decfsz	wreg,f,c
  2138   00119C  D7FE               	bra	u1547
  2139   00119E  2E05               	decfsz	??_LCD_Init^0,f,c
  2140   0011A0  D7FC               	bra	u1547
  2141   0011A2  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2142   0011A4  D7FA               	bra	u1547
  2143   0011A6  F000               	nop	
  2144   0011A8                     
  2145                           ;main.c: 102:     LCD_CMD(0x04 | 0x02);
  2146   0011A8  0E06               	movlw	6
  2147   0011AA  ECB9  F00A         	call	_LCD_CMD
  2148                           
  2149                           ;main.c: 103:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2150   0011AE  0E05               	movlw	5
  2151   0011B0  6E06               	movwf	(??_LCD_Init+1)^0,c
  2152   0011B2  0E0F               	movlw	15
  2153   0011B4  6E05               	movwf	??_LCD_Init^0,c
  2154   0011B6  0EF1               	movlw	241
  2155   0011B8                     u1557:
  2156   0011B8  2EE8               	decfsz	wreg,f,c
  2157   0011BA  D7FE               	bra	u1557
  2158   0011BC  2E05               	decfsz	??_LCD_Init^0,f,c
  2159   0011BE  D7FC               	bra	u1557
  2160   0011C0  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2161   0011C2  D7FA               	bra	u1557
  2162   0011C4  F000               	nop	
  2163   0011C6  0012               	return		;funcret
  2164   0011C8                     __end_of_LCD_Init:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _LCD_CLR *****************
  2168 ;; Defined at:
  2169 ;;		line 186 in file "main.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2183 ;;      Params:         0       0       0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 4
  2190 ;; This function calls:
  2191 ;;		_LCD_CMD
  2192 ;; This function is called by:
  2193 ;;		_stopMessage
  2194 ;;		_startUpcounter
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text10
  2199   00162C                     __ptext10:
  2200                           	callstack 0
  2201   00162C                     _LCD_CLR:
  2202                           	callstack 24
  2203   00162C                     
  2204                           ;main.c: 188:     LCD_CMD(0x01);
  2205   00162C  0E01               	movlw	1
  2206   00162E  ECB9  F00A         	call	_LCD_CMD
  2207   001632                     
  2208                           ;main.c: 189:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2209   001632  0ED5               	movlw	213
  2210   001634                     u1567:
  2211   001634  2EE8               	decfsz	wreg,f,c
  2212   001636  D7FE               	bra	u1567
  2213   001638  F000               	nop	
  2214   00163A  0012               	return		;funcret
  2215   00163C                     __end_of_LCD_CLR:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _green_led *****************
  2219 ;; Defined at:
  2220 ;;		line 204 in file "main.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		None
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2234 ;;      Params:         0       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0
  2237 ;;      Totals:         0       0       0       0       0       0       0
  2238 ;;Total ram usage:        0 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_startTimer
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text11
  2248   001654                     __ptext11:
  2249                           	callstack 0
  2250   001654                     _green_led:
  2251                           	callstack 29
  2252   001654                     
  2253                           ;main.c: 207:     LATAbits.LATA4 = 0;
  2254   001654  9889               	bcf	137,4,c	;volatile
  2255                           
  2256                           ;main.c: 209:     LATAbits.LATA5 = 1;
  2257   001656  8A89               	bsf	137,5,c	;volatile
  2258                           
  2259                           ;main.c: 210:     LATAbits.LATA6 = 1;
  2260   001658  8C89               	bsf	137,6,c	;volatile
  2261   00165A  0012               	return		;funcret
  2262   00165C                     __end_of_green_led:
  2263                           	callstack 0
  2264                           
  2265 ;; *************** function ___awmod *****************
  2266 ;; Defined at:
  2267 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  dividend        2    0[COMRAM] int 
  2270 ;;  divisor         2    2[COMRAM] int 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  sign            1    5[COMRAM] unsigned char 
  2273 ;;  counter         1    4[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  2    0[COMRAM] int 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2283 ;;      Params:         4       0       0       0       0       0       0
  2284 ;;      Locals:         2       0       0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0
  2286 ;;      Totals:         6       0       0       0       0       0       0
  2287 ;;Total ram usage:        6 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_startTimer
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text12
  2297   001284                     __ptext12:
  2298                           	callstack 0
  2299   001284                     ___awmod:
  2300                           	callstack 29
  2301   001284  0E00               	movlw	0
  2302   001286  6E06               	movwf	___awmod@sign^0,c
  2303   001288  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2304   00128A  EF4B  F009         	goto	u740
  2305   00128E  EF49  F009         	goto	u741
  2306   001292                     u741:
  2307   001292  EF51  F009         	goto	l1839
  2308   001296                     u740:
  2309   001296  6C01               	negf	___awmod@dividend^0,c
  2310   001298  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2311   00129A  B0D8               	btfsc	status,0,c
  2312   00129C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2313   00129E  0E01               	movlw	1
  2314   0012A0  6E06               	movwf	___awmod@sign^0,c
  2315   0012A2                     l1839:
  2316   0012A2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2317   0012A4  EF58  F009         	goto	u750
  2318   0012A8  EF56  F009         	goto	u751
  2319   0012AC                     u751:
  2320   0012AC  EF5C  F009         	goto	l1843
  2321   0012B0                     u750:
  2322   0012B0  6C03               	negf	___awmod@divisor^0,c
  2323   0012B2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2324   0012B4  B0D8               	btfsc	status,0,c
  2325   0012B6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2326   0012B8                     l1843:
  2327   0012B8  5003               	movf	___awmod@divisor^0,w,c
  2328   0012BA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2329   0012BC  B4D8               	btfsc	status,2,c
  2330   0012BE  EF63  F009         	goto	u761
  2331   0012C2  EF65  F009         	goto	u760
  2332   0012C6                     u761:
  2333   0012C6  EF89  F009         	goto	l1859
  2334   0012CA                     u760:
  2335   0012CA  0E01               	movlw	1
  2336   0012CC  6E05               	movwf	___awmod@counter^0,c
  2337   0012CE  EF6D  F009         	goto	l1849
  2338   0012D2                     l1847:
  2339   0012D2  90D8               	bcf	status,0,c
  2340   0012D4  3603               	rlcf	___awmod@divisor^0,f,c
  2341   0012D6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2342   0012D8  2A05               	incf	___awmod@counter^0,f,c
  2343   0012DA                     l1849:
  2344   0012DA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2345   0012DC  EF72  F009         	goto	u771
  2346   0012E0  EF74  F009         	goto	u770
  2347   0012E4                     u771:
  2348   0012E4  EF69  F009         	goto	l1847
  2349   0012E8                     u770:
  2350   0012E8                     l1851:
  2351   0012E8  5003               	movf	___awmod@divisor^0,w,c
  2352   0012EA  5C01               	subwf	___awmod@dividend^0,w,c
  2353   0012EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  2354   0012EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2355   0012F0  A0D8               	btfss	status,0,c
  2356   0012F2  EF7D  F009         	goto	u781
  2357   0012F6  EF7F  F009         	goto	u780
  2358   0012FA                     u781:
  2359   0012FA  EF83  F009         	goto	l1855
  2360   0012FE                     u780:
  2361   0012FE  5003               	movf	___awmod@divisor^0,w,c
  2362   001300  5E01               	subwf	___awmod@dividend^0,f,c
  2363   001302  5004               	movf	(___awmod@divisor+1)^0,w,c
  2364   001304  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2365   001306                     l1855:
  2366   001306  90D8               	bcf	status,0,c
  2367   001308  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2368   00130A  3203               	rrcf	___awmod@divisor^0,f,c
  2369   00130C  2E05               	decfsz	___awmod@counter^0,f,c
  2370   00130E  EF74  F009         	goto	l1851
  2371   001312                     l1859:
  2372   001312  5006               	movf	___awmod@sign^0,w,c
  2373   001314  B4D8               	btfsc	status,2,c
  2374   001316  EF8F  F009         	goto	u791
  2375   00131A  EF91  F009         	goto	u790
  2376   00131E                     u791:
  2377   00131E  EF95  F009         	goto	l1863
  2378   001322                     u790:
  2379   001322  6C01               	negf	___awmod@dividend^0,c
  2380   001324  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2381   001326  B0D8               	btfsc	status,0,c
  2382   001328  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2383   00132A                     l1863:
  2384   00132A  C001  F001         	movff	___awmod@dividend,?___awmod
  2385   00132E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2386   001332  0012               	return		;funcret
  2387   001334                     __end_of___awmod:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _display *****************
  2391 ;; Defined at:
  2392 ;;		line 530 in file "main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  buttonCounte    2    8[COMRAM] unsigned int 
  2395 ;;  update          2   10[COMRAM] unsigned int 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  minute_s_dig    2   20[COMRAM] unsigned int 
  2398 ;;  minute_f_dig    2   18[COMRAM] unsigned int 
  2399 ;;  hour_s_digit    2   16[COMRAM] unsigned int 
  2400 ;;  hour_f_digit    2   14[COMRAM] unsigned int 
  2401 ;;  minute_secon    1    0        unsigned char 
  2402 ;;  minute_first    1    0        unsigned char 
  2403 ;;  hour_second_    1    0        unsigned char 
  2404 ;;  hour_first_d    1    0        unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2414 ;;      Params:         4       0       0       0       0       0       0
  2415 ;;      Locals:         8       0       0       0       0       0       0
  2416 ;;      Temps:          2       0       0       0       0       0       0
  2417 ;;      Totals:        14       0       0       0       0       0       0
  2418 ;;Total ram usage:       14 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 5
  2421 ;; This function calls:
  2422 ;;		_EEPROM_Read
  2423 ;;		_EEPROM_Write
  2424 ;;		_LCD_Set_Cursor
  2425 ;;		_LCD_Write_Char
  2426 ;;		___lwmod
  2427 ;;		_inttochar
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text13
  2434   000608                     __ptext13:
  2435                           	callstack 0
  2436   000608                     _display:
  2437                           	callstack 25
  2438   000608                     
  2439                           ;main.c: 530: void display(unsigned int buttonCounter, unsigned int update);main.c: 531:
      +                           {;main.c: 533:     display_function_count = display_function_count + 1;
  2440   000608  0E01               	movlw	1
  2441   00060A  2437               	addwf	_display_function_count^0,w,c
  2442   00060C  6E37               	movwf	_display_function_count^0,c
  2443   00060E  0E00               	movlw	0
  2444   000610  2038               	addwfc	(_display_function_count+1)^0,w,c
  2445   000612  6E38               	movwf	(_display_function_count+1)^0,c
  2446   000614                     
  2447                           ;main.c: 535:     unsigned char hour_first_digit, hour_second_digit, minute_first_digit,
      +                           minute_second_digit;;main.c: 536:     unsigned int hour_f_digit, hour_s_digit, minute_f
      +                          _digit, minute_s_digit;;main.c: 547:        LCD_Set_Cursor(1, 6);
  2448   000614  0E06               	movlw	6
  2449   000616  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2450   000618  0E01               	movlw	1
  2451   00061A  EC9A  F009         	call	_LCD_Set_Cursor
  2452   00061E                     
  2453                           ;main.c: 549:         if (buttonCounter == 1)
  2454   00061E  0409               	decf	display@buttonCounter^0,w,c
  2455   000620  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2456   000622  A4D8               	btfss	status,2,c
  2457   000624  EF16  F003         	goto	u1071
  2458   000628  EF18  F003         	goto	u1070
  2459   00062C                     u1071:
  2460   00062C  EF29  F003         	goto	l2069
  2461   000630                     u1070:
  2462   000630                     
  2463                           ;main.c: 550:         {;main.c: 551:             LCD_Write_Char(' ');
  2464   000630  0E20               	movlw	32
  2465   000632  ECAC  F00A         	call	_LCD_Write_Char
  2466   000636                     
  2467                           ;main.c: 552:              _delay((unsigned long)((200)*(64000000/4000.0)));
  2468   000636  0E11               	movlw	17
  2469   000638  6E0E               	movwf	(??_display+1)^0,c
  2470   00063A  0E3C               	movlw	60
  2471   00063C  6E0D               	movwf	??_display^0,c
  2472   00063E  0ECB               	movlw	203
  2473   000640                     u1577:
  2474   000640  2EE8               	decfsz	wreg,f,c
  2475   000642  D7FE               	bra	u1577
  2476   000644  2E0D               	decfsz	??_display^0,f,c
  2477   000646  D7FC               	bra	u1577
  2478   000648  2E0E               	decfsz	(??_display+1)^0,f,c
  2479   00064A  D7FA               	bra	u1577
  2480   00064C  F000               	nop	
  2481                           
  2482                           ;main.c: 553:         }else{
  2483   00064E  EF34  F003         	goto	l199
  2484   000652                     l2069:
  2485                           
  2486                           ;main.c: 554:             LCD_Write_Char(inttochar(EEPROM_Read(0x0A)));
  2487   000652  0E0A               	movlw	10
  2488   000654  EC1E  F00B         	call	_EEPROM_Read
  2489   000658  6E0D               	movwf	??_display^0,c
  2490   00065A  500D               	movf	??_display^0,w,c
  2491   00065C  6E02               	movwf	inttochar@digit^0,c
  2492   00065E  6A03               	clrf	(inttochar@digit+1)^0,c
  2493   000660  EC32  F00B         	call	_inttochar	;wreg free
  2494   000664  ECAC  F00A         	call	_LCD_Write_Char
  2495   000668                     l199:
  2496                           
  2497                           ;main.c: 558:         LCD_Set_Cursor(1, 8);
  2498   000668  0E08               	movlw	8
  2499   00066A  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2500   00066C  0E01               	movlw	1
  2501   00066E  EC9A  F009         	call	_LCD_Set_Cursor
  2502   000672                     
  2503                           ;main.c: 560:         if (buttonCounter == 2)
  2504   000672  0E02               	movlw	2
  2505   000674  1809               	xorwf	display@buttonCounter^0,w,c
  2506   000676  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2507   000678  A4D8               	btfss	status,2,c
  2508   00067A  EF41  F003         	goto	u1081
  2509   00067E  EF43  F003         	goto	u1080
  2510   000682                     u1081:
  2511   000682  EF54  F003         	goto	l2077
  2512   000686                     u1080:
  2513   000686                     
  2514                           ;main.c: 561:         {;main.c: 562:             LCD_Write_Char(' ');
  2515   000686  0E20               	movlw	32
  2516   000688  ECAC  F00A         	call	_LCD_Write_Char
  2517   00068C                     
  2518                           ;main.c: 563:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2519   00068C  0E11               	movlw	17
  2520   00068E  6E0E               	movwf	(??_display+1)^0,c
  2521   000690  0E3C               	movlw	60
  2522   000692  6E0D               	movwf	??_display^0,c
  2523   000694  0ECB               	movlw	203
  2524   000696                     u1587:
  2525   000696  2EE8               	decfsz	wreg,f,c
  2526   000698  D7FE               	bra	u1587
  2527   00069A  2E0D               	decfsz	??_display^0,f,c
  2528   00069C  D7FC               	bra	u1587
  2529   00069E  2E0E               	decfsz	(??_display+1)^0,f,c
  2530   0006A0  D7FA               	bra	u1587
  2531   0006A2  F000               	nop	
  2532                           
  2533                           ;main.c: 564:         }else{
  2534   0006A4  EF67  F003         	goto	l201
  2535   0006A8                     l2077:
  2536                           
  2537                           ;main.c: 565:             LCD_Write_Char(inttochar(EEPROM_Read(0x0B)));
  2538   0006A8  0E0B               	movlw	11
  2539   0006AA  EC1E  F00B         	call	_EEPROM_Read
  2540   0006AE  6E0D               	movwf	??_display^0,c
  2541   0006B0  500D               	movf	??_display^0,w,c
  2542   0006B2  6E02               	movwf	inttochar@digit^0,c
  2543   0006B4  6A03               	clrf	(inttochar@digit+1)^0,c
  2544   0006B6  EC32  F00B         	call	_inttochar	;wreg free
  2545   0006BA  ECAC  F00A         	call	_LCD_Write_Char
  2546                           
  2547                           ;main.c: 568:             LCD_Set_Cursor(1,9);
  2548   0006BE  0E09               	movlw	9
  2549   0006C0  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2550   0006C2  0E01               	movlw	1
  2551   0006C4  EC9A  F009         	call	_LCD_Set_Cursor
  2552                           
  2553                           ;main.c: 569:             LCD_Write_Char(':');
  2554   0006C8  0E3A               	movlw	58
  2555   0006CA  ECAC  F00A         	call	_LCD_Write_Char
  2556   0006CE                     l201:
  2557                           
  2558                           ;main.c: 574:          LCD_Set_Cursor(1, 10);
  2559   0006CE  0E0A               	movlw	10
  2560   0006D0  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2561   0006D2  0E01               	movlw	1
  2562   0006D4  EC9A  F009         	call	_LCD_Set_Cursor
  2563   0006D8                     
  2564                           ;main.c: 576:         if (buttonCounter == 3)
  2565   0006D8  0E03               	movlw	3
  2566   0006DA  1809               	xorwf	display@buttonCounter^0,w,c
  2567   0006DC  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2568   0006DE  A4D8               	btfss	status,2,c
  2569   0006E0  EF74  F003         	goto	u1091
  2570   0006E4  EF76  F003         	goto	u1090
  2571   0006E8                     u1091:
  2572   0006E8  EF87  F003         	goto	l2085
  2573   0006EC                     u1090:
  2574   0006EC                     
  2575                           ;main.c: 577:         {;main.c: 578:             LCD_Write_Char(' ');
  2576   0006EC  0E20               	movlw	32
  2577   0006EE  ECAC  F00A         	call	_LCD_Write_Char
  2578   0006F2                     
  2579                           ;main.c: 579:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2580   0006F2  0E11               	movlw	17
  2581   0006F4  6E0E               	movwf	(??_display+1)^0,c
  2582   0006F6  0E3C               	movlw	60
  2583   0006F8  6E0D               	movwf	??_display^0,c
  2584   0006FA  0ECB               	movlw	203
  2585   0006FC                     u1597:
  2586   0006FC  2EE8               	decfsz	wreg,f,c
  2587   0006FE  D7FE               	bra	u1597
  2588   000700  2E0D               	decfsz	??_display^0,f,c
  2589   000702  D7FC               	bra	u1597
  2590   000704  2E0E               	decfsz	(??_display+1)^0,f,c
  2591   000706  D7FA               	bra	u1597
  2592   000708  F000               	nop	
  2593                           
  2594                           ;main.c: 580:         }else{
  2595   00070A  EF92  F003         	goto	l203
  2596   00070E                     l2085:
  2597                           
  2598                           ;main.c: 581:             LCD_Write_Char(inttochar(EEPROM_Read(0x0C)));
  2599   00070E  0E0C               	movlw	12
  2600   000710  EC1E  F00B         	call	_EEPROM_Read
  2601   000714  6E0D               	movwf	??_display^0,c
  2602   000716  500D               	movf	??_display^0,w,c
  2603   000718  6E02               	movwf	inttochar@digit^0,c
  2604   00071A  6A03               	clrf	(inttochar@digit+1)^0,c
  2605   00071C  EC32  F00B         	call	_inttochar	;wreg free
  2606   000720  ECAC  F00A         	call	_LCD_Write_Char
  2607   000724                     l203:
  2608                           
  2609                           ;main.c: 585:         LCD_Set_Cursor(1, 12);
  2610   000724  0E0C               	movlw	12
  2611   000726  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2612   000728  0E01               	movlw	1
  2613   00072A  EC9A  F009         	call	_LCD_Set_Cursor
  2614   00072E                     
  2615                           ;main.c: 587:         if (buttonCounter == 4)
  2616   00072E  0E04               	movlw	4
  2617   000730  1809               	xorwf	display@buttonCounter^0,w,c
  2618   000732  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2619   000734  A4D8               	btfss	status,2,c
  2620   000736  EF9F  F003         	goto	u1101
  2621   00073A  EFA1  F003         	goto	u1100
  2622   00073E                     u1101:
  2623   00073E  EFB2  F003         	goto	l2093
  2624   000742                     u1100:
  2625   000742                     
  2626                           ;main.c: 588:         {;main.c: 589:             LCD_Write_Char(' ');
  2627   000742  0E20               	movlw	32
  2628   000744  ECAC  F00A         	call	_LCD_Write_Char
  2629   000748                     
  2630                           ;main.c: 590:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2631   000748  0E11               	movlw	17
  2632   00074A  6E0E               	movwf	(??_display+1)^0,c
  2633   00074C  0E3C               	movlw	60
  2634   00074E  6E0D               	movwf	??_display^0,c
  2635   000750  0ECB               	movlw	203
  2636   000752                     u1607:
  2637   000752  2EE8               	decfsz	wreg,f,c
  2638   000754  D7FE               	bra	u1607
  2639   000756  2E0D               	decfsz	??_display^0,f,c
  2640   000758  D7FC               	bra	u1607
  2641   00075A  2E0E               	decfsz	(??_display+1)^0,f,c
  2642   00075C  D7FA               	bra	u1607
  2643   00075E  F000               	nop	
  2644                           
  2645                           ;main.c: 591:         }else{
  2646   000760  EFBD  F003         	goto	l2095
  2647   000764                     l2093:
  2648                           
  2649                           ;main.c: 592:             LCD_Write_Char(inttochar(EEPROM_Read(0x0D)));
  2650   000764  0E0D               	movlw	13
  2651   000766  EC1E  F00B         	call	_EEPROM_Read
  2652   00076A  6E0D               	movwf	??_display^0,c
  2653   00076C  500D               	movf	??_display^0,w,c
  2654   00076E  6E02               	movwf	inttochar@digit^0,c
  2655   000770  6A03               	clrf	(inttochar@digit+1)^0,c
  2656   000772  EC32  F00B         	call	_inttochar	;wreg free
  2657   000776  ECAC  F00A         	call	_LCD_Write_Char
  2658   00077A                     l2095:
  2659                           
  2660                           ;main.c: 595:         LATAbits.LATA7 = 0;
  2661   00077A  9E89               	bcf	137,7,c	;volatile
  2662                           
  2663                           ;main.c: 598:         if ((display_function_count % 12 == 0) || (display_function_count 
      +                          % 6 == 0))
  2664   00077C  C037  F001         	movff	_display_function_count,___lwmod@dividend
  2665   000780  C038  F002         	movff	_display_function_count+1,___lwmod@dividend+1
  2666   000784  0E00               	movlw	0
  2667   000786  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2668   000788  0E0C               	movlw	12
  2669   00078A  6E03               	movwf	___lwmod@divisor^0,c
  2670   00078C  ECCF  F009         	call	___lwmod	;wreg free
  2671   000790  5001               	movf	?___lwmod^0,w,c
  2672   000792  1002               	iorwf	(?___lwmod+1)^0,w,c
  2673   000794  B4D8               	btfsc	status,2,c
  2674   000796  EFCF  F003         	goto	u1111
  2675   00079A  EFD1  F003         	goto	u1110
  2676   00079E                     u1111:
  2677   00079E  EF3A  F004         	goto	l2117
  2678   0007A2                     u1110:
  2679   0007A2  C037  F001         	movff	_display_function_count,___lwmod@dividend
  2680   0007A6  C038  F002         	movff	_display_function_count+1,___lwmod@dividend+1
  2681   0007AA  0E00               	movlw	0
  2682   0007AC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2683   0007AE  0E06               	movlw	6
  2684   0007B0  6E03               	movwf	___lwmod@divisor^0,c
  2685   0007B2  ECCF  F009         	call	___lwmod	;wreg free
  2686   0007B6  5001               	movf	?___lwmod^0,w,c
  2687   0007B8  1002               	iorwf	(?___lwmod+1)^0,w,c
  2688   0007BA  A4D8               	btfss	status,2,c
  2689   0007BC  EFE2  F003         	goto	u1121
  2690   0007C0  EFE4  F003         	goto	u1120
  2691   0007C4                     u1121:
  2692   0007C4  EF58  F004         	goto	l2119
  2693   0007C8                     u1120:
  2694   0007C8  EF3A  F004         	goto	l2117
  2695   0007CC                     l2099:
  2696                           
  2697                           ;main.c: 603:                 LCD_Set_Cursor(1, 6);
  2698   0007CC  0E06               	movlw	6
  2699   0007CE  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2700   0007D0  0E01               	movlw	1
  2701   0007D2  EC9A  F009         	call	_LCD_Set_Cursor
  2702                           
  2703                           ;main.c: 604:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0A)));
  2704   0007D6  0E0A               	movlw	10
  2705   0007D8  EC1E  F00B         	call	_EEPROM_Read
  2706   0007DC  6E0D               	movwf	??_display^0,c
  2707   0007DE  500D               	movf	??_display^0,w,c
  2708   0007E0  6E02               	movwf	inttochar@digit^0,c
  2709   0007E2  6A03               	clrf	(inttochar@digit+1)^0,c
  2710   0007E4  EC32  F00B         	call	_inttochar	;wreg free
  2711   0007E8  ECAC  F00A         	call	_LCD_Write_Char
  2712   0007EC                     l2101:
  2713                           
  2714                           ;main.c: 606:                 _delay((unsigned long)((200)*(64000000/4000.0)));
  2715   0007EC  0E11               	movlw	17
  2716   0007EE  6E0E               	movwf	(??_display+1)^0,c
  2717   0007F0  0E3C               	movlw	60
  2718   0007F2  6E0D               	movwf	??_display^0,c
  2719   0007F4  0ECB               	movlw	203
  2720   0007F6                     u1617:
  2721   0007F6  2EE8               	decfsz	wreg,f,c
  2722   0007F8  D7FE               	bra	u1617
  2723   0007FA  2E0D               	decfsz	??_display^0,f,c
  2724   0007FC  D7FC               	bra	u1617
  2725   0007FE  2E0E               	decfsz	(??_display+1)^0,f,c
  2726   000800  D7FA               	bra	u1617
  2727   000802  F000               	nop	
  2728                           
  2729                           ;main.c: 607:                 break;
  2730   000804  EF58  F004         	goto	l2119
  2731   000808                     l2103:
  2732                           
  2733                           ;main.c: 610:                 LCD_Set_Cursor(1, 8);
  2734   000808  0E08               	movlw	8
  2735   00080A  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2736   00080C  0E01               	movlw	1
  2737   00080E  EC9A  F009         	call	_LCD_Set_Cursor
  2738                           
  2739                           ;main.c: 611:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0B)));
  2740   000812  0E0B               	movlw	11
  2741   000814  EC1E  F00B         	call	_EEPROM_Read
  2742   000818  6E0D               	movwf	??_display^0,c
  2743   00081A  500D               	movf	??_display^0,w,c
  2744   00081C  6E02               	movwf	inttochar@digit^0,c
  2745   00081E  6A03               	clrf	(inttochar@digit+1)^0,c
  2746   000820  EC32  F00B         	call	_inttochar	;wreg free
  2747   000824  ECAC  F00A         	call	_LCD_Write_Char
  2748   000828  EFF6  F003         	goto	l2101
  2749   00082C                     l2107:
  2750                           
  2751                           ;main.c: 617:                 LCD_Set_Cursor(1, 10);
  2752   00082C  0E0A               	movlw	10
  2753   00082E  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2754   000830  0E01               	movlw	1
  2755   000832  EC9A  F009         	call	_LCD_Set_Cursor
  2756                           
  2757                           ;main.c: 618:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0C)));
  2758   000836  0E0C               	movlw	12
  2759   000838  EC1E  F00B         	call	_EEPROM_Read
  2760   00083C  6E0D               	movwf	??_display^0,c
  2761   00083E  500D               	movf	??_display^0,w,c
  2762   000840  6E02               	movwf	inttochar@digit^0,c
  2763   000842  6A03               	clrf	(inttochar@digit+1)^0,c
  2764   000844  EC32  F00B         	call	_inttochar	;wreg free
  2765   000848  ECAC  F00A         	call	_LCD_Write_Char
  2766   00084C  EFF6  F003         	goto	l2101
  2767   000850                     l2111:
  2768                           
  2769                           ;main.c: 624:                 LCD_Set_Cursor(1, 12);
  2770   000850  0E0C               	movlw	12
  2771   000852  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2772   000854  0E01               	movlw	1
  2773   000856  EC9A  F009         	call	_LCD_Set_Cursor
  2774                           
  2775                           ;main.c: 625:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0D)));
  2776   00085A  0E0D               	movlw	13
  2777   00085C  EC1E  F00B         	call	_EEPROM_Read
  2778   000860  6E0D               	movwf	??_display^0,c
  2779   000862  500D               	movf	??_display^0,w,c
  2780   000864  6E02               	movwf	inttochar@digit^0,c
  2781   000866  6A03               	clrf	(inttochar@digit+1)^0,c
  2782   000868  EC32  F00B         	call	_inttochar	;wreg free
  2783   00086C  ECAC  F00A         	call	_LCD_Write_Char
  2784   000870  EFF6  F003         	goto	l2101
  2785   000874                     l2117:
  2786   000874  C009  F00D         	movff	display@buttonCounter,??_display
  2787   000878  C00A  F00E         	movff	display@buttonCounter+1,??_display+1
  2788                           
  2789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2790                           ; Switch size 1, requested type "simple"
  2791                           ; Number of cases is 1, Range of values is 0 to 0
  2792                           ; switch strategies available:
  2793                           ; Name         Instructions Cycles
  2794                           ; simple_byte            4     3 (average)
  2795                           ;	Chosen strategy is simple_byte
  2796   00087C  500E               	movf	(??_display+1)^0,w,c
  2797   00087E  0A00               	xorlw	0	; case 0
  2798   000880  B4D8               	btfsc	status,2,c
  2799   000882  EF45  F004         	goto	l2399
  2800   000886  EF58  F004         	goto	l2119
  2801   00088A                     l2399:
  2802                           
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 4, Range of values is 1 to 4
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte           13     7 (average)
  2808                           ;	Chosen strategy is simple_byte
  2809   00088A  500D               	movf	??_display^0,w,c
  2810   00088C  0A01               	xorlw	1	; case 1
  2811   00088E  B4D8               	btfsc	status,2,c
  2812   000890  EFE6  F003         	goto	l2099
  2813   000894  0A03               	xorlw	3	; case 2
  2814   000896  B4D8               	btfsc	status,2,c
  2815   000898  EF04  F004         	goto	l2103
  2816   00089C  0A01               	xorlw	1	; case 3
  2817   00089E  B4D8               	btfsc	status,2,c
  2818   0008A0  EF16  F004         	goto	l2107
  2819   0008A4  0A07               	xorlw	7	; case 4
  2820   0008A6  B4D8               	btfsc	status,2,c
  2821   0008A8  EF28  F004         	goto	l2111
  2822   0008AC  EF58  F004         	goto	l2119
  2823   0008B0                     l2119:
  2824                           
  2825                           ;main.c: 636:     if (update && (display_function_count % 2 == 0))
  2826   0008B0  500B               	movf	display@update^0,w,c
  2827   0008B2  100C               	iorwf	(display@update+1)^0,w,c
  2828   0008B4  B4D8               	btfsc	status,2,c
  2829   0008B6  EF5F  F004         	goto	u1131
  2830   0008BA  EF61  F004         	goto	u1130
  2831   0008BE                     u1131:
  2832   0008BE  EF14  F005         	goto	l2169
  2833   0008C2                     u1130:
  2834   0008C2  B037               	btfsc	_display_function_count^0,0,c
  2835   0008C4  EF66  F004         	goto	u1141
  2836   0008C8  EF68  F004         	goto	u1140
  2837   0008CC                     u1141:
  2838   0008CC  EF14  F005         	goto	l2169
  2839   0008D0                     u1140:
  2840   0008D0  EFF6  F004         	goto	l2167
  2841   0008D4                     l2125:
  2842                           
  2843                           ;main.c: 641:             hour_f_digit = EEPROM_Read(0x0A) + 1;
  2844   0008D4  0E0A               	movlw	10
  2845   0008D6  EC1E  F00B         	call	_EEPROM_Read
  2846   0008DA  6E0D               	movwf	??_display^0,c
  2847   0008DC  0E01               	movlw	1
  2848   0008DE  240D               	addwf	??_display^0,w,c
  2849   0008E0  6E0F               	movwf	display@hour_f_digit^0,c
  2850   0008E2  6A10               	clrf	(display@hour_f_digit+1)^0,c
  2851   0008E4  0E00               	movlw	0
  2852   0008E6  2210               	addwfc	(display@hour_f_digit+1)^0,f,c
  2853   0008E8                     
  2854                           ;main.c: 643:             if (hour_f_digit > 9)
  2855   0008E8  5010               	movf	(display@hour_f_digit+1)^0,w,c
  2856   0008EA  E109               	bnz	u1150
  2857   0008EC  0E0A               	movlw	10
  2858   0008EE  5C0F               	subwf	display@hour_f_digit^0,w,c
  2859   0008F0  A0D8               	btfss	status,0,c
  2860   0008F2  EF7D  F004         	goto	u1151
  2861   0008F6  EF7F  F004         	goto	u1150
  2862   0008FA                     u1151:
  2863   0008FA  EF83  F004         	goto	l2131
  2864   0008FE                     u1150:
  2865   0008FE                     
  2866                           ;main.c: 644:                 hour_f_digit = 0;
  2867   0008FE  0E00               	movlw	0
  2868   000900  6E10               	movwf	(display@hour_f_digit+1)^0,c
  2869   000902  0E00               	movlw	0
  2870   000904  6E0F               	movwf	display@hour_f_digit^0,c
  2871   000906                     l2131:
  2872                           
  2873                           ;main.c: 645:             EEPROM_Write(0x0A, hour_f_digit);
  2874   000906  C00F  F001         	movff	display@hour_f_digit,EEPROM_Write@data
  2875   00090A  0E0A               	movlw	10
  2876   00090C  EC84  F00A         	call	_EEPROM_Write
  2877   000910                     l2133:
  2878                           
  2879                           ;main.c: 646:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2880   000910  0E05               	movlw	5
  2881   000912  6E0E               	movwf	(??_display+1)^0,c
  2882   000914  0E0F               	movlw	15
  2883   000916  6E0D               	movwf	??_display^0,c
  2884   000918  0EF1               	movlw	241
  2885   00091A                     u1627:
  2886   00091A  2EE8               	decfsz	wreg,f,c
  2887   00091C  D7FE               	bra	u1627
  2888   00091E  2E0D               	decfsz	??_display^0,f,c
  2889   000920  D7FC               	bra	u1627
  2890   000922  2E0E               	decfsz	(??_display+1)^0,f,c
  2891   000924  D7FA               	bra	u1627
  2892   000926  F000               	nop	
  2893                           
  2894                           ;main.c: 647:             break;
  2895   000928  EF14  F005         	goto	l2169
  2896   00092C                     l2135:
  2897                           
  2898                           ;main.c: 649:             hour_s_digit = EEPROM_Read(0x0B) + 1;
  2899   00092C  0E0B               	movlw	11
  2900   00092E  EC1E  F00B         	call	_EEPROM_Read
  2901   000932  6E0D               	movwf	??_display^0,c
  2902   000934  0E01               	movlw	1
  2903   000936  240D               	addwf	??_display^0,w,c
  2904   000938  6E11               	movwf	display@hour_s_digit^0,c
  2905   00093A  6A12               	clrf	(display@hour_s_digit+1)^0,c
  2906   00093C  0E00               	movlw	0
  2907   00093E  2212               	addwfc	(display@hour_s_digit+1)^0,f,c
  2908   000940                     
  2909                           ;main.c: 651:             if (hour_s_digit > 9)
  2910   000940  5012               	movf	(display@hour_s_digit+1)^0,w,c
  2911   000942  E109               	bnz	u1160
  2912   000944  0E0A               	movlw	10
  2913   000946  5C11               	subwf	display@hour_s_digit^0,w,c
  2914   000948  A0D8               	btfss	status,0,c
  2915   00094A  EFA9  F004         	goto	u1161
  2916   00094E  EFAB  F004         	goto	u1160
  2917   000952                     u1161:
  2918   000952  EFAF  F004         	goto	l2141
  2919   000956                     u1160:
  2920   000956                     
  2921                           ;main.c: 652:                 hour_s_digit = 0;
  2922   000956  0E00               	movlw	0
  2923   000958  6E12               	movwf	(display@hour_s_digit+1)^0,c
  2924   00095A  0E00               	movlw	0
  2925   00095C  6E11               	movwf	display@hour_s_digit^0,c
  2926   00095E                     l2141:
  2927                           
  2928                           ;main.c: 653:             EEPROM_Write(0x0B, hour_s_digit);
  2929   00095E  C011  F001         	movff	display@hour_s_digit,EEPROM_Write@data
  2930   000962  0E0B               	movlw	11
  2931   000964  EC84  F00A         	call	_EEPROM_Write
  2932   000968  EF88  F004         	goto	l2133
  2933   00096C                     l2145:
  2934                           
  2935                           ;main.c: 657:             minute_f_digit = EEPROM_Read(0x0C) + 1;
  2936   00096C  0E0C               	movlw	12
  2937   00096E  EC1E  F00B         	call	_EEPROM_Read
  2938   000972  6E0D               	movwf	??_display^0,c
  2939   000974  0E01               	movlw	1
  2940   000976  240D               	addwf	??_display^0,w,c
  2941   000978  6E13               	movwf	display@minute_f_digit^0,c
  2942   00097A  6A14               	clrf	(display@minute_f_digit+1)^0,c
  2943   00097C  0E00               	movlw	0
  2944   00097E  2214               	addwfc	(display@minute_f_digit+1)^0,f,c
  2945   000980                     
  2946                           ;main.c: 659:             if (minute_f_digit > 5)
  2947   000980  5014               	movf	(display@minute_f_digit+1)^0,w,c
  2948   000982  E109               	bnz	u1170
  2949   000984  0E06               	movlw	6
  2950   000986  5C13               	subwf	display@minute_f_digit^0,w,c
  2951   000988  A0D8               	btfss	status,0,c
  2952   00098A  EFC9  F004         	goto	u1171
  2953   00098E  EFCB  F004         	goto	u1170
  2954   000992                     u1171:
  2955   000992  EFCF  F004         	goto	l2151
  2956   000996                     u1170:
  2957   000996                     
  2958                           ;main.c: 660:                 minute_f_digit = 0;
  2959   000996  0E00               	movlw	0
  2960   000998  6E14               	movwf	(display@minute_f_digit+1)^0,c
  2961   00099A  0E00               	movlw	0
  2962   00099C  6E13               	movwf	display@minute_f_digit^0,c
  2963   00099E                     l2151:
  2964                           
  2965                           ;main.c: 661:             EEPROM_Write(0x0C, minute_f_digit);
  2966   00099E  C013  F001         	movff	display@minute_f_digit,EEPROM_Write@data
  2967   0009A2  0E0C               	movlw	12
  2968   0009A4  EC84  F00A         	call	_EEPROM_Write
  2969   0009A8  EF88  F004         	goto	l2133
  2970   0009AC                     l2155:
  2971                           
  2972                           ;main.c: 665:             minute_s_digit = EEPROM_Read(0x0D) + 1;
  2973   0009AC  0E0D               	movlw	13
  2974   0009AE  EC1E  F00B         	call	_EEPROM_Read
  2975   0009B2  6E0D               	movwf	??_display^0,c
  2976   0009B4  0E01               	movlw	1
  2977   0009B6  240D               	addwf	??_display^0,w,c
  2978   0009B8  6E15               	movwf	display@minute_s_digit^0,c
  2979   0009BA  6A16               	clrf	(display@minute_s_digit+1)^0,c
  2980   0009BC  0E00               	movlw	0
  2981   0009BE  2216               	addwfc	(display@minute_s_digit+1)^0,f,c
  2982   0009C0                     
  2983                           ;main.c: 667:             if (minute_s_digit > 9)
  2984   0009C0  5016               	movf	(display@minute_s_digit+1)^0,w,c
  2985   0009C2  E109               	bnz	u1180
  2986   0009C4  0E0A               	movlw	10
  2987   0009C6  5C15               	subwf	display@minute_s_digit^0,w,c
  2988   0009C8  A0D8               	btfss	status,0,c
  2989   0009CA  EFE9  F004         	goto	u1181
  2990   0009CE  EFEB  F004         	goto	u1180
  2991   0009D2                     u1181:
  2992   0009D2  EFEF  F004         	goto	l2161
  2993   0009D6                     u1180:
  2994   0009D6                     
  2995                           ;main.c: 668:                 minute_s_digit = 0;
  2996   0009D6  0E00               	movlw	0
  2997   0009D8  6E16               	movwf	(display@minute_s_digit+1)^0,c
  2998   0009DA  0E00               	movlw	0
  2999   0009DC  6E15               	movwf	display@minute_s_digit^0,c
  3000   0009DE                     l2161:
  3001                           
  3002                           ;main.c: 669:             EEPROM_Write(0x0D, minute_s_digit);
  3003   0009DE  C015  F001         	movff	display@minute_s_digit,EEPROM_Write@data
  3004   0009E2  0E0D               	movlw	13
  3005   0009E4  EC84  F00A         	call	_EEPROM_Write
  3006   0009E8  EF88  F004         	goto	l2133
  3007   0009EC                     l2167:
  3008   0009EC  C009  F00D         	movff	display@buttonCounter,??_display
  3009   0009F0  C00A  F00E         	movff	display@buttonCounter+1,??_display+1
  3010                           
  3011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3012                           ; Switch size 1, requested type "simple"
  3013                           ; Number of cases is 1, Range of values is 0 to 0
  3014                           ; switch strategies available:
  3015                           ; Name         Instructions Cycles
  3016                           ; simple_byte            4     3 (average)
  3017                           ;	Chosen strategy is simple_byte
  3018   0009F4  500E               	movf	(??_display+1)^0,w,c
  3019   0009F6  0A00               	xorlw	0	; case 0
  3020   0009F8  B4D8               	btfsc	status,2,c
  3021   0009FA  EF01  F005         	goto	l2401
  3022   0009FE  EF14  F005         	goto	l2169
  3023   000A02                     l2401:
  3024                           
  3025                           ; Switch size 1, requested type "simple"
  3026                           ; Number of cases is 4, Range of values is 1 to 4
  3027                           ; switch strategies available:
  3028                           ; Name         Instructions Cycles
  3029                           ; simple_byte           13     7 (average)
  3030                           ;	Chosen strategy is simple_byte
  3031   000A02  500D               	movf	??_display^0,w,c
  3032   000A04  0A01               	xorlw	1	; case 1
  3033   000A06  B4D8               	btfsc	status,2,c
  3034   000A08  EF6A  F004         	goto	l2125
  3035   000A0C  0A03               	xorlw	3	; case 2
  3036   000A0E  B4D8               	btfsc	status,2,c
  3037   000A10  EF96  F004         	goto	l2135
  3038   000A14  0A01               	xorlw	1	; case 3
  3039   000A16  B4D8               	btfsc	status,2,c
  3040   000A18  EFB6  F004         	goto	l2145
  3041   000A1C  0A07               	xorlw	7	; case 4
  3042   000A1E  B4D8               	btfsc	status,2,c
  3043   000A20  EFD6  F004         	goto	l2155
  3044   000A24  EF14  F005         	goto	l2169
  3045   000A28                     l2169:
  3046                           
  3047                           ;main.c: 679:     if (display_function_count > 1000)
  3048   000A28  0EE9               	movlw	233
  3049   000A2A  5C37               	subwf	_display_function_count^0,w,c
  3050   000A2C  0E03               	movlw	3
  3051   000A2E  5838               	subwfb	(_display_function_count+1)^0,w,c
  3052   000A30  A0D8               	btfss	status,0,c
  3053   000A32  EF1D  F005         	goto	u1191
  3054   000A36  EF1F  F005         	goto	u1190
  3055   000A3A                     u1191:
  3056   000A3A  EF23  F005         	goto	l229
  3057   000A3E                     u1190:
  3058   000A3E                     
  3059                           ;main.c: 680:         display_function_count = 0;
  3060   000A3E  0E00               	movlw	0
  3061   000A40  6E38               	movwf	(_display_function_count+1)^0,c
  3062   000A42  0E00               	movlw	0
  3063   000A44  6E37               	movwf	_display_function_count^0,c
  3064   000A46                     l229:
  3065   000A46  0012               	return		;funcret
  3066   000A48                     __end_of_display:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _inttochar *****************
  3070 ;; Defined at:
  3071 ;;		line 686 in file "main.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  digit           2    1[COMRAM] unsigned int 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      unsigned char 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3085 ;;      Params:         2       0       0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0
  3088 ;;      Totals:         2       0       0       0       0       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_startUpcounter
  3095 ;;		_display
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text14
  3100   001664                     __ptext14:
  3101                           	callstack 0
  3102   001664                     _inttochar:
  3103                           	callstack 29
  3104   001664                     
  3105                           ;main.c: 686: unsigned char inttochar(unsigned int digit);main.c: 687: {;main.c: 691:   
      +                            return digit + '0';
  3106   001664  5002               	movf	inttochar@digit^0,w,c
  3107   001666  0F30               	addlw	48
  3108   001668  0012               	return		;funcret
  3109   00166A                     __end_of_inttochar:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function ___lwmod *****************
  3113 ;; Defined at:
  3114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  dividend        2    0[COMRAM] unsigned int 
  3117 ;;  divisor         2    2[COMRAM] unsigned int 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  counter         1    4[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2    0[COMRAM] unsigned int 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3129 ;;      Params:         4       0       0       0       0       0       0
  3130 ;;      Locals:         1       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0
  3132 ;;      Totals:         5       0       0       0       0       0       0
  3133 ;;Total ram usage:        5 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_display
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text15
  3143   00139E                     __ptext15:
  3144                           	callstack 0
  3145   00139E                     ___lwmod:
  3146                           	callstack 29
  3147   00139E  5003               	movf	___lwmod@divisor^0,w,c
  3148   0013A0  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3149   0013A2  B4D8               	btfsc	status,2,c
  3150   0013A4  EFD6  F009         	goto	u801
  3151   0013A8  EFD8  F009         	goto	u800
  3152   0013AC                     u801:
  3153   0013AC  EFFC  F009         	goto	l837
  3154   0013B0                     u800:
  3155   0013B0  0E01               	movlw	1
  3156   0013B2  6E05               	movwf	___lwmod@counter^0,c
  3157   0013B4  EFE0  F009         	goto	l1873
  3158   0013B8                     l1871:
  3159   0013B8  90D8               	bcf	status,0,c
  3160   0013BA  3603               	rlcf	___lwmod@divisor^0,f,c
  3161   0013BC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3162   0013BE  2A05               	incf	___lwmod@counter^0,f,c
  3163   0013C0                     l1873:
  3164   0013C0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3165   0013C2  EFE5  F009         	goto	u811
  3166   0013C6  EFE7  F009         	goto	u810
  3167   0013CA                     u811:
  3168   0013CA  EFDC  F009         	goto	l1871
  3169   0013CE                     u810:
  3170   0013CE                     l1875:
  3171   0013CE  5003               	movf	___lwmod@divisor^0,w,c
  3172   0013D0  5C01               	subwf	___lwmod@dividend^0,w,c
  3173   0013D2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3174   0013D4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3175   0013D6  A0D8               	btfss	status,0,c
  3176   0013D8  EFF0  F009         	goto	u821
  3177   0013DC  EFF2  F009         	goto	u820
  3178   0013E0                     u821:
  3179   0013E0  EFF6  F009         	goto	l1879
  3180   0013E4                     u820:
  3181   0013E4  5003               	movf	___lwmod@divisor^0,w,c
  3182   0013E6  5E01               	subwf	___lwmod@dividend^0,f,c
  3183   0013E8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3184   0013EA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3185   0013EC                     l1879:
  3186   0013EC  90D8               	bcf	status,0,c
  3187   0013EE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3188   0013F0  3203               	rrcf	___lwmod@divisor^0,f,c
  3189   0013F2  2E05               	decfsz	___lwmod@counter^0,f,c
  3190   0013F4  EFE7  F009         	goto	l1875
  3191   0013F8                     l837:
  3192   0013F8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3193   0013FC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3194   001400  0012               	return		;funcret
  3195   001402                     __end_of___lwmod:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _LCD_Write_Char *****************
  3199 ;; Defined at:
  3200 ;;		line 130 in file "main.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  Data            1    wreg     unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  Data            1    3[COMRAM] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3214 ;;      Params:         0       0       0       0       0       0       0
  3215 ;;      Locals:         1       0       0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0
  3217 ;;      Totals:         1       0       0       0       0       0       0
  3218 ;;Total ram usage:        1 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 3
  3221 ;; This function calls:
  3222 ;;		_LCD_Write_4Bit
  3223 ;; This function is called by:
  3224 ;;		_LCD_Write_String
  3225 ;;		_display
  3226 ;;		_lcd_print
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text16
  3231   001558                     __ptext16:
  3232                           	callstack 0
  3233   001558                     _LCD_Write_Char:
  3234                           	callstack 24
  3235                           
  3236                           ;incstack = 0
  3237                           ;LCD_Write_Char@Data stored from wreg
  3238   001558  6E04               	movwf	LCD_Write_Char@Data^0,c
  3239   00155A                     
  3240                           ;main.c: 130: void LCD_Write_Char(char Data);main.c: 131: {;main.c: 132:     RS = 1;
  3241   00155A  0E01               	movlw	1
  3242   00155C  6E44               	movwf	_RS^0,c
  3243   00155E                     
  3244                           ;main.c: 133:     LCD_Write_4Bit(Data & 0xF0);
  3245   00155E  5004               	movf	LCD_Write_Char@Data^0,w,c
  3246   001560  0BF0               	andlw	240
  3247   001562  EC9C  F00A         	call	_LCD_Write_4Bit
  3248   001566                     
  3249                           ;main.c: 134:     LCD_Write_4Bit((Data << 4) & 0xF0);
  3250   001566  3804               	swapf	LCD_Write_Char@Data^0,w,c
  3251   001568  0BF0               	andlw	240
  3252   00156A  0BF0               	andlw	240
  3253   00156C  EC9C  F00A         	call	_LCD_Write_4Bit
  3254   001570  0012               	return		;funcret
  3255   001572                     __end_of_LCD_Write_Char:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _LCD_Set_Cursor *****************
  3259 ;; Defined at:
  3260 ;;		line 143 in file "main.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  ROW             1    wreg     unsigned char 
  3263 ;;  COL             1    4[COMRAM] unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  ROW             1    7[COMRAM] unsigned char 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3275 ;;      Params:         1       0       0       0       0       0       0
  3276 ;;      Locals:         1       0       0       0       0       0       0
  3277 ;;      Temps:          2       0       0       0       0       0       0
  3278 ;;      Totals:         4       0       0       0       0       0       0
  3279 ;;Total ram usage:        4 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 4
  3282 ;; This function calls:
  3283 ;;		_LCD_CMD
  3284 ;; This function is called by:
  3285 ;;		_stopMessage
  3286 ;;		_display
  3287 ;;		_lcd_print
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text17
  3292   001334                     __ptext17:
  3293                           	callstack 0
  3294   001334                     _LCD_Set_Cursor:
  3295                           	callstack 24
  3296                           
  3297                           ;incstack = 0
  3298                           ;LCD_Set_Cursor@ROW stored from wreg
  3299   001334  6E08               	movwf	LCD_Set_Cursor@ROW^0,c
  3300   001336                     
  3301                           ;main.c: 143: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);main.c: 144: {;m
      +                          ain.c: 145:     switch (ROW)
  3302   001336  EFB5  F009         	goto	l1785
  3303   00133A                     l1777:
  3304                           
  3305                           ;main.c: 148:         LCD_CMD(0xC0 + COL - 1);
  3306   00133A  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3307   00133C  0FBF               	addlw	191
  3308   00133E  ECB9  F00A         	call	_LCD_CMD
  3309                           
  3310                           ;main.c: 149:         break;
  3311   001342  EFCE  F009         	goto	l108
  3312   001346                     l1779:
  3313                           
  3314                           ;main.c: 151:         LCD_CMD(0x94 + COL - 1);
  3315   001346  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3316   001348  0F93               	addlw	147
  3317   00134A  ECB9  F00A         	call	_LCD_CMD
  3318                           
  3319                           ;main.c: 152:         break;
  3320   00134E  EFCE  F009         	goto	l108
  3321   001352                     l1781:
  3322                           
  3323                           ;main.c: 154:         LCD_CMD(0xD4 + COL - 1);
  3324   001352  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3325   001354  0FD3               	addlw	211
  3326   001356  ECB9  F00A         	call	_LCD_CMD
  3327                           
  3328                           ;main.c: 155:         break;
  3329   00135A  EFCE  F009         	goto	l108
  3330   00135E                     l1783:
  3331                           
  3332                           ;main.c: 158:         LCD_CMD(0x80 + COL - 1);
  3333   00135E  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3334   001360  0F7F               	addlw	127
  3335   001362  ECB9  F00A         	call	_LCD_CMD
  3336                           
  3337                           ;main.c: 159:     }
  3338   001366  EFCE  F009         	goto	l108
  3339   00136A                     l1785:
  3340   00136A  5008               	movf	LCD_Set_Cursor@ROW^0,w,c
  3341   00136C  6E06               	movwf	??_LCD_Set_Cursor^0,c
  3342   00136E  6A07               	clrf	(??_LCD_Set_Cursor+1)^0,c
  3343                           
  3344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3345                           ; Switch size 1, requested type "simple"
  3346                           ; Number of cases is 1, Range of values is 0 to 0
  3347                           ; switch strategies available:
  3348                           ; Name         Instructions Cycles
  3349                           ; simple_byte            4     3 (average)
  3350                           ;	Chosen strategy is simple_byte
  3351   001370  5007               	movf	(??_LCD_Set_Cursor+1)^0,w,c
  3352   001372  0A00               	xorlw	0	; case 0
  3353   001374  B4D8               	btfsc	status,2,c
  3354   001376  EFBF  F009         	goto	l2403
  3355   00137A  EFAF  F009         	goto	l1783
  3356   00137E                     l2403:
  3357                           
  3358                           ; Switch size 1, requested type "simple"
  3359                           ; Number of cases is 3, Range of values is 2 to 4
  3360                           ; switch strategies available:
  3361                           ; Name         Instructions Cycles
  3362                           ; simple_byte           10     6 (average)
  3363                           ;	Chosen strategy is simple_byte
  3364   00137E  5006               	movf	??_LCD_Set_Cursor^0,w,c
  3365   001380  0A02               	xorlw	2	; case 2
  3366   001382  B4D8               	btfsc	status,2,c
  3367   001384  EF9D  F009         	goto	l1777
  3368   001388  0A01               	xorlw	1	; case 3
  3369   00138A  B4D8               	btfsc	status,2,c
  3370   00138C  EFA3  F009         	goto	l1779
  3371   001390  0A07               	xorlw	7	; case 4
  3372   001392  B4D8               	btfsc	status,2,c
  3373   001394  EFA9  F009         	goto	l1781
  3374   001398  EFAF  F009         	goto	l1783
  3375   00139C                     l108:
  3376   00139C  0012               	return		;funcret
  3377   00139E                     __end_of_LCD_Set_Cursor:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _LCD_CMD *****************
  3381 ;; Defined at:
  3382 ;;		line 123 in file "main.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  CMD             1    wreg     unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  CMD             1    3[COMRAM] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3396 ;;      Params:         0       0       0       0       0       0       0
  3397 ;;      Locals:         1       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0
  3399 ;;      Totals:         1       0       0       0       0       0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 3
  3403 ;; This function calls:
  3404 ;;		_LCD_Write_4Bit
  3405 ;; This function is called by:
  3406 ;;		_LCD_Init
  3407 ;;		_LCD_Set_Cursor
  3408 ;;		_LCD_CLR
  3409 ;;		_LCD_SL
  3410 ;;		_LCD_SR
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text18
  3415   001572                     __ptext18:
  3416                           	callstack 0
  3417   001572                     _LCD_CMD:
  3418                           	callstack 24
  3419                           
  3420                           ;incstack = 0
  3421                           ;LCD_CMD@CMD stored from wreg
  3422   001572  6E04               	movwf	LCD_CMD@CMD^0,c
  3423   001574                     
  3424                           ;main.c: 123: void LCD_CMD(unsigned char CMD);main.c: 124: {;main.c: 125:     RS = 0;
  3425   001574  0E00               	movlw	0
  3426   001576  6E44               	movwf	_RS^0,c
  3427   001578                     
  3428                           ;main.c: 126:     LCD_Write_4Bit(CMD & 0xF0);
  3429   001578  5004               	movf	LCD_CMD@CMD^0,w,c
  3430   00157A  0BF0               	andlw	240
  3431   00157C  EC9C  F00A         	call	_LCD_Write_4Bit
  3432   001580                     
  3433                           ;main.c: 127:     LCD_Write_4Bit((CMD << 4) & 0xF0);
  3434   001580  3804               	swapf	LCD_CMD@CMD^0,w,c
  3435   001582  0BF0               	andlw	240
  3436   001584  0BF0               	andlw	240
  3437   001586  EC9C  F00A         	call	_LCD_Write_4Bit
  3438   00158A  0012               	return		;funcret
  3439   00158C                     __end_of_LCD_CMD:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function _LCD_Write_4Bit *****************
  3443 ;; Defined at:
  3444 ;;		line 114 in file "main.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  Nibble          1    wreg     unsigned char 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  Nibble          1    2[COMRAM] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3458 ;;      Params:         0       0       0       0       0       0       0
  3459 ;;      Locals:         1       0       0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0
  3461 ;;      Totals:         1       0       0       0       0       0       0
  3462 ;;Total ram usage:        1 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; Hardware stack levels required when called: 2
  3465 ;; This function calls:
  3466 ;;		_IO_Expander_Write
  3467 ;; This function is called by:
  3468 ;;		_LCD_CMD
  3469 ;;		_LCD_Write_Char
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text19
  3474   001538                     __ptext19:
  3475                           	callstack 0
  3476   001538                     _LCD_Write_4Bit:
  3477                           	callstack 24
  3478                           
  3479                           ;incstack = 0
  3480                           ;LCD_Write_4Bit@Nibble stored from wreg
  3481   001538  6E03               	movwf	LCD_Write_4Bit@Nibble^0,c
  3482   00153A                     
  3483                           ;main.c: 114: void LCD_Write_4Bit(unsigned char Nibble);main.c: 115: {;main.c: 117:     
      +                          Nibble |= RS;
  3484   00153A  5044               	movf	_RS^0,w,c
  3485   00153C  1203               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  3486   00153E                     
  3487                           ;main.c: 118:     IO_Expander_Write(Nibble | 0x04);
  3488   00153E  5003               	movf	LCD_Write_4Bit@Nibble^0,w,c
  3489   001540  0904               	iorlw	4
  3490   001542  ECC6  F00A         	call	_IO_Expander_Write
  3491   001546                     
  3492                           ;main.c: 119:     IO_Expander_Write(Nibble & 0xFB);
  3493   001546  5003               	movf	LCD_Write_4Bit@Nibble^0,w,c
  3494   001548  0BFB               	andlw	251
  3495   00154A  ECC6  F00A         	call	_IO_Expander_Write
  3496   00154E                     
  3497                           ;main.c: 120:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3498   00154E  0EA0               	movlw	160
  3499   001550                     u1637:
  3500   001550  D000               	nop2	
  3501   001552  2EE8               	decfsz	wreg,f,c
  3502   001554  D7FD               	bra	u1637
  3503   001556  0012               	return		;funcret
  3504   001558                     __end_of_LCD_Write_4Bit:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _IO_Expander_Write *****************
  3508 ;; Defined at:
  3509 ;;		line 106 in file "main.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  Data            1    wreg     unsigned char 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  Data            1    1[COMRAM] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3523 ;;      Params:         0       0       0       0       0       0       0
  3524 ;;      Locals:         1       0       0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0
  3526 ;;      Totals:         1       0       0       0       0       0       0
  3527 ;;Total ram usage:        1 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 1
  3530 ;; This function calls:
  3531 ;;		_I2C2_Send
  3532 ;;		_I2C2_Start
  3533 ;;		_I2C2_Stop
  3534 ;; This function is called by:
  3535 ;;		_LCD_Init
  3536 ;;		_LCD_Write_4Bit
  3537 ;;		_Backlight
  3538 ;;		_noBacklight
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text20
  3543   00158C                     __ptext20:
  3544                           	callstack 0
  3545   00158C                     _IO_Expander_Write:
  3546                           	callstack 24
  3547                           
  3548                           ;incstack = 0
  3549                           ;IO_Expander_Write@Data stored from wreg
  3550   00158C  6E02               	movwf	IO_Expander_Write@Data^0,c
  3551   00158E                     
  3552                           ;main.c: 106: void IO_Expander_Write(unsigned char Data);main.c: 107: {;main.c: 108:    
      +                           I2C2_Start();
  3553   00158E  EC0C  F00B         	call	_I2C2_Start	;wreg free
  3554   001592                     
  3555                           ;main.c: 109:     I2C2_Send(i2c_add);
  3556   001592  5045               	movf	_i2c_add^0,w,c
  3557   001594  ECD3  F00A         	call	_I2C2_Send
  3558   001598                     
  3559                           ;main.c: 110:     I2C2_Send(Data | BackLight_State);
  3560   001598  5002               	movf	IO_Expander_Write@Data^0,w,c
  3561   00159A  1036               	iorwf	_BackLight_State^0,w,c
  3562   00159C  ECD3  F00A         	call	_I2C2_Send
  3563   0015A0                     
  3564                           ;main.c: 111:     I2C2_Stop();
  3565   0015A0  EC02  F00B         	call	_I2C2_Stop	;wreg free
  3566   0015A4  0012               	return		;funcret
  3567   0015A6                     __end_of_IO_Expander_Write:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _I2C2_Stop *****************
  3571 ;; Defined at:
  3572 ;;		line 82 in file "i2c.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		None
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3586 ;;      Params:         0       0       0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0
  3589 ;;      Totals:         0       0       0       0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_IO_Expander_Write
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text21
  3600   001604                     __ptext21:
  3601                           	callstack 0
  3602   001604                     _I2C2_Stop:
  3603                           	callstack 24
  3604   001604                     
  3605                           ;i2c.c: 83:  SSP2CON2bits.PEN = 1;
  3606   001604  846B               	bsf	107,2,c	;volatile
  3607   001606                     l306:
  3608   001606  AEA4               	btfss	164,7,c	;volatile
  3609   001608  EF08  F00B         	goto	u31
  3610   00160C  EF0A  F00B         	goto	u30
  3611   001610                     u31:
  3612   001610  EF03  F00B         	goto	l306
  3613   001614                     u30:
  3614   001614                     
  3615                           ;i2c.c: 85:  PIR3bits.SSP2IF = 0;
  3616   001614  9EA4               	bcf	164,7,c	;volatile
  3617   001616  0012               	return		;funcret
  3618   001618                     __end_of_I2C2_Stop:
  3619                           	callstack 0
  3620                           
  3621 ;; *************** function _I2C2_Start *****************
  3622 ;; Defined at:
  3623 ;;		line 51 in file "i2c.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		None
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3637 ;;      Params:         0       0       0       0       0       0       0
  3638 ;;      Locals:         0       0       0       0       0       0       0
  3639 ;;      Temps:          0       0       0       0       0       0       0
  3640 ;;      Totals:         0       0       0       0       0       0       0
  3641 ;;Total ram usage:        0 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_IO_Expander_Write
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text22
  3651   001618                     __ptext22:
  3652                           	callstack 0
  3653   001618                     _I2C2_Start:
  3654                           	callstack 24
  3655   001618                     
  3656                           ;i2c.c: 52:  SSP2CON2bits.SEN = 1;
  3657   001618  806B               	bsf	107,0,c	;volatile
  3658   00161A                     l294:
  3659   00161A  AEA4               	btfss	164,7,c	;volatile
  3660   00161C  EF12  F00B         	goto	u11
  3661   001620  EF14  F00B         	goto	u10
  3662   001624                     u11:
  3663   001624  EF0D  F00B         	goto	l294
  3664   001628                     u10:
  3665   001628                     
  3666                           ;i2c.c: 54:  PIR3bits.SSP2IF = 0;
  3667   001628  9EA4               	bcf	164,7,c	;volatile
  3668   00162A  0012               	return		;funcret
  3669   00162C                     __end_of_I2C2_Start:
  3670                           	callstack 0
  3671                           
  3672 ;; *************** function _I2C2_Send *****************
  3673 ;; Defined at:
  3674 ;;		line 131 in file "i2c.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  BYTE            1    wreg     unsigned char 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  BYTE            1    0[COMRAM] unsigned char 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      unsigned char 
  3681 ;; Registers used:
  3682 ;;		wreg
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3688 ;;      Params:         0       0       0       0       0       0       0
  3689 ;;      Locals:         1       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0
  3691 ;;      Totals:         1       0       0       0       0       0       0
  3692 ;;Total ram usage:        1 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_IO_Expander_Write
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text23
  3702   0015A6                     __ptext23:
  3703                           	callstack 0
  3704   0015A6                     _I2C2_Send:
  3705                           	callstack 24
  3706                           
  3707                           ;incstack = 0
  3708                           ;I2C2_Send@BYTE stored from wreg
  3709   0015A6  6E01               	movwf	I2C2_Send@BYTE^0,c
  3710   0015A8                     
  3711                           ;i2c.c: 132:  SSP2BUF = BYTE;
  3712   0015A8  C001  FF6F         	movff	I2C2_Send@BYTE,3951	;volatile
  3713   0015AC                     l324:
  3714   0015AC  AEA4               	btfss	164,7,c	;volatile
  3715   0015AE  EFDB  F00A         	goto	u21
  3716   0015B2  EFDD  F00A         	goto	u20
  3717   0015B6                     u21:
  3718   0015B6  EFD6  F00A         	goto	l324
  3719   0015BA                     u20:
  3720   0015BA                     
  3721                           ;i2c.c: 134:  PIR3bits.SSP2IF = 0;
  3722   0015BA  9EA4               	bcf	164,7,c	;volatile
  3723                           
  3724                           ;i2c.c: 135:  return SSP2CON2bits.ACKSTAT;;	Return value of _I2C2_Send is never used
  3725   0015BC  506B               	movf	107,w,c	;volatile
  3726   0015BE  0012               	return		;funcret
  3727   0015C0                     __end_of_I2C2_Send:
  3728                           	callstack 0
  3729                           
  3730 ;; *************** function _blue_led *****************
  3731 ;; Defined at:
  3732 ;;		line 213 in file "main.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		None
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3746 ;;      Params:         0       0       0       0       0       0       0
  3747 ;;      Locals:         0       0       0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0
  3749 ;;      Totals:         0       0       0       0       0       0       0
  3750 ;;Total ram usage:        0 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text24
  3760   00165C                     __ptext24:
  3761                           	callstack 0
  3762   00165C                     _blue_led:
  3763                           	callstack 30
  3764   00165C                     
  3765                           ;main.c: 215:     LATAbits.LATA6 = 0;
  3766   00165C  9C89               	bcf	137,6,c	;volatile
  3767                           
  3768                           ;main.c: 217:     LATAbits.LATA5 = 1;
  3769   00165E  8A89               	bsf	137,5,c	;volatile
  3770                           
  3771                           ;main.c: 218:     LATAbits.LATA4 = 1;
  3772   001660  8889               	bsf	137,4,c	;volatile
  3773   001662  0012               	return		;funcret
  3774   001664                     __end_of_blue_led:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _I2C2_Init *****************
  3778 ;; Defined at:
  3779 ;;		line 20 in file "i2c.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3793 ;;      Params:         0       0       0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text25
  3807   0015C0                     __ptext25:
  3808                           	callstack 0
  3809   0015C0                     _I2C2_Init:
  3810                           	callstack 30
  3811   0015C0                     
  3812                           ;i2c.c: 21:     TRISBbits.RB2 = 1;
  3813   0015C0  8493               	bsf	147,2,c	;volatile
  3814                           
  3815                           ;i2c.c: 22:     TRISBbits.RB1 = 1;
  3816   0015C2  8293               	bsf	147,1,c	;volatile
  3817                           
  3818                           ;i2c.c: 25:     ANSELBbits.ANSB2 = 0;
  3819   0015C4  010F               	movlb	15	; () banked
  3820   0015C6  9539               	bcf	57,2,b	;volatile
  3821                           
  3822                           ;i2c.c: 26:     ANSELBbits.ANSB1 = 0;
  3823   0015C8  9339               	bcf	57,1,b	;volatile
  3824   0015CA                     
  3825                           ; BSR set to: 15
  3826                           ;i2c.c: 28:     SSP2STAT = 0b10000000;
  3827   0015CA  0E80               	movlw	128
  3828   0015CC  6E6D               	movwf	109,c	;volatile
  3829                           
  3830                           ;i2c.c: 37:  SSP2CON1 = 0b00101000;
  3831   0015CE  0E28               	movlw	40
  3832   0015D0  6E6C               	movwf	108,c	;volatile
  3833                           
  3834                           ;i2c.c: 38:     SSP2ADD = 159u;
  3835   0015D2  0E9F               	movlw	159
  3836   0015D4  6E6E               	movwf	110,c	;volatile
  3837   0015D6                     
  3838                           ; BSR set to: 15
  3839   0015D6  0012               	return		;funcret
  3840   0015D8                     __end_of_I2C2_Init:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _EEPROM_Mem_Initialise *****************
  3844 ;; Defined at:
  3845 ;;		line 708 in file "main.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  mem_check       2    4[COMRAM] unsigned int 
  3850 ;;  i               2    0        unsigned int 
  3851 ;;  eeprom_addr     1    7[COMRAM] unsigned char 
  3852 ;;  flag_addr       1    6[COMRAM] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       0       0       0       0       0       0
  3863 ;;      Locals:         4       0       0       0       0       0       0
  3864 ;;      Temps:          2       0       0       0       0       0       0
  3865 ;;      Totals:         6       0       0       0       0       0       0
  3866 ;;Total ram usage:        6 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 1
  3869 ;; This function calls:
  3870 ;;		_EEPROM_Read
  3871 ;;		_EEPROM_Write
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text26
  3878   000F80                     __ptext26:
  3879                           	callstack 0
  3880   000F80                     _EEPROM_Mem_Initialise:
  3881                           	callstack 29
  3882   000F80                     
  3883                           ;main.c: 709:     unsigned char eeprom_addr, flag_addr = 0x0F;
  3884   000F80  0E0F               	movlw	15
  3885   000F82  6E07               	movwf	EEPROM_Mem_Initialise@flag_addr^0,c
  3886                           
  3887                           ;main.c: 710:     unsigned int mem_check = 0, i = 1;
  3888   000F84  0E00               	movlw	0
  3889   000F86  6E06               	movwf	(EEPROM_Mem_Initialise@mem_check+1)^0,c
  3890   000F88  0E00               	movlw	0
  3891   000F8A  6E05               	movwf	EEPROM_Mem_Initialise@mem_check^0,c
  3892   000F8C                     
  3893                           ;main.c: 712:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  3894   000F8C  0E52               	movlw	82
  3895   000F8E  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  3896   000F90  0E2B               	movlw	43
  3897   000F92  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  3898   000F94  0E00               	movlw	0
  3899   000F96                     u1647:
  3900   000F96  2EE8               	decfsz	wreg,f,c
  3901   000F98  D7FE               	bra	u1647
  3902   000F9A  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  3903   000F9C  D7FC               	bra	u1647
  3904   000F9E  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  3905   000FA0  D7FA               	bra	u1647
  3906   000FA2  D000               	nop2	
  3907                           
  3908                           ;main.c: 715:     while((EEPROM_Read(0x0A) == 0) && (EEPROM_Read(0x0B) == 0) && (EEPROM_
      +                          Read(0x0C) == 0) && (EEPROM_Read(0x0D) == 0) && (EEPROM_Read(0x0F) == 0)){
  3909   000FA4  EFE0  F007         	goto	l2187
  3910   000FA8                     l2185:
  3911                           
  3912                           ;main.c: 716:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3913   000FA8  0E29               	movlw	41
  3914   000FAA  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  3915   000FAC  0E96               	movlw	150
  3916   000FAE  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  3917   000FB0  0E7F               	movlw	127
  3918   000FB2                     u1657:
  3919   000FB2  2EE8               	decfsz	wreg,f,c
  3920   000FB4  D7FE               	bra	u1657
  3921   000FB6  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  3922   000FB8  D7FC               	bra	u1657
  3923   000FBA  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  3924   000FBC  D7FA               	bra	u1657
  3925   000FBE  F000               	nop	
  3926   000FC0                     l2187:
  3927                           
  3928                           ;main.c: 715:     while((EEPROM_Read(0x0A) == 0) && (EEPROM_Read(0x0B) == 0) && (EEPROM_
      +                          Read(0x0C) == 0) && (EEPROM_Read(0x0D) == 0) && (EEPROM_Read(0x0F) == 0)){
  3929   000FC0  0E0A               	movlw	10
  3930   000FC2  EC1E  F00B         	call	_EEPROM_Read
  3931   000FC6  0900               	iorlw	0
  3932   000FC8  A4D8               	btfss	status,2,c
  3933   000FCA  EFE9  F007         	goto	u1201
  3934   000FCE  EFEB  F007         	goto	u1200
  3935   000FD2                     u1201:
  3936   000FD2  EF17  F008         	goto	l2197
  3937   000FD6                     u1200:
  3938   000FD6  0E0B               	movlw	11
  3939   000FD8  EC1E  F00B         	call	_EEPROM_Read
  3940   000FDC  0900               	iorlw	0
  3941   000FDE  A4D8               	btfss	status,2,c
  3942   000FE0  EFF4  F007         	goto	u1211
  3943   000FE4  EFF6  F007         	goto	u1210
  3944   000FE8                     u1211:
  3945   000FE8  EF17  F008         	goto	l2197
  3946   000FEC                     u1210:
  3947   000FEC  0E0C               	movlw	12
  3948   000FEE  EC1E  F00B         	call	_EEPROM_Read
  3949   000FF2  0900               	iorlw	0
  3950   000FF4  A4D8               	btfss	status,2,c
  3951   000FF6  EFFF  F007         	goto	u1221
  3952   000FFA  EF01  F008         	goto	u1220
  3953   000FFE                     u1221:
  3954   000FFE  EF17  F008         	goto	l2197
  3955   001002                     u1220:
  3956   001002  0E0D               	movlw	13
  3957   001004  EC1E  F00B         	call	_EEPROM_Read
  3958   001008  0900               	iorlw	0
  3959   00100A  A4D8               	btfss	status,2,c
  3960   00100C  EF0A  F008         	goto	u1231
  3961   001010  EF0C  F008         	goto	u1230
  3962   001014                     u1231:
  3963   001014  EF17  F008         	goto	l2197
  3964   001018                     u1230:
  3965   001018  0E0F               	movlw	15
  3966   00101A  EC1E  F00B         	call	_EEPROM_Read
  3967   00101E  0900               	iorlw	0
  3968   001020  B4D8               	btfsc	status,2,c
  3969   001022  EF15  F008         	goto	u1241
  3970   001026  EF17  F008         	goto	u1240
  3971   00102A                     u1241:
  3972   00102A  EFD4  F007         	goto	l2185
  3973   00102E                     u1240:
  3974   00102E                     l2197:
  3975                           
  3976                           ;main.c: 719:     if(EEPROM_Read(0x0F) == 1)
  3977   00102E  0E0F               	movlw	15
  3978   001030  EC1E  F00B         	call	_EEPROM_Read
  3979   001034  06E8               	decf	wreg,f,c
  3980   001036  A4D8               	btfss	status,2,c
  3981   001038  EF20  F008         	goto	u1251
  3982   00103C  EF22  F008         	goto	u1250
  3983   001040                     u1251:
  3984   001040  EF26  F008         	goto	l2201
  3985   001044                     u1250:
  3986   001044                     
  3987                           ;main.c: 720:             mem_check = 1;
  3988   001044  0E00               	movlw	0
  3989   001046  6E06               	movwf	(EEPROM_Mem_Initialise@mem_check+1)^0,c
  3990   001048  0E01               	movlw	1
  3991   00104A  6E05               	movwf	EEPROM_Mem_Initialise@mem_check^0,c
  3992   00104C                     l2201:
  3993                           
  3994                           ;main.c: 722:     if(mem_check != 1){
  3995   00104C  0405               	decf	EEPROM_Mem_Initialise@mem_check^0,w,c
  3996   00104E  1006               	iorwf	(EEPROM_Mem_Initialise@mem_check+1)^0,w,c
  3997   001050  B4D8               	btfsc	status,2,c
  3998   001052  EF2D  F008         	goto	u1261
  3999   001056  EF2F  F008         	goto	u1260
  4000   00105A                     u1261:
  4001   00105A  EF5C  F008         	goto	l2221
  4002   00105E                     u1260:
  4003   00105E                     
  4004                           ;main.c: 724:         for(eeprom_addr = 0x0A; eeprom_addr < 0x0E; eeprom_addr++){
  4005   00105E  0E0A               	movlw	10
  4006   001060  6E08               	movwf	EEPROM_Mem_Initialise@eeprom_addr^0,c
  4007   001062                     l2209:
  4008                           
  4009                           ;main.c: 725:             EEPROM_Write(eeprom_addr, 0);
  4010   001062  0E00               	movlw	0
  4011   001064  6E01               	movwf	EEPROM_Write@data^0,c
  4012   001066  5008               	movf	EEPROM_Mem_Initialise@eeprom_addr^0,w,c
  4013   001068  EC84  F00A         	call	_EEPROM_Write
  4014   00106C                     
  4015                           ;main.c: 726:             _delay((unsigned long)((20)*(64000000/4000.0)));
  4016   00106C  0E02               	movlw	2
  4017   00106E  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  4018   001070  0EA0               	movlw	160
  4019   001072  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  4020   001074  0E92               	movlw	146
  4021   001076                     u1667:
  4022   001076  2EE8               	decfsz	wreg,f,c
  4023   001078  D7FE               	bra	u1667
  4024   00107A  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  4025   00107C  D7FC               	bra	u1667
  4026   00107E  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  4027   001080  D7FA               	bra	u1667
  4028   001082  D000               	nop2	
  4029   001084                     
  4030                           ;main.c: 727:         }
  4031   001084  2A08               	incf	EEPROM_Mem_Initialise@eeprom_addr^0,f,c
  4032   001086  0E0D               	movlw	13
  4033   001088  6408               	cpfsgt	EEPROM_Mem_Initialise@eeprom_addr^0,c
  4034   00108A  EF49  F008         	goto	u1271
  4035   00108E  EF4B  F008         	goto	u1270
  4036   001092                     u1271:
  4037   001092  EF31  F008         	goto	l2209
  4038   001096                     u1270:
  4039   001096                     
  4040                           ;main.c: 729:         EEPROM_Write(flag_addr, 1);
  4041   001096  0E01               	movlw	1
  4042   001098  6E01               	movwf	EEPROM_Write@data^0,c
  4043   00109A  5007               	movf	EEPROM_Mem_Initialise@flag_addr^0,w,c
  4044   00109C  EC84  F00A         	call	_EEPROM_Write
  4045   0010A0                     
  4046                           ;main.c: 730:          _delay((unsigned long)((20)*(64000000/4000.0)));
  4047   0010A0  0E02               	movlw	2
  4048   0010A2  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  4049   0010A4  0EA0               	movlw	160
  4050   0010A6  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  4051   0010A8  0E92               	movlw	146
  4052   0010AA                     u1677:
  4053   0010AA  2EE8               	decfsz	wreg,f,c
  4054   0010AC  D7FE               	bra	u1677
  4055   0010AE  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  4056   0010B0  D7FC               	bra	u1677
  4057   0010B2  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  4058   0010B4  D7FA               	bra	u1677
  4059   0010B6  D000               	nop2	
  4060   0010B8                     l2221:
  4061                           
  4062                           ;main.c: 733:      _delay((unsigned long)((1000)*(64000000/4000.0)));
  4063   0010B8  0E52               	movlw	82
  4064   0010BA  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  4065   0010BC  0E2B               	movlw	43
  4066   0010BE  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  4067   0010C0  0E00               	movlw	0
  4068   0010C2                     u1687:
  4069   0010C2  2EE8               	decfsz	wreg,f,c
  4070   0010C4  D7FE               	bra	u1687
  4071   0010C6  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  4072   0010C8  D7FC               	bra	u1687
  4073   0010CA  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  4074   0010CC  D7FA               	bra	u1687
  4075   0010CE  D000               	nop2	
  4076   0010D0  0012               	return		;funcret
  4077   0010D2                     __end_of_EEPROM_Mem_Initialise:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _EEPROM_Write *****************
  4081 ;; Defined at:
  4082 ;;		line 484 in file "main.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  address         1    wreg     unsigned char 
  4085 ;;  data            1    0[COMRAM] unsigned char 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  address         1    1[COMRAM] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4097 ;;      Params:         1       0       0       0       0       0       0
  4098 ;;      Locals:         1       0       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0
  4100 ;;      Totals:         2       0       0       0       0       0       0
  4101 ;;Total ram usage:        2 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_display
  4107 ;;		_EEPROM_Mem_Initialise
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text27
  4112   001508                     __ptext27:
  4113                           	callstack 0
  4114   001508                     _EEPROM_Write:
  4115                           	callstack 29
  4116                           
  4117                           ;incstack = 0
  4118                           ;EEPROM_Write@address stored from wreg
  4119   001508  6E02               	movwf	EEPROM_Write@address^0,c
  4120   00150A                     
  4121                           ;main.c: 484: void EEPROM_Write(unsigned char address, unsigned char data);main.c: 485: 
      +                          {;main.c: 487:     EEADR = address;
  4122   00150A  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  4123   00150E                     
  4124                           ;main.c: 488:     EEDATA = data;
  4125   00150E  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  4126   001512                     
  4127                           ;main.c: 489:     EECON1bits.EEPGD = 0;
  4128   001512  9EA6               	bcf	166,7,c	;volsfr
  4129   001514                     
  4130                           ;main.c: 490:     EECON1bits.CFGS = 0;
  4131   001514  9CA6               	bcf	166,6,c	;volsfr
  4132   001516                     
  4133                           ;main.c: 491:     EECON1bits.WREN = 1;
  4134   001516  84A6               	bsf	166,2,c	;volsfr
  4135   001518                     
  4136                           ;main.c: 492:     INTCONbits.GIE = 0;
  4137   001518  9EF2               	bcf	242,7,c	;volatile
  4138   00151A                     
  4139                           ;main.c: 496:     EECON2 = 0x55;
  4140   00151A  0E55               	movlw	85
  4141   00151C  6EA7               	movwf	167,c	;volsfr
  4142   00151E                     
  4143                           ;main.c: 497:     EECON2 = 0xAA;
  4144   00151E  0EAA               	movlw	170
  4145   001520  6EA7               	movwf	167,c	;volsfr
  4146   001522                     
  4147                           ;main.c: 499:     EECON1bits.WR = 1;
  4148   001522  82A6               	bsf	166,1,c	;volsfr
  4149   001524                     
  4150                           ;main.c: 500:     INTCONbits.GIE = 1;
  4151   001524  8EF2               	bsf	242,7,c	;volatile
  4152   001526                     l189:
  4153                           
  4154                           ;main.c: 502:     while (PIR2bits.EEIF == 0)
  4155   001526  A8A1               	btfss	161,4,c	;volatile
  4156   001528  EF98  F00A         	goto	u731
  4157   00152C  EF9A  F00A         	goto	u730
  4158   001530                     u731:
  4159   001530  EF93  F00A         	goto	l189
  4160   001534                     u730:
  4161   001534                     
  4162                           ;main.c: 504:     PIR2bits.EEIF = 0;
  4163   001534  98A1               	bcf	161,4,c	;volatile
  4164   001536  0012               	return		;funcret
  4165   001538                     __end_of_EEPROM_Write:
  4166                           	callstack 0
  4167                           
  4168 ;; *************** function _EEPROM_Read *****************
  4169 ;; Defined at:
  4170 ;;		line 514 in file "main.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  address         1    wreg     unsigned char 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  address         1    0[COMRAM] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      unsigned char 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4184 ;;      Params:         0       0       0       0       0       0       0
  4185 ;;      Locals:         1       0       0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0
  4187 ;;      Totals:         1       0       0       0       0       0       0
  4188 ;;Total ram usage:        1 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_startTimer
  4194 ;;		_display
  4195 ;;		_EEPROM_Mem_Initialise
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text28
  4200   00163C                     __ptext28:
  4201                           	callstack 0
  4202   00163C                     _EEPROM_Read:
  4203                           	callstack 29
  4204                           
  4205                           ;incstack = 0
  4206                           ;EEPROM_Read@address stored from wreg
  4207   00163C  6E01               	movwf	EEPROM_Read@address^0,c
  4208   00163E                     
  4209                           ;main.c: 514: char EEPROM_Read(unsigned char address);main.c: 515: {;main.c: 517:     EE
      +                          ADR = address;
  4210   00163E  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  4211   001642                     
  4212                           ;main.c: 518:     EECON1bits.WREN = 0;
  4213   001642  94A6               	bcf	166,2,c	;volsfr
  4214   001644                     
  4215                           ;main.c: 519:     EECON1bits.EEPGD = 0;
  4216   001644  9EA6               	bcf	166,7,c	;volsfr
  4217   001646                     
  4218                           ;main.c: 520:     EECON1bits.RD = 1;
  4219   001646  80A6               	bsf	166,0,c	;volsfr
  4220   001648                     
  4221                           ;main.c: 521:     return (EEDATA);
  4222   001648  50A8               	movf	168,w,c	;volatile
  4223   00164A  0012               	return		;funcret
  4224   00164C                     __end_of_EEPROM_Read:
  4225                           	callstack 0
  4226                           
  4227                           	psect	rparam
  4228   000000                     
  4229                           	psect	idloc
  4230                           
  4231                           ;Config register IDLOC0 @ 0x200000
  4232                           ;	unspecified, using default values
  4233   200000                     	org	2097152
  4234   200000  FF                 	db	255
  4235                           
  4236                           ;Config register IDLOC1 @ 0x200001
  4237                           ;	unspecified, using default values
  4238   200001                     	org	2097153
  4239   200001  FF                 	db	255
  4240                           
  4241                           ;Config register IDLOC2 @ 0x200002
  4242                           ;	unspecified, using default values
  4243   200002                     	org	2097154
  4244   200002  FF                 	db	255
  4245                           
  4246                           ;Config register IDLOC3 @ 0x200003
  4247                           ;	unspecified, using default values
  4248   200003                     	org	2097155
  4249   200003  FF                 	db	255
  4250                           
  4251                           ;Config register IDLOC4 @ 0x200004
  4252                           ;	unspecified, using default values
  4253   200004                     	org	2097156
  4254   200004  FF                 	db	255
  4255                           
  4256                           ;Config register IDLOC5 @ 0x200005
  4257                           ;	unspecified, using default values
  4258   200005                     	org	2097157
  4259   200005  FF                 	db	255
  4260                           
  4261                           ;Config register IDLOC6 @ 0x200006
  4262                           ;	unspecified, using default values
  4263   200006                     	org	2097158
  4264   200006  FF                 	db	255
  4265                           
  4266                           ;Config register IDLOC7 @ 0x200007
  4267                           ;	unspecified, using default values
  4268   200007                     	org	2097159
  4269   200007  FF                 	db	255
  4270                           
  4271                           	psect	config
  4272                           
  4273                           ; Padding undefined space
  4274   300000                     	org	3145728
  4275   300000  FF                 	db	255
  4276                           
  4277                           ;Config register CONFIG1H @ 0x300001
  4278                           ;	Oscillator Selection bits
  4279                           ;	FOSC = INTIO67, Internal oscillator block
  4280                           ;	4X PLL Enable
  4281                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4282                           ;	Primary clock enable bit
  4283                           ;	PRICLKEN = ON, Primary clock enabled
  4284                           ;	Fail-Safe Clock Monitor Enable bit
  4285                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4286                           ;	Internal/External Oscillator Switchover bit
  4287                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4288   300001                     	org	3145729
  4289   300001  38                 	db	56
  4290                           
  4291                           ;Config register CONFIG2L @ 0x300002
  4292                           ;	Power-up Timer Enable bit
  4293                           ;	PWRTEN = ON, Power up timer enabled
  4294                           ;	Brown-out Reset Enable bits
  4295                           ;	BOREN = ON, Brown-out Reset enabled and controlled by software (SBOREN is enabled)
  4296                           ;	Brown Out Reset Voltage bits
  4297                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4298   300002                     	org	3145730
  4299   300002  1A                 	db	26
  4300                           
  4301                           ;Config register CONFIG2H @ 0x300003
  4302                           ;	Watchdog Timer Enable bits
  4303                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4304                           ;	Watchdog Timer Postscale Select bits
  4305                           ;	WDTPS = 32768, 1:32768
  4306   300003                     	org	3145731
  4307   300003  3C                 	db	60
  4308                           
  4309                           ; Padding undefined space
  4310   300004                     	org	3145732
  4311   300004  FF                 	db	255
  4312                           
  4313                           ;Config register CONFIG3H @ 0x300005
  4314                           ;	CCP2 MUX bit
  4315                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4316                           ;	PORTB A/D Enable bit
  4317                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4318                           ;	P3A/CCP3 Mux bit
  4319                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4320                           ;	HFINTOSC Fast Start-up
  4321                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4322                           ;	Timer3 Clock input mux bit
  4323                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4324                           ;	ECCP2 B output mux bit
  4325                           ;	P2BMX = PORTB5, P2B is on RB5
  4326                           ;	MCLR Pin Enable bit
  4327                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4328   300005                     	org	3145733
  4329   300005  BF                 	db	191
  4330                           
  4331                           ;Config register CONFIG4L @ 0x300006
  4332                           ;	Stack Full/Underflow Reset Enable bit
  4333                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4334                           ;	Single-Supply ICSP Enable bit
  4335                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4336                           ;	Extended Instruction Set Enable bit
  4337                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4338                           ;	Background Debug
  4339                           ;	DEBUG = 0x1, unprogrammed default
  4340   300006                     	org	3145734
  4341   300006  85                 	db	133
  4342                           
  4343                           ; Padding undefined space
  4344   300007                     	org	3145735
  4345   300007  FF                 	db	255
  4346                           
  4347                           ;Config register CONFIG5L @ 0x300008
  4348                           ;	Code Protection Block 0
  4349                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4350                           ;	Code Protection Block 1
  4351                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4352                           ;	Code Protection Block 2
  4353                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4354                           ;	Code Protection Block 3
  4355                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4356   300008                     	org	3145736
  4357   300008  0F                 	db	15
  4358                           
  4359                           ;Config register CONFIG5H @ 0x300009
  4360                           ;	Boot Block Code Protection bit
  4361                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4362                           ;	Data EEPROM Code Protection bit
  4363                           ;	CPD = OFF, Data EEPROM not code-protected
  4364   300009                     	org	3145737
  4365   300009  C0                 	db	192
  4366                           
  4367                           ;Config register CONFIG6L @ 0x30000A
  4368                           ;	Write Protection Block 0
  4369                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4370                           ;	Write Protection Block 1
  4371                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4372                           ;	Write Protection Block 2
  4373                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4374                           ;	Write Protection Block 3
  4375                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4376   30000A                     	org	3145738
  4377   30000A  0F                 	db	15
  4378                           
  4379                           ;Config register CONFIG6H @ 0x30000B
  4380                           ;	Configuration Register Write Protection bit
  4381                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4382                           ;	Boot Block Write Protection bit
  4383                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4384                           ;	Data EEPROM Write Protection bit
  4385                           ;	WRTD = OFF, Data EEPROM not write-protected
  4386   30000B                     	org	3145739
  4387   30000B  E0                 	db	224
  4388                           
  4389                           ;Config register CONFIG7L @ 0x30000C
  4390                           ;	Table Read Protection Block 0
  4391                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4392                           ;	Table Read Protection Block 1
  4393                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4394                           ;	Table Read Protection Block 2
  4395                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4396                           ;	Table Read Protection Block 3
  4397                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4398   30000C                     	org	3145740
  4399   30000C  0F                 	db	15
  4400                           
  4401                           ;Config register CONFIG7H @ 0x30000D
  4402                           ;	Boot Block Table Read Protection bit
  4403                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4404   30000D                     	org	3145741
  4405   30000D  40                 	db	64
  4406                           tosu	equ	0xFFF
  4407                           tosh	equ	0xFFE
  4408                           tosl	equ	0xFFD
  4409                           stkptr	equ	0xFFC
  4410                           pclatu	equ	0xFFB
  4411                           pclath	equ	0xFFA
  4412                           pcl	equ	0xFF9
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           indf0	equ	0xFEF
  4420                           postinc0	equ	0xFEE
  4421                           postdec0	equ	0xFED
  4422                           preinc0	equ	0xFEC
  4423                           plusw0	equ	0xFEB
  4424                           fsr0h	equ	0xFEA
  4425                           fsr0l	equ	0xFE9
  4426                           wreg	equ	0xFE8
  4427                           indf1	equ	0xFE7
  4428                           postinc1	equ	0xFE6
  4429                           postdec1	equ	0xFE5
  4430                           preinc1	equ	0xFE4
  4431                           plusw1	equ	0xFE3
  4432                           fsr1h	equ	0xFE2
  4433                           fsr1l	equ	0xFE1
  4434                           bsr	equ	0xFE0
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           preinc2	equ	0xFDC
  4439                           plusw2	equ	0xFDB
  4440                           fsr2h	equ	0xFDA
  4441                           fsr2l	equ	0xFD9
  4442                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        23
    BSS         14
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_startTimer
    _startUpcounter->_stopMessage
    _lcd_print->_LCD_Set_Cursor
    _startTimer->_stopMessage
    _stopMessage->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Init->_LCD_CMD
    _LCD_CLR->_LCD_CMD
    _display->_LCD_Set_Cursor
    _inttochar->_EEPROM_Read
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C2_Send
    _EEPROM_Mem_Initialise->_EEPROM_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   11002
                                             23 COMRAM     8     8      0
              _EEPROM_Mem_Initialise
                          _I2C2_Init
                           _LCD_Init
                           _blue_led
                            _display
                            _red_led
                         _startTimer
                     _startUpcounter
                          _stopTimer
 ---------------------------------------------------------------------------------
 (1) _startUpcounter                                       6     6      0    3922
                                             12 COMRAM     6     6      0
                            _LCD_CLR
                          _inttochar
                          _lcd_print
               _seven_segment_config
                        _stopMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            3     1      2    1496
                                              8 COMRAM     3     1      2
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                          _inttochar (ARG)
 ---------------------------------------------------------------------------------
 (1) _startTimer                                          11    11      0    2276
                                             12 COMRAM    11    11      0
                        _EEPROM_Read
                            ___awmod
                          _green_led
               _seven_segment_config
                        _stopMessage
                          _stopTimer
 ---------------------------------------------------------------------------------
 (1) _stopTimer                                            2     2      0       0
                                              0 COMRAM     2     2      0
                            _red_led
               _seven_segment_config
 ---------------------------------------------------------------------------------
 (2) _seven_segment_config                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stopMessage                                          4     4      0    1517
                                             10 COMRAM     2     2      0
                            _LCD_CLR
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _red_led
 ---------------------------------------------------------------------------------
 (2) _red_led                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     6     4      2     256
                                              4 COMRAM     6     4      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Init                                             3     3      0     135
                                              4 COMRAM     3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CLR                                              0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _green_led                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display                                             18    14      4    3756
                                              8 COMRAM    14    10      4
                        _EEPROM_Read
                       _EEPROM_Write
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                            ___lwmod
                          _inttochar
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            2     0      2     706
                                              1 COMRAM     2     0      2
                        _EEPROM_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       1     1      0      90
                                              3 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       4     3      1    1036
                                              4 COMRAM     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (5) _LCD_Write_4Bit                                       1     1      0      60
                                              2 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (6) _IO_Expander_Write                                    1     1      0      30
                                              1 COMRAM     1     1      0
                          _I2C2_Send
                         _I2C2_Start
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_Send                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _blue_led                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Mem_Initialise                                8     8      0     631
                                              2 COMRAM     6     6      0
                        _EEPROM_Read
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Mem_Initialise
     _EEPROM_Read
     _EEPROM_Write
   _I2C2_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C2_Send
       _I2C2_Start
       _I2C2_Stop
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _blue_led
   _display
     _EEPROM_Read
     _EEPROM_Write
     _LCD_Set_Cursor
       _LCD_CMD
     _LCD_Write_Char
       _LCD_Write_4Bit
     ___lwmod
     _inttochar
       _EEPROM_Read (ARG)
   _red_led
   _startTimer
     _EEPROM_Read
     ___awmod
     _green_led
     _seven_segment_config
     _stopMessage
       _LCD_CLR
         _LCD_CMD
       _LCD_Init
       _LCD_Set_Cursor
       _LCD_Write_String
         _LCD_Write_Char
       _red_led
     _stopTimer
       _red_led
       _seven_segment_config
   _startUpcounter
     _LCD_CLR
     _inttochar
     _lcd_print
       _LCD_Set_Cursor
       _LCD_Write_Char
       _inttochar (ARG)
     _seven_segment_config
     _stopMessage
   _stopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      45       1       72.6%
BITBIGSFRllhl       30      0       0      26        0.0%
BITBIGSFRhhhll      29      0       0      17        0.0%
BITBIGSFRhhhlh      1E      0       0      16        0.0%
BITBIGSFRllhh       11      0       0      25        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRhhllll      6      0       0      21        0.0%
BITBIGSFRlh          6      0       0      24        0.0%
BITBIGSFRhhllll      6      0       0      22        0.0%
BITBIGSFRhhlllh      5      0       0      20        0.0%
BITBIGSFRhhllhl      2      0       0      19        0.0%
BITBIGSFRhhllhh      1      0       0      18        0.0%
BITBIGSFRhl          1      0       0      23        0.0%
BITBIGSFRlll         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      28        0.0%
DATA                 0      0      45      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 13 00:04:43 2023

             display@hour_s_digit 0011                                l81 11C6                                l90 158A  
                              l84 15A4                                l93 1570                                l87 1556  
                              l99 1456                                u10 1628                                u11 1624  
                              u20 15BA                                u21 15B6                                u30 1614  
                              u31 1610                                _RS 0044              _seven_segment_config 166A  
                             l201 06CE                               l203 0724                               l123 163A  
                             l132 1662                               l108 139C                               l126 1652  
                             l135 166A                               l232 1668                               l129 165A  
                             l306 1606                               l170 0D90                               l171 0DAC  
                             l235 1602                               l324 15AC                               l308 1614  
                             l309 1616                               l229 0A46                               l173 0DB2  
                             l253 0E3C                               l326 15BA                               l182 11E4  
                             l191 1534                               l247 10D0                               l327 15BE  
                             l255 0ECC                               l192 1536                               l176 14D0  
                             l186 1282                               l195 164A                               l291 15D6  
                             l179 1496                               l189 1526                               l294 161A  
                             l199 0668                               l296 1628                               l297 162A  
                             l580 1332                               l844 1400                               l837 13F8  
                             _DEL 0039                               u800 13B0                               u720 1456  
                             u801 13AC                               u721 1452                               u730 1534  
                             u810 13CE                               u731 1530                               u811 13CA  
                             u820 13E4                               u740 1296                               u900 0C76  
                             u821 13E0                               u741 1292                               u901 0C72  
                             u750 12B0                               u910 0C9C                               u830 0AC4  
                             u751 12AC                               u911 0C98                               u831 0AC0  
                             u760 12CA                               u920 0CC8                               u840 0AFC  
                             u761 12C6                               u921 0CC4                               u841 0AF8  
                             u770 12E8                               u930 0CDA                               u850 0B50  
                             u771 12E4                               u931 0CD6                               u851 0B4C  
                             u780 12FE                               u940 0CEC                               u860 0B6E  
                             u781 12FA                               u941 0CE8                               u861 0B6A  
                             u790 1322                               u950 0D04                               u870 0B80  
                             u791 131E                               u951 0D00                               u871 0B7C  
                             u960 0D16                               u880 0B92                               u961 0D12  
                             u881 0B8E                               u970 0D28                               u890 0BA4  
                             u971 0D24                               u891 0BA0                               u980 0D40  
                             u981 0D3C                               u990 0D52                               u991 0D4E  
                    ___awmod@sign 0006                               wreg 0FE8                   __end_of_LCD_CMD 158C  
                 __end_of_LCD_CLR 163C                  _segment_with_dot 0020               LCD_Write_String@Str 0005  
                  _LCD_Set_Cursor 1334                              l1011 15A8                              l1101 163E  
                            l1013 1604                              l1021 15A0                              l1103 1642  
                            l1015 158E                              l1023 153A                              l1031 1574  
                            l1105 1644                              l1009 1618                              l1017 1592  
                            l1025 153E                              l1033 1578                              l1041 1566  
                            l1121 14B6                              l1113 1498                              l2001 0D16  
                            l1107 1646                              l1019 1598                              l1027 1546  
                            l1035 1580                              l1051 110C                              l1043 10D4  
                            l1123 14CE                              l1115 149C                              l2011 0D68  
                            l2003 0D2C                              l1109 1648                              l1029 154E  
                            l1037 155A                              l2101 07EC                              l1061 116C  
                            l1053 1122                              l1045 10D8                              l1117 14A2  
                            l2021 0DA4                              l2005 0D32                              l2013 0D6E  
                            l1039 155E                              l2111 0850                              l2103 0808  
                            l1063 1172                              l1055 1128                              l1047 10DE  
                            l1119 14A6                              l2023 0DAE                              l2015 0D7C  
                            l2007 0D40                              l2201 104C                              l1217 165C  
                            l2121 08C2                              l1065 1190                              l1057 113E  
                            l1049 10FC                              l2009 0D52                              l2017 0D82  
                            l2041 11F8                              l2033 11E6                              l2025 11C8  
                            l2211 106C                              l2203 105E                              l2131 0906  
                            l2107 082C                              l1067 11A8                              l1059 114E  
                            l2019 0D92                              l2051 124E                              l2043 120E  
                            l2027 11CC                              l2213 1084                              l2221 10B8  
                            l2141 095E                              l2133 0910                              l2125 08D4  
                            l2117 0874                              l2061 0614                              l1093 162C  
                            l2053 1268                              l2045 121C                              l2029 11D0  
                            l2301 0EC4                              l2215 1086                              l2151 099E  
                            l2135 092C                              l2127 08E8                              l2119 08B0  
                            l2071 0672                              l2063 061E                              l1095 1632  
                            l2047 1220                              l2039 11EE                              l2055 127A  
                            l2311 0EEE                              l2303 0EDA                              l2231 0DC2  
                            l2223 0DB4                              l2217 1096                              l2209 1062  
                            l2401 0A02                              l2161 09DE                              l2145 096C  
                            l2137 0940                              l2129 08FE                              l2081 06EC  
                            l2073 0686                              l2065 0630                              l1097 164C  
                            l2057 127E                              l2049 1236                              l2321 0F16  
                            l2313 0F06                              l2305 0EDC                              l2241 0DCE  
                            l2233 0DC6                              l2225 0DBC                              l2219 10A0  
                            l2403 137E                              l2171 0A3E                              l2155 09AC  
                            l2147 0980                              l2139 0956                              l2091 0748  
                            l2083 06F2                              l2075 068C                              l2067 0636  
                            l2059 0608                              l1099 1654                              l2323 0F28  
                            l2331 0F5E                              l2315 0F0E                              l2307 0EDC  
                            l2251 0DD8                              l2243 0DD0                              l2235 0DC8  
                            l2227 0DBE                              l2181 0F80                              l2157 09C0  
                            l2149 0996                              l2093 0764                              l2085 070E  
                            l2077 06A8                              l2069 0652                              l2333 0F5E  
                            l2325 0F2C                              l2317 0F0E                              l2309 0EEE  
                            l2261 0E02                              l2253 0DDC                              l2245 0DD2  
                            l2237 0DCA                              l2229 0DC0                              l2191 0FEC  
                            l2183 0F8C                              l2159 09D6                              l2167 09EC  
                            l2095 077A                              l2087 072E                              l2079 06D8  
                            l2335 0F62                              l2327 0F3E                              l2319 0F16  
                            l2271 0E1A                              l2263 0E0A                              l2255 0DE2  
                            l2247 0DD4                              l2239 0DCC                              l2193 1002  
                            l2185 0FA8                              l1561 15CA                              l2169 0A28  
                            l2097 07A2                              l2089 0742                              l1801 1490  
                            l2337 0F76                              l2329 0F46                              l2281 0E36  
                            l2273 0E1A                              l2265 0E12                              l2257 0DE6  
                            l2249 0DD6                              l1811 150A                              l2195 1018  
                            l2187 0FC0                              l2099 07CC                              l1803 1494  
                            l2291 0E7E                              l2283 0E4A                              l2275 0E28  
                            l2267 0E1A                              l2259 0DFE                              l1821 1518  
                            l1813 150E                              l2189 0FD6                              l2197 102E  
                            l1805 1664                              l1901 0AA8                              l2293 0E94  
                            l2285 0E4C                              l2277 0E2A                              l2269 0E1A  
                            l1823 151A                              l1815 1512                              l2199 1044  
                            l1559 15C0                              l1831 1284                              l1911 0AFC  
                            l1903 0AC4                              l2295 0E9C                              l2287 0E54  
                            l2279 0E2E                              l1825 151E                              l1817 1514  
                            l1841 12B0                              l1833 1288                              l1921 0B6E  
                            l1913 0B08                              l1905 0AD0                              l1809 15F2  
                            l2297 0EA4                              l2289 0E66                              l1827 1522  
                            l1819 1516                              l1851 12E8                              l1843 12B8  
                            l1835 1296                              l1771 142A                              l1923 0B80  
                            l1915 0B28                              l1907 0ADC                              l2299 0EBC  
                            l1829 1524                              l1781 1352                              l1861 1322  
                            l1853 12FE                              l1845 12CA                              l1837 129E  
                            l1773 142E                              l1941 0BC0                              l1925 0B92  
                            l1917 0B50                              l1909 0AE0                              l1783 135E  
                            l1775 1336                              l1871 13B8                              l2399 088A  
                            l1863 132A                              l1855 1306                              l1847 12D2  
                            l1839 12A2                              l1767 1402                              l1791 1458  
                            l1951 0BF4                              l1943 0BD0                              l1935 0BB8  
                            l1927 0BA4                              l1919 0B5C                              l1777 133A  
                            l1785 136A                              l1881 13F2                              l1873 13C0  
                            l1857 130C                              l1849 12DA                              l1769 140E  
                            l1793 145C                              l1961 0C28                              l1953 0C04  
                            l1945 0BE0                              l1937 0BBC                              l1929 0BB0  
                            l1779 1346                              l1875 13CE                              l1867 139E  
                            l1859 1312                              l1795 1462                              l1971 0C4E  
                            l1963 0C2A                              l1955 0C06                              l1947 0BE2  
                            l1939 0BBE                              l1891 0A76                              l1883 0A48  
                            l1877 13E4                              l1869 13B0                              l1797 146C  
                            l1981 0C8C                              l1973 0C50                              l1965 0C2C  
                            l1957 0C08                              l1949 0BE4                              l1893 0A78  
                            l1885 0A70                              l1879 13EC                              l1799 1478  
                            l1991 0CC8                              l1975 0C76                              l1983 0C8E  
                            l1967 0C3C                              l1959 0C18                              l1895 0A86  
                            l1887 0A72                              l1993 0CDA                              l1985 0C9C  
                            l1977 0C78                              l1969 0C4C                              l1897 0A98  
                            l1889 0A74                              l1995 0CF0                              l1987 0CA8  
                            l1979 0C7C                              l1899 0A9C                              l1989 0CAE  
                            l1997 0CF6                              l1999 0D04                              STR_1 0601  
                            u1000 0D64                              u1001 0D60                              u1010 0D7C  
                            u1011 0D78                              u1100 0742                              u1020 0D90  
                            u1101 073E                              u1021 0D8C                              u1110 07A2  
                            u1030 0DA4                              u1111 079E                              u1031 0DA0  
                            u1200 0FD6                              u1120 07C8                              u1040 11E0  
                            u1201 0FD2                              u1121 07C4                              u1041 11DC  
                            u1210 0FEC                              u1130 08C2                              u1050 1236  
                            u1211 0FE8                              u1131 08BE                              u1051 1232  
                            u1220 1002                              u1140 08D0                              u1060 127A  
                            u1300 0E66                              u1221 0FFE                              u1141 08CC  
                            u1061 1276                              u1301 0E62                              u1230 1018  
                            u1150 08FE                              u1070 0630                              u1310 0E94  
                            u1231 1014                              u1151 08FA                              u1071 062C  
                            u1311 0E90                              u1240 102E                              u1160 0956  
                            u1080 0686                              u1320 0EDA                              u1241 102A  
                            u1161 0952                              u1081 0682                              u1321 0ED6  
                            u1250 1044                              u1170 0996                              u1090 06EC  
                            u1330 0EEE                              u1251 1040                              u1171 0992  
                            u1091 06E8                              u1331 0EEA                              u1260 105E  
                            u1180 09D6                              u1340 0F28                              u1261 105A  
                            u1181 09D2                              u1341 0F24                              u1270 1096  
                            u1190 0A3E                              u1350 0F3E                              u1271 1092  
                            u1191 0A3A                              u1407 0BD6                              u1351 0F3A  
                            u1280 0E28                              u1417 0BFA                              u1281 0E24  
                            u1290 0E4A                              u1507 112E                              u1427 0C1E  
                            u1291 0E46                       _stopMessage 1458                              u1517 1144  
                            u1437 0C42                              u1607 0752                              u1527 115E  
                            u1447 0C82                              u1367 0DF0                              u1617 07F6  
                            u1537 117C                              u1457 14C0                              u1377 0E70  
                            u1627 091A                              u1547 119A                              u1467 1482  
                            u1387 1240                              u1637 1550                              u1557 11B8  
                            u1477 10E8                              u1397 125A                              u1647 0F96  
                            u1567 1634                              u1487 1102                              u1657 0FB2  
                            u1577 0640                              u1497 1118                              u1667 1076  
                            u1587 0696                              u1677 10AA                              u1597 06FC  
                            u1687 10C2                 ?_LCD_Write_String 0005                              _main 0DB4  
                            indf2 0FDF                              fsr1l 0FE1                              fsr2l 0FD9  
                            start 0000                ??_LCD_Write_String 0007                      ___param_bank 0000  
            LCD_Write_4Bit@Nibble 0003              __end_of_EEPROM_Write 1538                  __end_of_LCD_Init 11C8  
           ?_seven_segment_config 0001                 __end_of_I2C2_Init 15D8            ?_EEPROM_Mem_Initialise 0001  
                           ?_main 0001                 __end_of_I2C2_Send 15C0                             _EEADR 0FA9  
                 __end_of___awmod 1334                 __end_of_I2C2_Stop 1618                   __end_of___lwmod 1402  
                           _PORTB 0F81                      lcd_print@col 0009            __end_of_LCD_Set_Cursor 139E  
                    lcd_print@row 000B                   __end_of_display 0A48                   __end_of_red_led 1654  
          _display_function_count 0037                             tablat 0FF5                             status 0FD8  
                EEPROM_Write@data 0001                    _LCD_Write_4Bit 1538                      ??_I2C2_Start 0001  
                  _LCD_Write_Char 1558                   __initialization 14D2                      __end_of_main 0F80  
               _IO_Expander_Write 158C                ?_IO_Expander_Write 0001                            ??_main 0018  
                   __activetblptr 0002                         ??_LCD_CMD 0004                         ??_LCD_CLR 0005  
             ??_IO_Expander_Write 0002                   ?_LCD_Set_Cursor 0005                    _startUpcounter 11C8  
                          _EEDATA 0FA8                            _EECON2 0FA7                __end_of_I2C2_Start 162C  
                          _OSCCON 0FD3            __end_of_LCD_Write_4Bit 1558            __end_of_LCD_Write_Char 1572  
                   lcd_print@Data 000A                  __end_of_blue_led 1664         __end_of_IO_Expander_Write 15A6  
                       ??___awmod 0005                     display@update 000B                         ??___lwmod 0005  
              _minute_first_digit 003D            ??_seven_segment_config 0001                            clear_0 14F8  
                 ___awmod@divisor 0003                            isa$std 0001                   ___awmod@counter 0005  
                       ??_display 000D                      __pdataCOMRAM 0020                         ??_red_led 0001  
                  _segmentCounter 0043                      __mediumconst 0000            __end_of_startUpcounter 1284  
                          tblptrh 0FF7                            tblptrl 0FF6             display@minute_f_digit 0013  
                          tblptru 0FF8             display@minute_s_digit 0015                     main@stop_flag 001A  
                      __accesstop 0060           __end_of__initialization 14FE                         ?_LCD_Init 0001  
                 ?_LCD_Write_4Bit 0001                     ___rparam_used 0001                   ?_LCD_Write_Char 0001  
                  __pcstackCOMRAM 0001         startTimer@hour_first_flag 000E                   ?_startUpcounter 0001  
                    ?_stopMessage 0001                      _EEPROM_Write 1508                    main@isEditMode 001C  
                      ??_LCD_Init 0005                        __pnvCOMRAM 0045           ??_EEPROM_Mem_Initialise 0003  
                         _LCD_CMD 1572                           _LCD_CLR 162C                         _I2C2_Init 15C0  
                       _I2C2_Send 15A6                         _I2C2_Stop 1604                           _OSCTUNE 0F9B  
                         _SSP2ADD 0F6E                           _SSP2BUF 0F6F                         ?_blue_led 0001  
    startTimer@minute_second_flag 0012                  startTimer@timeUp 0014                           _i2c_add 0045  
                         __Hparam 0000                           __Lparam 0000                 __end_of_lcd_print 1604  
                         ___awmod 1284                           ___lwmod 139E                      __psmallconst 0600  
                         __pcinit 14D2                           __ramtop 0600                 __end_of_green_led 165C  
                ??_LCD_Set_Cursor 0006                           __ptext0 0DB4                           __ptext1 11C8  
                         __ptext2 15F0                           __ptext3 0A48                           __ptext4 1498  
                         __ptext5 166A                           __ptext6 1458                           __ptext7 164C  
                         __ptext8 1402                           __ptext9 10D2                           _display 0608  
                         _red_led 164C                  ___awmod@dividend 0001                        ?_I2C2_Init 0001  
                         _segment 002B                        ?_I2C2_Send 0001                        ?_I2C2_Stop 0001  
                      ??_blue_led 0001                 __end_of_inttochar 166A              end_of_initialization 14FE  
                   ??_EEPROM_Read 0001                     __Lmediumconst 0000                           postdec1 0FE5  
                         postinc0 0FEE                 __end_of_stopTimer 14D2                         _PORTCbits 0F82  
                      LCD_CMD@CMD 0004                         _TRISAbits 0F92                         _TRISBbits 0F93  
                       _TRISCbits 0F94                  ??_LCD_Write_4Bit 0003                        _startTimer 0A48  
               LCD_Write_String@i 0009                  ??_LCD_Write_Char 0004               __end_of_EEPROM_Read 164C  
                _LCD_Write_String 1402                     __pidataCOMRAM 15D8                 _hour_second_digit 003F  
                ??_startUpcounter 000D               start_initialization 14D2                       ??_I2C2_Init 0001  
                     ??_I2C2_Send 0001                       ??_I2C2_Stop 0001     __end_of_EEPROM_Mem_Initialise 10D2  
                        ?_LCD_CMD 0001                          ?_LCD_CLR 0001                       __pbssCOMRAM 0037  
     startTimer@minute_first_flag 0010               _minute_second_digit 003B                       ?_startTimer 0001  
                     _EEPROM_Read 163C          startUpcounter@displaypos 0011             IO_Expander_Write@Data 0002  
                _hour_first_digit 0041                          ?___awmod 0001                   startTimer@RESET 0016  
                        ?___lwmod 0001                         _lcd_print 15F0                    inttochar@digit 0002  
                        ?_display 0009                       __smallconst 0600                          ?_red_led 0001  
                       _green_led 1654                  main@shiftCounter 001E                          _LCD_Init 10D2  
                        _LATAbits 0F89                          _LATCbits 0F8B                         _inttochar 1664  
                        _PIR2bits 0FA1                          _PIR3bits 0FA4                        _I2C2_Start 1618  
                        _SSP2CON1 0F6C                          _SSP2STAT 0F6D                        ?_lcd_print 0009  
                       _stopTimer 1498                        ?_green_led 0001                         copy_data0 14E6  
        __end_of_LCD_Write_String 1458    EEPROM_Mem_Initialise@flag_addr 0007                        ?_inttochar 0002  
                      _EECON1bits 0FA6                          __Hrparam 0000                          __Lrparam 0000  
         startUpcounter@actualpos 000F    EEPROM_Mem_Initialise@mem_check 0005                        _ANSELBbits 0F39  
                      _ANSELCbits 0F3A                        ?_stopTimer 0001                          __ptext10 162C  
                        __ptext11 1654                          __ptext20 158C                          __ptext12 1284  
                        __ptext21 1604                          __ptext13 0608                          __ptext22 1618  
                        __ptext14 1664                          __ptext23 15A6                          __ptext15 139E  
                        __ptext24 165C                          __ptext16 1558                          __ptext25 15C0  
                        __ptext17 1334                          __ptext26 0F80                          __ptext18 1572  
                        __ptext27 1508                          __ptext19 1538                          __ptext28 163C  
                        _blue_led 165C                     ??_stopMessage 000B                     ?_EEPROM_Write 0001  
                    _SSP2CON2bits 0F6B      __end_of_seven_segment_config 166C              display@buttonCounter 0009  
                 _BackLight_State 0036                       ?_I2C2_Start 0001                          isa$xinst 0000  
                     ??_lcd_print 000B                        _INTCONbits 0FF2                       ??_green_led 0001  
              LCD_Write_Char@Data 0004                    ??_EEPROM_Write 0002                      ??_startTimer 000D  
                ___lwmod@dividend 0001                      ?_EEPROM_Read 0001                       ??_inttochar 0004  
             __end_of_stopMessage 1498                EEPROM_Read@address 0001                   LCD_Init@I2C_Add 0007  
EEPROM_Mem_Initialise@eeprom_addr 0008                __end_of_startTimer 0DB4             _EEPROM_Mem_Initialise 0F80  
                 ___lwmod@divisor 0003                     I2C2_Send@BYTE 0001                       ??_stopTimer 0001  
                 ___lwmod@counter 0005                 LCD_Set_Cursor@COL 0005                 LCD_Set_Cursor@ROW 0008  
             display@hour_f_digit 000F               EEPROM_Write@address 0002  
