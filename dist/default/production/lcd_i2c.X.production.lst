

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 11 01:58:11 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 06/04/2022 GMT
    46                           ; 
    47                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F25K22 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   001416                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _segment_with_dot
    85   001416  BF                 	db	191
    86   001417  86                 	db	134
    87   001418  DB                 	db	219
    88   001419  CF                 	db	207
    89   00141A  E6                 	db	230
    90   00141B  ED                 	db	237
    91   00141C  FD                 	db	253
    92   00141D  87                 	db	135
    93   00141E  FF                 	db	255
    94   00141F  EF                 	db	239
    95   001420  00                 	db	0
    96                           
    97                           ;initializer for _segment
    98   001421  3F                 	db	63
    99   001422  06                 	db	6
   100   001423  5B                 	db	91
   101   001424  4F                 	db	79
   102   001425  66                 	db	102
   103   001426  6D                 	db	109
   104   001427  7D                 	db	125
   105   001428  07                 	db	7
   106   001429  7F                 	db	127
   107   00142A  6F                 	db	111
   108   00142B  00                 	db	0
   109                           
   110                           ;initializer for _BackLight_State
   111   00142C  08                 	db	8
   112   000000                     _TRISBbits	set	3987
   113   000000                     _EECON2	set	4007
   114                           
   115                           	psect	nvCOMRAM
   116   000045                     __pnvCOMRAM:
   117                           	callstack 0
   118   000045                     _i2c_add:
   119                           	callstack 0
   120   000045                     	ds	1
   121   000000                     _ANSELBbits	set	3897
   122   000000                     _ANSELCbits	set	3898
   123   000000                     _PORTB	set	3969
   124   000000                     _LATAbits	set	3977
   125   000000                     _LATCbits	set	3979
   126   000000                     _TRISAbits	set	3986
   127   000000                     _TRISCbits	set	3988
   128   000000                     _OSCTUNE	set	3995
   129   000000                     _PIR2bits	set	4001
   130   000000                     _EECON1bits	set	4006
   131   000000                     _EEDATA	set	4008
   132   000000                     _EEADR	set	4009
   133   000000                     _PORTCbits	set	3970
   134   000000                     _OSCCON	set	4051
   135   000000                     _INTCONbits	set	4082
   136   000000                     _PIR3bits	set	4004
   137   000000                     _SSP2CON2bits	set	3947
   138   000000                     _SSP2CON1	set	3948
   139   000000                     _SSP2STAT	set	3949
   140   000000                     _SSP2BUF	set	3951
   141   000000                     _SSP2ADD	set	3950
   142                           
   143                           	psect	smallconst
   144   000600                     __psmallconst:
   145                           	callstack 0
   146   000600  00                 	db	0
   147   000601                     STR_1:
   148                           
   149                           ; BSR set to: 15
   150   000601  4F                 	db	79	;'O'
   151   000602  56                 	db	86	;'V'
   152   000603  45                 	db	69	;'E'
   153   000604  52                 	db	82	;'R'
   154   000605  00                 	db	0
   155   000606  00                 	db	0	; dummy byte at the end
   156   000000                     
   157                           ; #config settings
   158                           
   159                           	psect	cinit
   160   0012EC                     __pcinit:
   161                           	callstack 0
   162   0012EC                     start_initialization:
   163                           	callstack 0
   164   0012EC                     __initialization:
   165                           	callstack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (23 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169   0012EC  0E16               	movlw	low __pidataCOMRAM
   170   0012EE  6EF6               	movwf	tblptrl,c
   171   0012F0  0E14               	movlw	high __pidataCOMRAM
   172   0012F2  6EF7               	movwf	tblptrh,c
   173   0012F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174   0012F6  6EF8               	movwf	tblptru,c
   175   0012F8  EE00  F020         	lfsr	0,__pdataCOMRAM
   176   0012FC  EE10 F017          	lfsr	1,23
   177   001300                     copy_data0:
   178   001300  0009               	tblrd		*+
   179   001302  CFF5 FFEE          	movff	tablat,postinc0
   180   001306  50E5               	movf	postdec1,w,c
   181   001308  50E1               	movf	fsr1l,w,c
   182   00130A  E1FA               	bnz	copy_data0
   183                           
   184                           ; Clear objects allocated to COMRAM (14 bytes)
   185   00130C  EE00  F037         	lfsr	0,__pbssCOMRAM
   186   001310  0E0E               	movlw	14
   187   001312                     clear_0:
   188   001312  6AEE               	clrf	postinc0,c
   189   001314  06E8               	decf	wreg,f,c
   190   001316  E1FD               	bnz	clear_0
   191   001318                     end_of_initialization:
   192                           	callstack 0
   193   001318                     __end_of__initialization:
   194                           	callstack 0
   195   001318  0E00               	movlw	low (__Lmediumconst shr (0+16))
   196   00131A  6EF8               	movwf	tblptru,c
   197   00131C  0100               	movlb	0
   198   00131E  EF95  F006         	goto	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMRAM
   201   000037                     __pbssCOMRAM:
   202                           	callstack 0
   203   000037                     _display_function_count:
   204                           	callstack 0
   205   000037                     	ds	2
   206   000039                     _DEL:
   207                           	callstack 0
   208   000039                     	ds	2
   209   00003B                     _minute_second_digit:
   210                           	callstack 0
   211   00003B                     	ds	2
   212   00003D                     _minute_first_digit:
   213                           	callstack 0
   214   00003D                     	ds	2
   215   00003F                     _hour_second_digit:
   216                           	callstack 0
   217   00003F                     	ds	2
   218   000041                     _hour_first_digit:
   219                           	callstack 0
   220   000041                     	ds	2
   221   000043                     _segmentCounter:
   222                           	callstack 0
   223   000043                     	ds	1
   224   000044                     _RS:
   225                           	callstack 0
   226   000044                     	ds	1
   227                           
   228                           	psect	dataCOMRAM
   229   000020                     __pdataCOMRAM:
   230                           	callstack 0
   231   000020                     _segment_with_dot:
   232                           	callstack 0
   233   000020                     	ds	11
   234   00002B                     _segment:
   235                           	callstack 0
   236   00002B                     	ds	11
   237   000036                     _BackLight_State:
   238                           	callstack 0
   239   000036                     	ds	1
   240                           
   241                           	psect	cstackCOMRAM
   242   000001                     __pcstackCOMRAM:
   243                           	callstack 0
   244   000001                     ??_stopTimer:
   245   000001                     ?___awmod:
   246                           	callstack 0
   247   000001                     ?___lwmod:
   248                           	callstack 0
   249   000001                     EEPROM_Write@data:
   250                           	callstack 0
   251   000001                     EEPROM_Read@address:
   252                           	callstack 0
   253   000001                     I2C2_Send@BYTE:
   254                           	callstack 0
   255   000001                     inttochar@digit:
   256                           	callstack 0
   257   000001                     ___awmod@dividend:
   258                           	callstack 0
   259   000001                     ___lwmod@dividend:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x0
   263   000001                     	ds	1
   264   000002                     IO_Expander_Write@Data:
   265                           	callstack 0
   266   000002                     EEPROM_Write@address:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x1
   270   000002                     	ds	1
   271   000003                     LCD_Write_4Bit@Nibble:
   272                           	callstack 0
   273   000003                     ___awmod@divisor:
   274                           	callstack 0
   275   000003                     ___lwmod@divisor:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279   000003                     	ds	1
   280   000004                     LCD_CMD@CMD:
   281                           	callstack 0
   282   000004                     LCD_Write_Char@Data:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286   000004                     	ds	1
   287   000005                     ??_LCD_Init:
   288   000005                     LCD_Set_Cursor@COL:
   289                           	callstack 0
   290   000005                     ___awmod@counter:
   291                           	callstack 0
   292   000005                     ___lwmod@counter:
   293                           	callstack 0
   294   000005                     LCD_Write_String@Str:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x4
   298   000005                     	ds	1
   299   000006                     ??_LCD_Set_Cursor:
   300   000006                     ___awmod@sign:
   301                           	callstack 0
   302   000006                     display@buttonCounter:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x5
   306   000006                     	ds	1
   307   000007                     ??_LCD_Write_String:
   308   000007                     LCD_Init@I2C_Add:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x6
   312   000007                     	ds	1
   313   000008                     LCD_Set_Cursor@ROW:
   314                           	callstack 0
   315   000008                     display@update:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x7
   319   000008                     	ds	1
   320   000009                     lcd_print@col:
   321                           	callstack 0
   322   000009                     LCD_Write_String@i:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x8
   326   000009                     	ds	1
   327   00000A                     ??_display:
   328   00000A                     lcd_print@Data:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x9
   332   00000A                     	ds	1
   333   00000B                     ??_startTimer:
   334   00000B                     lcd_print@row:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0xA
   338   00000B                     	ds	1
   339   00000C                     ??_startUpcounter:
   340   00000C                     startTimer@hour_first_flag:
   341                           	callstack 0
   342   00000C                     display@DEL:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0xB
   346   00000C                     	ds	2
   347   00000E                     display@hour_first_digit:
   348                           	callstack 0
   349   00000E                     startTimer@minute_first_flag:
   350                           	callstack 0
   351   00000E                     startUpcounter@actualpos:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0xD
   355   00000E                     	ds	1
   356   00000F                     display@hour_second_digit:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xE
   360   00000F                     	ds	1
   361   000010                     display@minute_first_digit:
   362                           	callstack 0
   363   000010                     startTimer@minute_second_flag:
   364                           	callstack 0
   365   000010                     startUpcounter@displaypos:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xF
   369   000010                     	ds	1
   370   000011                     display@minute_second_digit:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x10
   374   000011                     	ds	1
   375   000012                     startTimer@timeUp:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x11
   379   000012                     	ds	2
   380   000014                     startTimer@RESET:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x13
   384   000014                     	ds	2
   385   000016                     ??_main:
   386                           
   387                           ; 1 bytes @ 0x15
   388   000016                     	ds	2
   389   000018                     main@EEPROM_Mem_check:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x17
   393   000018                     	ds	2
   394   00001A                     main@stop_flag:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x19
   398   00001A                     	ds	2
   399   00001C                     main@isEditMode:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x1B
   403   00001C                     	ds	2
   404   00001E                     main@shiftCounter:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x1D
   408   00001E                     	ds	2
   409                           
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 672 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  shiftCounter    2   29[COMRAM] unsigned int 
   420 ;;  updateFlag      2    0        unsigned int 
   421 ;;  isEditMode      2   27[COMRAM] unsigned int 
   422 ;;  stop_flag       2   25[COMRAM] unsigned int 
   423 ;;  EEPROM_Mem_c    2   23[COMRAM] unsigned int 
   424 ;;  transition_s    2    0        unsigned int 
   425 ;;  transition_e    2    0        unsigned int 
   426 ;;  minute_secon    1    0        unsigned char 
   427 ;;  minute_first    1    0        unsigned char 
   428 ;;  hour_second_    1    0        unsigned char 
   429 ;;  hour_first_d    1    0        unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   439 ;;      Params:         0       0       0       0       0       0       0
   440 ;;      Locals:         8       0       0       0       0       0       0
   441 ;;      Temps:          2       0       0       0       0       0       0
   442 ;;      Totals:        10       0       0       0       0       0       0
   443 ;;Total ram usage:       10 bytes
   444 ;; Hardware stack levels required when called: 7
   445 ;; This function calls:
   446 ;;		_EEPROM_Read
   447 ;;		_EEPROM_Write
   448 ;;		_I2C2_Init
   449 ;;		_LCD_Init
   450 ;;		_blue_led
   451 ;;		_display
   452 ;;		_red_led
   453 ;;		_startTimer
   454 ;;		_startUpcounter
   455 ;;		_stopTimer
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text0
   462   000D2A                     __ptext0:
   463                           	callstack 0
   464   000D2A                     _main:
   465                           	callstack 24
   466   000D2A                     
   467                           ;main.c: 676:     OSCCON = 0x70;
   468   000D2A  0E70               	movlw	112
   469   000D2C  6ED3               	movwf	211,c	;volatile
   470                           
   471                           ;main.c: 677:     OSCTUNE = 0xC0;
   472   000D2E  0EC0               	movlw	192
   473   000D30  6E9B               	movwf	155,c	;volatile
   474   000D32                     
   475                           ;main.c: 680:     TRISCbits.TRISC0 = 1;
   476   000D32  8094               	bsf	148,0,c	;volatile
   477   000D34                     
   478                           ;main.c: 681:     TRISCbits.TRISC1 = 1;
   479   000D34  8294               	bsf	148,1,c	;volatile
   480   000D36                     
   481                           ;main.c: 682:     TRISCbits.TRISC2 = 1;
   482   000D36  8494               	bsf	148,2,c	;volatile
   483   000D38                     
   484                           ;main.c: 685:     ANSELCbits.ANSC2 = 0;
   485   000D38  010F               	movlb	15	; () banked
   486   000D3A  953A               	bcf	58,2,b	;volatile
   487   000D3C                     
   488                           ; BSR set to: 15
   489                           ;main.c: 696:     TRISAbits.TRISA4 = 0;
   490   000D3C  9892               	bcf	146,4,c	;volatile
   491   000D3E                     
   492                           ; BSR set to: 15
   493                           ;main.c: 697:     TRISAbits.TRISA5 = 0;
   494   000D3E  9A92               	bcf	146,5,c	;volatile
   495   000D40                     
   496                           ; BSR set to: 15
   497                           ;main.c: 698:     TRISAbits.TRISA6 = 0;
   498   000D40  9C92               	bcf	146,6,c	;volatile
   499   000D42                     
   500                           ; BSR set to: 15
   501                           ;main.c: 700:     TRISAbits.TRISA7 = 0;
   502   000D42  9E92               	bcf	146,7,c	;volatile
   503   000D44                     
   504                           ; BSR set to: 15
   505                           ;main.c: 701:     TRISCbits.TRISC3 = 0;
   506   000D44  9694               	bcf	148,3,c	;volatile
   507   000D46                     
   508                           ; BSR set to: 15
   509                           ;main.c: 708:     LATAbits.LATA4 = 1;
   510   000D46  8889               	bsf	137,4,c	;volatile
   511   000D48                     
   512                           ; BSR set to: 15
   513                           ;main.c: 709:     LATAbits.LATA5 = 1;
   514   000D48  8A89               	bsf	137,5,c	;volatile
   515   000D4A                     
   516                           ; BSR set to: 15
   517                           ;main.c: 710:     LATAbits.LATA6 = 1;
   518   000D4A  8C89               	bsf	137,6,c	;volatile
   519   000D4C                     
   520                           ; BSR set to: 15
   521                           ;main.c: 712:     LATCbits.LATC3 = 0;
   522   000D4C  968B               	bcf	139,3,c	;volatile
   523   000D4E                     
   524                           ; BSR set to: 15
   525                           ;main.c: 715:     I2C2_Init();
   526   000D4E  ECFF  F009         	call	_I2C2_Init	;wreg free
   527   000D52                     
   528                           ;main.c: 717:     LCD_Init((0x38<<1));
   529   000D52  0E70               	movlw	112
   530   000D54  EC96  F007         	call	_LCD_Init
   531   000D58                     
   532                           ;main.c: 723:     startUpcounter();
   533   000D58  EC11  F008         	call	_startUpcounter	;wreg free
   534   000D5C                     
   535                           ;main.c: 740:     unsigned int EEPROM_Mem_check;;main.c: 742:     EEPROM_Mem_check = EEP
      +                          ROM_Read(0x01);
   536   000D5C  0E01               	movlw	1
   537   000D5E  EC3D  F00A         	call	_EEPROM_Read
   538   000D62  6E16               	movwf	??_main^0,c
   539   000D64  5016               	movf	??_main^0,w,c
   540   000D66  6E18               	movwf	main@EEPROM_Mem_check^0,c
   541   000D68  6A19               	clrf	(main@EEPROM_Mem_check+1)^0,c
   542   000D6A                     
   543                           ;main.c: 747:     if (EEPROM_Mem_check != 1)
   544   000D6A  0418               	decf	main@EEPROM_Mem_check^0,w,c
   545   000D6C  1019               	iorwf	(main@EEPROM_Mem_check+1)^0,w,c
   546   000D6E  B4D8               	btfsc	status,2,c
   547   000D70  EFBC  F006         	goto	u1231
   548   000D74  EFBE  F006         	goto	u1230
   549   000D78                     u1231:
   550   000D78  EFD7  F006         	goto	l2168
   551   000D7C                     u1230:
   552   000D7C                     
   553                           ;main.c: 748:     {;main.c: 750:         EEPROM_Write(0x0A, 0);
   554   000D7C  0E00               	movlw	0
   555   000D7E  6E01               	movwf	EEPROM_Write@data^0,c
   556   000D80  0E0A               	movlw	10
   557   000D82  EC91  F009         	call	_EEPROM_Write
   558                           
   559                           ;main.c: 751:         EEPROM_Write(0x0B, 0);
   560   000D86  0E00               	movlw	0
   561   000D88  6E01               	movwf	EEPROM_Write@data^0,c
   562   000D8A  0E0B               	movlw	11
   563   000D8C  EC91  F009         	call	_EEPROM_Write
   564                           
   565                           ;main.c: 752:         EEPROM_Write(0x0C, 0);
   566   000D90  0E00               	movlw	0
   567   000D92  6E01               	movwf	EEPROM_Write@data^0,c
   568   000D94  0E0C               	movlw	12
   569   000D96  EC91  F009         	call	_EEPROM_Write
   570                           
   571                           ;main.c: 753:         EEPROM_Write(0x0D, 0);
   572   000D9A  0E00               	movlw	0
   573   000D9C  6E01               	movwf	EEPROM_Write@data^0,c
   574   000D9E  0E0D               	movlw	13
   575   000DA0  EC91  F009         	call	_EEPROM_Write
   576                           
   577                           ;main.c: 755:         EEPROM_Write(0x01, 1);
   578   000DA4  0E01               	movlw	1
   579   000DA6  6E01               	movwf	EEPROM_Write@data^0,c
   580   000DA8  0E01               	movlw	1
   581   000DAA  EC91  F009         	call	_EEPROM_Write
   582   000DAE                     l2168:
   583                           
   584                           ;main.c: 758:     unsigned int isEditMode = 0;
   585   000DAE  0E00               	movlw	0
   586   000DB0  6E1D               	movwf	(main@isEditMode+1)^0,c
   587   000DB2  0E00               	movlw	0
   588   000DB4  6E1C               	movwf	main@isEditMode^0,c
   589   000DB6                     
   590                           ;main.c: 759:     unsigned int shiftCounter = 1;
   591   000DB6  0E00               	movlw	0
   592   000DB8  6E1F               	movwf	(main@shiftCounter+1)^0,c
   593   000DBA  0E01               	movlw	1
   594   000DBC  6E1E               	movwf	main@shiftCounter^0,c
   595   000DBE                     
   596                           ;main.c: 760:     unsigned int stop_flag = 0;
   597   000DBE  0E00               	movlw	0
   598   000DC0  6E1B               	movwf	(main@stop_flag+1)^0,c
   599   000DC2  0E00               	movlw	0
   600   000DC4  6E1A               	movwf	main@stop_flag^0,c
   601   000DC6                     l2180:
   602                           
   603                           ;main.c: 767:     {;main.c: 768:         if (PORTCbits.RC0 == 0)
   604   000DC6  B082               	btfsc	130,0,c	;volatile
   605   000DC8  EFE8  F006         	goto	u1241
   606   000DCC  EFEA  F006         	goto	u1240
   607   000DD0                     u1241:
   608   000DD0  EFF4  F006         	goto	l236
   609   000DD4                     u1240:
   610   000DD4                     
   611                           ;main.c: 769:         {;main.c: 770:             LATAbits.LATA7 = 1;
   612   000DD4  8E89               	bsf	137,7,c	;volatile
   613   000DD6                     
   614                           ;main.c: 772:             isEditMode ^= 1;
   615   000DD6  0E01               	movlw	1
   616   000DD8  1A1C               	xorwf	main@isEditMode^0,f,c
   617   000DDA                     
   618                           ;main.c: 773:             stop_flag = 0;
   619   000DDA  0E00               	movlw	0
   620   000DDC  6E1B               	movwf	(main@stop_flag+1)^0,c
   621   000DDE  0E00               	movlw	0
   622   000DE0  6E1A               	movwf	main@stop_flag^0,c
   623   000DE2                     
   624                           ;main.c: 775:             LATAbits.LATA7 = 0;
   625   000DE2  9E89               	bcf	137,7,c	;volatile
   626                           
   627                           ;main.c: 776:         }
   628   000DE4  EFE3  F006         	goto	l2180
   629   000DE8                     l236:
   630   000DE8  B282               	btfsc	130,1,c	;volatile
   631   000DEA  EFF9  F006         	goto	u1251
   632   000DEE  EFFB  F006         	goto	u1250
   633   000DF2                     u1251:
   634   000DF2  EF3C  F007         	goto	l238
   635   000DF6                     u1250:
   636   000DF6                     
   637                           ;main.c: 778:         {;main.c: 779:             LATAbits.LATA7 = 1;
   638   000DF6  8E89               	bsf	137,7,c	;volatile
   639   000DF8                     
   640                           ;main.c: 782:             stop_flag = 0;
   641   000DF8  0E00               	movlw	0
   642   000DFA  6E1B               	movwf	(main@stop_flag+1)^0,c
   643   000DFC  0E00               	movlw	0
   644   000DFE  6E1A               	movwf	main@stop_flag^0,c
   645   000E00                     
   646                           ;main.c: 784:             if (isEditMode)
   647   000E00  501C               	movf	main@isEditMode^0,w,c
   648   000E02  101D               	iorwf	(main@isEditMode+1)^0,w,c
   649   000E04  B4D8               	btfsc	status,2,c
   650   000E06  EF07  F007         	goto	u1261
   651   000E0A  EF09  F007         	goto	u1260
   652   000E0E                     u1261:
   653   000E0E  EF34  F007         	goto	l2206
   654   000E12                     u1260:
   655   000E12                     
   656                           ;main.c: 785:             {;main.c: 787:                 _delay((unsigned long)((100)*(6
      +                          4000000/4000.0)));
   657   000E12  0E09               	movlw	9
   658   000E14  6E17               	movwf	(??_main+1)^0,c
   659   000E16  0E1E               	movlw	30
   660   000E18  6E16               	movwf	??_main^0,c
   661   000E1A  0EE4               	movlw	228
   662   000E1C                     u1327:
   663   000E1C  2EE8               	decfsz	wreg,f,c
   664   000E1E  D7FE               	bra	u1327
   665   000E20  2E16               	decfsz	??_main^0,f,c
   666   000E22  D7FC               	bra	u1327
   667   000E24  2E17               	decfsz	(??_main+1)^0,f,c
   668   000E26  D7FA               	bra	u1327
   669   000E28  D000               	nop2	
   670   000E2A                     
   671                           ;main.c: 789:                 if (shiftCounter < 4)
   672   000E2A  501F               	movf	(main@shiftCounter+1)^0,w,c
   673   000E2C  E107               	bnz	u1271
   674   000E2E  0E04               	movlw	4
   675   000E30  5C1E               	subwf	main@shiftCounter^0,w,c
   676   000E32  B0D8               	btfsc	status,0,c
   677   000E34  EF1E  F007         	goto	u1271
   678   000E38  EF20  F007         	goto	u1270
   679   000E3C                     u1271:
   680   000E3C  EF24  F007         	goto	l2202
   681   000E40                     u1270:
   682   000E40                     
   683                           ;main.c: 790:                     shiftCounter++;
   684   000E40  4A1E               	infsnz	main@shiftCounter^0,f,c
   685   000E42  2A1F               	incf	(main@shiftCounter+1)^0,f,c
   686   000E44  EF28  F007         	goto	l2204
   687   000E48                     l2202:
   688                           
   689                           ;main.c: 792:                     shiftCounter = 1;
   690   000E48  0E00               	movlw	0
   691   000E4A  6E1F               	movwf	(main@shiftCounter+1)^0,c
   692   000E4C  0E01               	movlw	1
   693   000E4E  6E1E               	movwf	main@shiftCounter^0,c
   694   000E50                     l2204:
   695                           
   696                           ;main.c: 794:                 display(shiftCounter, updateFlag);
   697   000E50  C01E  F006         	movff	main@shiftCounter,display@buttonCounter
   698   000E54  C01F  F007         	movff	main@shiftCounter+1,display@buttonCounter+1
   699   000E58  0E00               	movlw	0
   700   000E5A  6E09               	movwf	(display@update+1)^0,c
   701   000E5C  0E00               	movlw	0
   702   000E5E  6E08               	movwf	display@update^0,c
   703   000E60  EC04  F003         	call	_display	;wreg free
   704                           
   705                           ;main.c: 795:             }
   706   000E64  EFE3  F006         	goto	l2180
   707   000E68                     l2206:
   708                           
   709                           ;main.c: 797:             {;main.c: 805:                 shiftCounter = 1;
   710   000E68  0E00               	movlw	0
   711   000E6A  6E1F               	movwf	(main@shiftCounter+1)^0,c
   712   000E6C  0E01               	movlw	1
   713   000E6E  6E1E               	movwf	main@shiftCounter^0,c
   714   000E70                     
   715                           ;main.c: 815:                 startTimer();
   716   000E70  ECDF  F004         	call	_startTimer	;wreg free
   717   000E74  EFE3  F006         	goto	l2180
   718   000E78                     l238:
   719   000E78  B482               	btfsc	130,2,c	;volatile
   720   000E7A  EF41  F007         	goto	u1281
   721   000E7E  EF43  F007         	goto	u1280
   722   000E82                     u1281:
   723   000E82  EF61  F007         	goto	l2226
   724   000E86                     u1280:
   725   000E86                     
   726                           ;main.c: 819:         {;main.c: 820:             LATAbits.LATA7 = 1;
   727   000E86  8E89               	bsf	137,7,c	;volatile
   728   000E88                     
   729                           ;main.c: 823:             if (isEditMode)
   730   000E88  501C               	movf	main@isEditMode^0,w,c
   731   000E8A  101D               	iorwf	(main@isEditMode+1)^0,w,c
   732   000E8C  B4D8               	btfsc	status,2,c
   733   000E8E  EF4B  F007         	goto	u1291
   734   000E92  EF4D  F007         	goto	u1290
   735   000E96                     u1291:
   736   000E96  EF59  F007         	goto	l2220
   737   000E9A                     u1290:
   738   000E9A                     
   739                           ;main.c: 826:                 display(shiftCounter, updateFlag);
   740   000E9A  C01E  F006         	movff	main@shiftCounter,display@buttonCounter
   741   000E9E  C01F  F007         	movff	main@shiftCounter+1,display@buttonCounter+1
   742   000EA2  0E00               	movlw	0
   743   000EA4  6E09               	movwf	(display@update+1)^0,c
   744   000EA6  0E01               	movlw	1
   745   000EA8  6E08               	movwf	display@update^0,c
   746   000EAA  EC04  F003         	call	_display	;wreg free
   747                           
   748                           ;main.c: 827:             }
   749   000EAE  EFE3  F006         	goto	l2180
   750   000EB2                     l2220:
   751                           
   752                           ;main.c: 829:             {;main.c: 830:                 stop_flag = 1;
   753   000EB2  0E00               	movlw	0
   754   000EB4  6E1B               	movwf	(main@stop_flag+1)^0,c
   755   000EB6  0E01               	movlw	1
   756   000EB8  6E1A               	movwf	main@stop_flag^0,c
   757   000EBA                     
   758                           ;main.c: 834:                     stopTimer();
   759   000EBA  EC59  F009         	call	_stopTimer	;wreg free
   760   000EBE  EFE3  F006         	goto	l2180
   761   000EC2                     l2226:
   762   000EC2                     
   763                           ;main.c: 841:             if (isEditMode == 0)
   764   000EC2  501C               	movf	main@isEditMode^0,w,c
   765   000EC4  101D               	iorwf	(main@isEditMode+1)^0,w,c
   766   000EC6  A4D8               	btfss	status,2,c
   767   000EC8  EF68  F007         	goto	u1301
   768   000ECC  EF6A  F007         	goto	u1300
   769   000ED0                     u1301:
   770   000ED0  EF85  F007         	goto	l2238
   771   000ED4                     u1300:
   772   000ED4                     
   773                           ;main.c: 842:             {;main.c: 843:                 red_led();
   774   000ED4  EC45  F00A         	call	_red_led	;wreg free
   775   000ED8                     
   776                           ;main.c: 845:                 if (stop_flag)
   777   000ED8  501A               	movf	main@stop_flag^0,w,c
   778   000EDA  101B               	iorwf	(main@stop_flag+1)^0,w,c
   779   000EDC  B4D8               	btfsc	status,2,c
   780   000EDE  EF73  F007         	goto	u1311
   781   000EE2  EF75  F007         	goto	u1310
   782   000EE6                     u1311:
   783   000EE6  EF79  F007         	goto	l2236
   784   000EEA                     u1310:
   785   000EEA                     
   786                           ;main.c: 846:                 {;main.c: 847:                     stopTimer();
   787   000EEA  EC59  F009         	call	_stopTimer	;wreg free
   788                           
   789                           ;main.c: 848:                 }
   790   000EEE  EF91  F007         	goto	l2244
   791   000EF2                     l2236:
   792                           
   793                           ;main.c: 850:                 {;main.c: 851:                     display(0, 0);
   794   000EF2  0E00               	movlw	0
   795   000EF4  6E07               	movwf	(display@buttonCounter+1)^0,c
   796   000EF6  0E00               	movlw	0
   797   000EF8  6E06               	movwf	display@buttonCounter^0,c
   798   000EFA  0E00               	movlw	0
   799   000EFC  6E09               	movwf	(display@update+1)^0,c
   800   000EFE  0E00               	movlw	0
   801   000F00  6E08               	movwf	display@update^0,c
   802   000F02  EC04  F003         	call	_display	;wreg free
   803   000F06  EF91  F007         	goto	l2244
   804   000F0A                     l2238:
   805   000F0A                     
   806                           ;main.c: 857:                 blue_led();
   807   000F0A  EC4D  F00A         	call	_blue_led	;wreg free
   808   000F0E                     
   809                           ;main.c: 858:                 display(shiftCounter, updateFlag);
   810   000F0E  C01E  F006         	movff	main@shiftCounter,display@buttonCounter
   811   000F12  C01F  F007         	movff	main@shiftCounter+1,display@buttonCounter+1
   812   000F16  0E00               	movlw	0
   813   000F18  6E09               	movwf	(display@update+1)^0,c
   814   000F1A  0E00               	movlw	0
   815   000F1C  6E08               	movwf	display@update^0,c
   816   000F1E  EC04  F003         	call	_display	;wreg free
   817   000F22                     l2244:
   818                           
   819                           ;main.c: 861:             LATAbits.LATA7 = 0;
   820   000F22  9E89               	bcf	137,7,c	;volatile
   821   000F24  EFE3  F006         	goto	l2180
   822   000F28  EF00  F000         	goto	start
   823   000F2C                     __end_of_main:
   824                           	callstack 0
   825                           
   826 ;; *************** function _startUpcounter *****************
   827 ;; Defined at:
   828 ;;		line 444 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  displaypos      2   15[COMRAM] unsigned int 
   833 ;;  actualpos       2   13[COMRAM] unsigned int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   843 ;;      Params:         0       0       0       0       0       0       0
   844 ;;      Locals:         4       0       0       0       0       0       0
   845 ;;      Temps:          2       0       0       0       0       0       0
   846 ;;      Totals:         6       0       0       0       0       0       0
   847 ;;Total ram usage:        6 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 6
   850 ;; This function calls:
   851 ;;		_LCD_CLR
   852 ;;		_inttochar
   853 ;;		_lcd_print
   854 ;;		_seven_segment_config
   855 ;;		_stopMessage
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text1
   862   001022                     __ptext1:
   863                           	callstack 0
   864   001022                     _startUpcounter:
   865                           	callstack 24
   866   001022                     
   867                           ;main.c: 447:     seven_segment_config();
   868   001022  EC54  F00A         	call	_seven_segment_config	;wreg free
   869   001026                     
   870                           ;main.c: 448:     unsigned int displaypos, actualpos;;main.c: 452:     for (segmentCount
      +                          er = 0; segmentCounter < 10; segmentCounter++)
   871   001026  0E00               	movlw	0
   872   001028  6E43               	movwf	_segmentCounter^0,c
   873   00102A  0E09               	movlw	9
   874   00102C  6443               	cpfsgt	_segmentCounter^0,c
   875   00102E  EF1B  F008         	goto	u1021
   876   001032  EF1D  F008         	goto	u1020
   877   001036                     u1021:
   878   001036  EF1F  F008         	goto	l182
   879   00103A                     u1020:
   880   00103A  EF6A  F008         	goto	l1996
   881   00103E                     l182:
   882                           
   883                           ;main.c: 453:     {;main.c: 454:         LATAbits.LATA7 = 1;
   884   00103E  8E89               	bsf	137,7,c	;volatile
   885   001040                     
   886                           ;main.c: 456:         for(displaypos = 3; displaypos < 7; displaypos++){
   887   001040  0E00               	movlw	0
   888   001042  6E11               	movwf	(startUpcounter@displaypos+1)^0,c
   889   001044  0E03               	movlw	3
   890   001046  6E10               	movwf	startUpcounter@displaypos^0,c
   891   001048                     l1980:
   892                           
   893                           ;main.c: 457:              actualpos = displaypos * 2;
   894   001048  90D8               	bcf	status,0,c
   895   00104A  3410               	rlcf	startUpcounter@displaypos^0,w,c
   896   00104C  6E0E               	movwf	startUpcounter@actualpos^0,c
   897   00104E  3411               	rlcf	(startUpcounter@displaypos+1)^0,w,c
   898   001050  6E0F               	movwf	(startUpcounter@actualpos+1)^0,c
   899   001052                     
   900                           ;main.c: 459:             lcd_print(1, actualpos, inttochar(segmentCounter));
   901   001052  C00E  F009         	movff	startUpcounter@actualpos,lcd_print@col
   902   001056  C043  F001         	movff	_segmentCounter,inttochar@digit
   903   00105A  6A02               	clrf	(inttochar@digit+1)^0,c
   904   00105C  EC51  F00A         	call	_inttochar	;wreg free
   905   001060  6E0A               	movwf	lcd_print@Data^0,c
   906   001062  0E01               	movlw	1
   907   001064  EC17  F00A         	call	_lcd_print
   908   001068                     
   909                           ;main.c: 460:             lcd_print(1, actualpos+1, '.');
   910   001068  280E               	incf	startUpcounter@actualpos^0,w,c
   911   00106A  6E09               	movwf	lcd_print@col^0,c
   912   00106C  0E2E               	movlw	46
   913   00106E  6E0A               	movwf	lcd_print@Data^0,c
   914   001070  0E01               	movlw	1
   915   001072  EC17  F00A         	call	_lcd_print
   916   001076                     
   917                           ;main.c: 461:         }
   918   001076  4A10               	infsnz	startUpcounter@displaypos^0,f,c
   919   001078  2A11               	incf	(startUpcounter@displaypos+1)^0,f,c
   920   00107A  5011               	movf	(startUpcounter@displaypos+1)^0,w,c
   921   00107C  E109               	bnz	u1030
   922   00107E  0E07               	movlw	7
   923   001080  5C10               	subwf	startUpcounter@displaypos^0,w,c
   924   001082  A0D8               	btfss	status,0,c
   925   001084  EF46  F008         	goto	u1031
   926   001088  EF48  F008         	goto	u1030
   927   00108C                     u1031:
   928   00108C  EF24  F008         	goto	l1980
   929   001090                     u1030:
   930   001090                     
   931                           ;main.c: 462:         _delay((unsigned long)((500)*(64000000/4000.0)));
   932   001090  0E29               	movlw	41
   933   001092  6E0D               	movwf	(??_startUpcounter+1)^0,c
   934   001094  0E96               	movlw	150
   935   001096  6E0C               	movwf	??_startUpcounter^0,c
   936   001098  0E7F               	movlw	127
   937   00109A                     u1337:
   938   00109A  2EE8               	decfsz	wreg,f,c
   939   00109C  D7FE               	bra	u1337
   940   00109E  2E0C               	decfsz	??_startUpcounter^0,f,c
   941   0010A0  D7FC               	bra	u1337
   942   0010A2  2E0D               	decfsz	(??_startUpcounter+1)^0,f,c
   943   0010A4  D7FA               	bra	u1337
   944   0010A6  F000               	nop	
   945   0010A8                     
   946                           ;main.c: 464:         LATAbits.LATA7 = 0;
   947   0010A8  9E89               	bcf	137,7,c	;volatile
   948                           
   949                           ;main.c: 465:         _delay((unsigned long)((500)*(64000000/4000.0)));
   950   0010AA  0E29               	movlw	41
   951   0010AC  6E0D               	movwf	(??_startUpcounter+1)^0,c
   952   0010AE  0E96               	movlw	150
   953   0010B0  6E0C               	movwf	??_startUpcounter^0,c
   954   0010B2  0E7F               	movlw	127
   955   0010B4                     u1347:
   956   0010B4  2EE8               	decfsz	wreg,f,c
   957   0010B6  D7FE               	bra	u1347
   958   0010B8  2E0C               	decfsz	??_startUpcounter^0,f,c
   959   0010BA  D7FC               	bra	u1347
   960   0010BC  2E0D               	decfsz	(??_startUpcounter+1)^0,f,c
   961   0010BE  D7FA               	bra	u1347
   962   0010C0  F000               	nop	
   963   0010C2                     
   964                           ;main.c: 466:     }
   965   0010C2  2A43               	incf	_segmentCounter^0,f,c
   966   0010C4  0E09               	movlw	9
   967   0010C6  6443               	cpfsgt	_segmentCounter^0,c
   968   0010C8  EF68  F008         	goto	u1041
   969   0010CC  EF6A  F008         	goto	u1040
   970   0010D0                     u1041:
   971   0010D0  EF1F  F008         	goto	l182
   972   0010D4                     u1040:
   973   0010D4                     l1996:
   974                           
   975                           ;main.c: 468:     LCD_CLR();
   976   0010D4  EC35  F00A         	call	_LCD_CLR	;wreg free
   977   0010D8                     
   978                           ;main.c: 470:     stopMessage();
   979   0010D8  ECA9  F009         	call	_stopMessage	;wreg free
   980   0010DC  0012               	return		;funcret
   981   0010DE                     __end_of_startUpcounter:
   982                           	callstack 0
   983                           
   984 ;; *************** function _lcd_print *****************
   985 ;; Defined at:
   986 ;;		line 660 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  row             1    wreg     unsigned char 
   989 ;;  col             1    8[COMRAM] unsigned char 
   990 ;;  Data            1    9[COMRAM] unsigned char 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  row             1   10[COMRAM] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1002 ;;      Params:         2       0       0       0       0       0       0
  1003 ;;      Locals:         1       0       0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0
  1005 ;;      Totals:         3       0       0       0       0       0       0
  1006 ;;Total ram usage:        3 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; Hardware stack levels required when called: 5
  1009 ;; This function calls:
  1010 ;;		_LCD_Set_Cursor
  1011 ;;		_LCD_Write_Char
  1012 ;; This function is called by:
  1013 ;;		_startUpcounter
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text2
  1018   00142E                     __ptext2:
  1019                           	callstack 0
  1020   00142E                     _lcd_print:
  1021                           	callstack 24
  1022                           
  1023                           ;incstack = 0
  1024                           ;lcd_print@row stored from wreg
  1025   00142E  6E0B               	movwf	lcd_print@row^0,c
  1026   001430                     
  1027                           ;main.c: 665:     LCD_Set_Cursor(row,col);
  1028   001430  C009  F005         	movff	lcd_print@col,LCD_Set_Cursor@COL
  1029   001434  500B               	movf	lcd_print@row^0,w,c
  1030   001436  ECC7  F008         	call	_LCD_Set_Cursor
  1031                           
  1032                           ;main.c: 666:     LCD_Write_Char(Data);
  1033   00143A  500A               	movf	lcd_print@Data^0,w,c
  1034   00143C  ECCB  F009         	call	_LCD_Write_Char
  1035   001440  0012               	return		;funcret
  1036   001442                     __end_of_lcd_print:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function _inttochar *****************
  1040 ;; Defined at:
  1041 ;;		line 649 in file "main.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  digit           2    0[COMRAM] unsigned int 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;		None
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      unsigned char 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         2       0       0       0       0       0       0
  1056 ;;      Locals:         0       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0
  1058 ;;      Totals:         2       0       0       0       0       0       0
  1059 ;;Total ram usage:        2 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_startUpcounter
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text3
  1069   0014A2                     __ptext3:
  1070                           	callstack 0
  1071   0014A2                     _inttochar:
  1072                           	callstack 29
  1073   0014A2                     
  1074                           ;main.c: 653:     return digit + '0';
  1075   0014A2  5001               	movf	inttochar@digit^0,w,c
  1076   0014A4  0F30               	addlw	48
  1077   0014A6  0012               	return		;funcret
  1078   0014A8                     __end_of_inttochar:
  1079                           	callstack 0
  1080                           
  1081 ;; *************** function _LCD_CLR *****************
  1082 ;; Defined at:
  1083 ;;		line 186 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1097 ;;      Params:         0       0       0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 4
  1104 ;; This function calls:
  1105 ;;		_LCD_CMD
  1106 ;; This function is called by:
  1107 ;;		_startUpcounter
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text4
  1112   00146A                     __ptext4:
  1113                           	callstack 0
  1114   00146A                     _LCD_CLR:
  1115                           	callstack 25
  1116   00146A                     
  1117                           ;main.c: 188:   LCD_CMD(0x01);
  1118   00146A  0E01               	movlw	1
  1119   00146C  ECD8  F009         	call	_LCD_CMD
  1120   001470                     
  1121                           ;main.c: 189:   _delay((unsigned long)((40)*(64000000/4000000.0)));
  1122   001470  0ED5               	movlw	213
  1123   001472                     u1357:
  1124   001472  2EE8               	decfsz	wreg,f,c
  1125   001474  D7FE               	bra	u1357
  1126   001476  F000               	nop	
  1127   001478  0012               	return		;funcret
  1128   00147A                     __end_of_LCD_CLR:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _startTimer *****************
  1132 ;; Defined at:
  1133 ;;		line 258 in file "main.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  RESET           2   19[COMRAM] int 
  1138 ;;  timeUp          2   17[COMRAM] int 
  1139 ;;  minute_secon    2   15[COMRAM] int 
  1140 ;;  minute_first    2   13[COMRAM] int 
  1141 ;;  hour_first_f    2   11[COMRAM] int 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         0       0       0       0       0       0       0
  1152 ;;      Locals:        10       0       0       0       0       0       0
  1153 ;;      Temps:          1       0       0       0       0       0       0
  1154 ;;      Totals:        11       0       0       0       0       0       0
  1155 ;;Total ram usage:       11 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 6
  1158 ;; This function calls:
  1159 ;;		_EEPROM_Read
  1160 ;;		___awmod
  1161 ;;		_green_led
  1162 ;;		_seven_segment_config
  1163 ;;		_stopMessage
  1164 ;;		_stopTimer
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text5
  1171   0009BE                     __ptext5:
  1172                           	callstack 0
  1173   0009BE                     _startTimer:
  1174                           	callstack 24
  1175   0009BE                     
  1176                           ;main.c: 261:     int RESET = 0;
  1177   0009BE  0E00               	movlw	0
  1178   0009C0  6E15               	movwf	(startTimer@RESET+1)^0,c
  1179   0009C2  0E00               	movlw	0
  1180   0009C4  6E14               	movwf	startTimer@RESET^0,c
  1181                           
  1182                           ;main.c: 262:     int timeUp = 0;
  1183   0009C6  0E00               	movlw	0
  1184   0009C8  6E13               	movwf	(startTimer@timeUp+1)^0,c
  1185   0009CA  0E00               	movlw	0
  1186   0009CC  6E12               	movwf	startTimer@timeUp^0,c
  1187                           
  1188                           ;main.c: 263:     int hour_first_flag = 0;
  1189   0009CE  0E00               	movlw	0
  1190   0009D0  6E0D               	movwf	(startTimer@hour_first_flag+1)^0,c
  1191   0009D2  0E00               	movlw	0
  1192   0009D4  6E0C               	movwf	startTimer@hour_first_flag^0,c
  1193                           
  1194                           ;main.c: 264:     int minute_first_flag = 0;
  1195   0009D6  0E00               	movlw	0
  1196   0009D8  6E0F               	movwf	(startTimer@minute_first_flag+1)^0,c
  1197   0009DA  0E00               	movlw	0
  1198   0009DC  6E0E               	movwf	startTimer@minute_first_flag^0,c
  1199                           
  1200                           ;main.c: 265:     int minute_second_flag = 0;
  1201   0009DE  0E00               	movlw	0
  1202   0009E0  6E11               	movwf	(startTimer@minute_second_flag+1)^0,c
  1203   0009E2  0E00               	movlw	0
  1204   0009E4  6E10               	movwf	startTimer@minute_second_flag^0,c
  1205   0009E6                     
  1206                           ;main.c: 268:     LATAbits.LATA0 = 0;
  1207   0009E6  9089               	bcf	137,0,c	;volatile
  1208   0009E8                     
  1209                           ;main.c: 269:     LATAbits.LATA1 = 0;
  1210   0009E8  9289               	bcf	137,1,c	;volatile
  1211   0009EA                     
  1212                           ;main.c: 270:     LATAbits.LATA2 = 0;
  1213   0009EA  9489               	bcf	137,2,c	;volatile
  1214   0009EC                     
  1215                           ;main.c: 271:     LATAbits.LATA3 = 0;
  1216   0009EC  9689               	bcf	137,3,c	;volatile
  1217   0009EE                     
  1218                           ;main.c: 274:     hour_first_digit = EEPROM_Read(0x0A);
  1219   0009EE  0E0A               	movlw	10
  1220   0009F0  EC3D  F00A         	call	_EEPROM_Read
  1221   0009F4  6E0B               	movwf	??_startTimer^0,c
  1222   0009F6  500B               	movf	??_startTimer^0,w,c
  1223   0009F8  6E41               	movwf	_hour_first_digit^0,c
  1224   0009FA  6A42               	clrf	(_hour_first_digit+1)^0,c
  1225   0009FC                     
  1226                           ;main.c: 275:     hour_second_digit = EEPROM_Read(0x0B);
  1227   0009FC  0E0B               	movlw	11
  1228   0009FE  EC3D  F00A         	call	_EEPROM_Read
  1229   000A02  6E0B               	movwf	??_startTimer^0,c
  1230   000A04  500B               	movf	??_startTimer^0,w,c
  1231   000A06  6E3F               	movwf	_hour_second_digit^0,c
  1232   000A08  6A40               	clrf	(_hour_second_digit+1)^0,c
  1233   000A0A  EF7C  F006         	goto	l1958
  1234   000A0E                     l1838:
  1235                           
  1236                           ;main.c: 278:     {;main.c: 279:         seven_segment_config();
  1237   000A0E  EC54  F00A         	call	_seven_segment_config	;wreg free
  1238   000A12                     
  1239                           ;main.c: 281:         hour_first_flag = hour_first_flag + 1;
  1240   000A12  0E01               	movlw	1
  1241   000A14  240C               	addwf	startTimer@hour_first_flag^0,w,c
  1242   000A16  6E0C               	movwf	startTimer@hour_first_flag^0,c
  1243   000A18  0E00               	movlw	0
  1244   000A1A  200D               	addwfc	(startTimer@hour_first_flag+1)^0,w,c
  1245   000A1C  6E0D               	movwf	(startTimer@hour_first_flag+1)^0,c
  1246   000A1E                     
  1247                           ;main.c: 283:         if (hour_first_flag > 1)
  1248   000A1E  BE0D               	btfsc	(startTimer@hour_first_flag+1)^0,7,c
  1249   000A20  EF1B  F005         	goto	u811
  1250   000A24  500D               	movf	(startTimer@hour_first_flag+1)^0,w,c
  1251   000A26  E109               	bnz	u810
  1252   000A28  0E02               	movlw	2
  1253   000A2A  5C0C               	subwf	startTimer@hour_first_flag^0,w,c
  1254   000A2C  A0D8               	btfss	status,0,c
  1255   000A2E  EF1B  F005         	goto	u811
  1256   000A32  EF1D  F005         	goto	u810
  1257   000A36                     u811:
  1258   000A36  EF72  F006         	goto	l1954
  1259   000A3A                     u810:
  1260   000A3A                     
  1261                           ;main.c: 284:             hour_second_digit = 9;
  1262   000A3A  0E00               	movlw	0
  1263   000A3C  6E40               	movwf	(_hour_second_digit+1)^0,c
  1264   000A3E  0E09               	movlw	9
  1265   000A40  6E3F               	movwf	_hour_second_digit^0,c
  1266   000A42  EF72  F006         	goto	l1954
  1267   000A46                     l1846:
  1268                           
  1269                           ;main.c: 287:         {;main.c: 289:             minute_first_flag = minute_first_flag +
      +                           1;
  1270   000A46  0E01               	movlw	1
  1271   000A48  240E               	addwf	startTimer@minute_first_flag^0,w,c
  1272   000A4A  6E0E               	movwf	startTimer@minute_first_flag^0,c
  1273   000A4C  0E00               	movlw	0
  1274   000A4E  200F               	addwfc	(startTimer@minute_first_flag+1)^0,w,c
  1275   000A50  6E0F               	movwf	(startTimer@minute_first_flag+1)^0,c
  1276   000A52                     
  1277                           ;main.c: 291:             seven_segment_config();
  1278   000A52  EC54  F00A         	call	_seven_segment_config	;wreg free
  1279   000A56                     
  1280                           ;main.c: 293:             if (minute_first_flag > 1)
  1281   000A56  BE0F               	btfsc	(startTimer@minute_first_flag+1)^0,7,c
  1282   000A58  EF37  F005         	goto	u821
  1283   000A5C  500F               	movf	(startTimer@minute_first_flag+1)^0,w,c
  1284   000A5E  E109               	bnz	u820
  1285   000A60  0E02               	movlw	2
  1286   000A62  5C0E               	subwf	startTimer@minute_first_flag^0,w,c
  1287   000A64  A0D8               	btfss	status,0,c
  1288   000A66  EF37  F005         	goto	u821
  1289   000A6A  EF39  F005         	goto	u820
  1290   000A6E                     u821:
  1291   000A6E  EF3F  F005         	goto	l1854
  1292   000A72                     u820:
  1293   000A72                     
  1294                           ;main.c: 294:             {;main.c: 295:                 minute_first_digit = 5;
  1295   000A72  0E00               	movlw	0
  1296   000A74  6E3E               	movwf	(_minute_first_digit+1)^0,c
  1297   000A76  0E05               	movlw	5
  1298   000A78  6E3D               	movwf	_minute_first_digit^0,c
  1299                           
  1300                           ;main.c: 296:             }
  1301   000A7A  EF54  F006         	goto	l1946
  1302   000A7E                     l1854:
  1303                           
  1304                           ;main.c: 298:             {;main.c: 299:                 minute_first_digit = EEPROM_Rea
      +                          d(0x0C);
  1305   000A7E  0E0C               	movlw	12
  1306   000A80  EC3D  F00A         	call	_EEPROM_Read
  1307   000A84  6E0B               	movwf	??_startTimer^0,c
  1308   000A86  500B               	movf	??_startTimer^0,w,c
  1309   000A88  6E3D               	movwf	_minute_first_digit^0,c
  1310   000A8A  6A3E               	clrf	(_minute_first_digit+1)^0,c
  1311                           
  1312                           ;main.c: 300:                 minute_second_digit = EEPROM_Read(0x0D);
  1313   000A8C  0E0D               	movlw	13
  1314   000A8E  EC3D  F00A         	call	_EEPROM_Read
  1315   000A92  6E0B               	movwf	??_startTimer^0,c
  1316   000A94  500B               	movf	??_startTimer^0,w,c
  1317   000A96  6E3B               	movwf	_minute_second_digit^0,c
  1318   000A98  6A3C               	clrf	(_minute_second_digit+1)^0,c
  1319   000A9A  EF54  F006         	goto	l1946
  1320   000A9E                     l1856:
  1321                           
  1322                           ;main.c: 304:             {;main.c: 305:                 minute_second_flag = minute_sec
      +                          ond_flag + 1;
  1323   000A9E  0E01               	movlw	1
  1324   000AA0  2410               	addwf	startTimer@minute_second_flag^0,w,c
  1325   000AA2  6E10               	movwf	startTimer@minute_second_flag^0,c
  1326   000AA4  0E00               	movlw	0
  1327   000AA6  2011               	addwfc	(startTimer@minute_second_flag+1)^0,w,c
  1328   000AA8  6E11               	movwf	(startTimer@minute_second_flag+1)^0,c
  1329                           
  1330                           ;main.c: 307:                 if (minute_second_flag > 1)
  1331   000AAA  BE11               	btfsc	(startTimer@minute_second_flag+1)^0,7,c
  1332   000AAC  EF61  F005         	goto	u831
  1333   000AB0  5011               	movf	(startTimer@minute_second_flag+1)^0,w,c
  1334   000AB2  E109               	bnz	u830
  1335   000AB4  0E02               	movlw	2
  1336   000AB6  5C10               	subwf	startTimer@minute_second_flag^0,w,c
  1337   000AB8  A0D8               	btfss	status,0,c
  1338   000ABA  EF61  F005         	goto	u831
  1339   000ABE  EF63  F005         	goto	u830
  1340   000AC2                     u831:
  1341   000AC2  EF36  F006         	goto	l1938
  1342   000AC6                     u830:
  1343   000AC6                     
  1344                           ;main.c: 308:                     minute_second_digit = 9;
  1345   000AC6  0E00               	movlw	0
  1346   000AC8  6E3C               	movwf	(_minute_second_digit+1)^0,c
  1347   000ACA  0E09               	movlw	9
  1348   000ACC  6E3B               	movwf	_minute_second_digit^0,c
  1349   000ACE  EF36  F006         	goto	l1938
  1350   000AD2                     l1860:
  1351                           
  1352                           ;main.c: 312:                 {;main.c: 315:                     if ((hour_first_digit =
      +                          = 0) && (hour_second_digit == 0) && (minute_first_digit == 0) && (minute_second_digit ==
      +                           0))
  1353   000AD2  5041               	movf	_hour_first_digit^0,w,c
  1354   000AD4  1042               	iorwf	(_hour_first_digit+1)^0,w,c
  1355   000AD6  A4D8               	btfss	status,2,c
  1356   000AD8  EF70  F005         	goto	u841
  1357   000ADC  EF72  F005         	goto	u840
  1358   000AE0                     u841:
  1359   000AE0  EF93  F005         	goto	l1870
  1360   000AE4                     u840:
  1361   000AE4  503F               	movf	_hour_second_digit^0,w,c
  1362   000AE6  1040               	iorwf	(_hour_second_digit+1)^0,w,c
  1363   000AE8  A4D8               	btfss	status,2,c
  1364   000AEA  EF79  F005         	goto	u851
  1365   000AEE  EF7B  F005         	goto	u850
  1366   000AF2                     u851:
  1367   000AF2  EF93  F005         	goto	l1870
  1368   000AF6                     u850:
  1369   000AF6  503D               	movf	_minute_first_digit^0,w,c
  1370   000AF8  103E               	iorwf	(_minute_first_digit+1)^0,w,c
  1371   000AFA  A4D8               	btfss	status,2,c
  1372   000AFC  EF82  F005         	goto	u861
  1373   000B00  EF84  F005         	goto	u860
  1374   000B04                     u861:
  1375   000B04  EF93  F005         	goto	l1870
  1376   000B08                     u860:
  1377   000B08  503B               	movf	_minute_second_digit^0,w,c
  1378   000B0A  103C               	iorwf	(_minute_second_digit+1)^0,w,c
  1379   000B0C  A4D8               	btfss	status,2,c
  1380   000B0E  EF8B  F005         	goto	u871
  1381   000B12  EF8D  F005         	goto	u870
  1382   000B16                     u871:
  1383   000B16  EF93  F005         	goto	l1870
  1384   000B1A                     u870:
  1385   000B1A                     
  1386                           ;main.c: 316:                     {;main.c: 317:                         timeUp = 1;
  1387   000B1A  0E00               	movlw	0
  1388   000B1C  6E13               	movwf	(startTimer@timeUp+1)^0,c
  1389   000B1E  0E01               	movlw	1
  1390   000B20  6E12               	movwf	startTimer@timeUp^0,c
  1391                           
  1392                           ;main.c: 318:                         break;
  1393   000B22  EF3D  F006         	goto	l1940
  1394   000B26                     l1870:
  1395                           
  1396                           ;main.c: 321:                     for (DEL = 4990; DEL > 0; DEL--)
  1397   000B26  0E13               	movlw	19
  1398   000B28  6E3A               	movwf	(_DEL+1)^0,c
  1399   000B2A  0E7E               	movlw	126
  1400   000B2C  6E39               	movwf	_DEL^0,c
  1401   000B2E                     l1876:
  1402                           
  1403                           ;main.c: 322:                     {;main.c: 324:                         green_led();
  1404   000B2E  EC49  F00A         	call	_green_led	;wreg free
  1405   000B32                     
  1406                           ;main.c: 325:                         LATCbits.LATC3 = 1;
  1407   000B32  868B               	bsf	139,3,c	;volatile
  1408   000B34                     
  1409                           ;main.c: 328:                         LATAbits.LATA0 = 1;
  1410   000B34  8089               	bsf	137,0,c	;volatile
  1411   000B36                     
  1412                           ;main.c: 329:                         PORTB = segment[hour_first_digit];
  1413   000B36  0E2B               	movlw	low _segment
  1414   000B38  2441               	addwf	_hour_first_digit^0,w,c
  1415   000B3A  6ED9               	movwf	fsr2l,c
  1416   000B3C  0E00               	movlw	high _segment
  1417   000B3E  2042               	addwfc	(_hour_first_digit+1)^0,w,c
  1418   000B40  6EDA               	movwf	fsr2h,c
  1419   000B42  50DF               	movf	indf2,w,c
  1420   000B44  6E81               	movwf	129,c	;volatile
  1421   000B46                     
  1422                           ;main.c: 330:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1423   000B46  0E3F               	movlw	63
  1424   000B48  6E0B               	movwf	??_startTimer^0,c
  1425   000B4A  0E55               	movlw	85
  1426   000B4C                     u1367:
  1427   000B4C  2EE8               	decfsz	wreg,f,c
  1428   000B4E  D7FE               	bra	u1367
  1429   000B50  2E0B               	decfsz	??_startTimer^0,f,c
  1430   000B52  D7FC               	bra	u1367
  1431   000B54  F000               	nop	
  1432   000B56                     
  1433                           ;main.c: 331:                         LATAbits.LATA0 = 0;
  1434   000B56  9089               	bcf	137,0,c	;volatile
  1435   000B58                     
  1436                           ;main.c: 335:                         LATAbits.LATA1 = 1;
  1437   000B58  8289               	bsf	137,1,c	;volatile
  1438   000B5A                     
  1439                           ;main.c: 336:                         PORTB = segment[hour_second_digit];
  1440   000B5A  0E2B               	movlw	low _segment
  1441   000B5C  243F               	addwf	_hour_second_digit^0,w,c
  1442   000B5E  6ED9               	movwf	fsr2l,c
  1443   000B60  0E00               	movlw	high _segment
  1444   000B62  2040               	addwfc	(_hour_second_digit+1)^0,w,c
  1445   000B64  6EDA               	movwf	fsr2h,c
  1446   000B66  50DF               	movf	indf2,w,c
  1447   000B68  6E81               	movwf	129,c	;volatile
  1448   000B6A                     
  1449                           ;main.c: 337:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1450   000B6A  0E3F               	movlw	63
  1451   000B6C  6E0B               	movwf	??_startTimer^0,c
  1452   000B6E  0E55               	movlw	85
  1453   000B70                     u1377:
  1454   000B70  2EE8               	decfsz	wreg,f,c
  1455   000B72  D7FE               	bra	u1377
  1456   000B74  2E0B               	decfsz	??_startTimer^0,f,c
  1457   000B76  D7FC               	bra	u1377
  1458   000B78  F000               	nop	
  1459   000B7A                     
  1460                           ;main.c: 338:                         LATAbits.LATA1 = 0;
  1461   000B7A  9289               	bcf	137,1,c	;volatile
  1462   000B7C                     
  1463                           ;main.c: 342:                         LATAbits.LATA2 = 1;
  1464   000B7C  8489               	bsf	137,2,c	;volatile
  1465   000B7E                     
  1466                           ;main.c: 343:                         PORTB = segment[minute_first_digit];
  1467   000B7E  0E2B               	movlw	low _segment
  1468   000B80  243D               	addwf	_minute_first_digit^0,w,c
  1469   000B82  6ED9               	movwf	fsr2l,c
  1470   000B84  0E00               	movlw	high _segment
  1471   000B86  203E               	addwfc	(_minute_first_digit+1)^0,w,c
  1472   000B88  6EDA               	movwf	fsr2h,c
  1473   000B8A  50DF               	movf	indf2,w,c
  1474   000B8C  6E81               	movwf	129,c	;volatile
  1475   000B8E                     
  1476                           ;main.c: 344:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1477   000B8E  0E3F               	movlw	63
  1478   000B90  6E0B               	movwf	??_startTimer^0,c
  1479   000B92  0E55               	movlw	85
  1480   000B94                     u1387:
  1481   000B94  2EE8               	decfsz	wreg,f,c
  1482   000B96  D7FE               	bra	u1387
  1483   000B98  2E0B               	decfsz	??_startTimer^0,f,c
  1484   000B9A  D7FC               	bra	u1387
  1485   000B9C  F000               	nop	
  1486   000B9E                     
  1487                           ;main.c: 345:                         LATAbits.LATA2 = 0;
  1488   000B9E  9489               	bcf	137,2,c	;volatile
  1489   000BA0                     
  1490                           ;main.c: 348:                         LATAbits.LATA3 = 1;
  1491   000BA0  8689               	bsf	137,3,c	;volatile
  1492   000BA2                     
  1493                           ;main.c: 349:                         PORTB = segment[minute_second_digit];
  1494   000BA2  0E2B               	movlw	low _segment
  1495   000BA4  243B               	addwf	_minute_second_digit^0,w,c
  1496   000BA6  6ED9               	movwf	fsr2l,c
  1497   000BA8  0E00               	movlw	high _segment
  1498   000BAA  203C               	addwfc	(_minute_second_digit+1)^0,w,c
  1499   000BAC  6EDA               	movwf	fsr2h,c
  1500   000BAE  50DF               	movf	indf2,w,c
  1501   000BB0  6E81               	movwf	129,c	;volatile
  1502   000BB2                     
  1503                           ;main.c: 350:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1504   000BB2  0E3F               	movlw	63
  1505   000BB4  6E0B               	movwf	??_startTimer^0,c
  1506   000BB6  0E55               	movlw	85
  1507   000BB8                     u1397:
  1508   000BB8  2EE8               	decfsz	wreg,f,c
  1509   000BBA  D7FE               	bra	u1397
  1510   000BBC  2E0B               	decfsz	??_startTimer^0,f,c
  1511   000BBE  D7FC               	bra	u1397
  1512   000BC0  F000               	nop	
  1513   000BC2                     
  1514                           ;main.c: 351:                         LATAbits.LATA3 = 0;
  1515   000BC2  9689               	bcf	137,3,c	;volatile
  1516   000BC4                     
  1517                           ;main.c: 353:                         LATAbits.LATA7 = 0;
  1518   000BC4  9E89               	bcf	137,7,c	;volatile
  1519   000BC6                     
  1520                           ;main.c: 355:                         if (DEL % 79 == 0)
  1521   000BC6  C039  F001         	movff	_DEL,___awmod@dividend
  1522   000BCA  C03A  F002         	movff	_DEL+1,___awmod@dividend+1
  1523   000BCE  0E00               	movlw	0
  1524   000BD0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1525   000BD2  0E4F               	movlw	79
  1526   000BD4  6E03               	movwf	___awmod@divisor^0,c
  1527   000BD6  EC6F  F008         	call	___awmod	;wreg free
  1528   000BDA  5001               	movf	?___awmod^0,w,c
  1529   000BDC  1002               	iorwf	(?___awmod+1)^0,w,c
  1530   000BDE  A4D8               	btfss	status,2,c
  1531   000BE0  EFF4  F005         	goto	u881
  1532   000BE4  EFF6  F005         	goto	u880
  1533   000BE8                     u881:
  1534   000BE8  EF02  F006         	goto	l1924
  1535   000BEC                     u880:
  1536   000BEC                     
  1537                           ;main.c: 356:                         {;main.c: 357:                             LATAbit
      +                          s.LATA1 = 1;
  1538   000BEC  8289               	bsf	137,1,c	;volatile
  1539   000BEE                     
  1540                           ;main.c: 358:                             PORTB = 0x80;
  1541   000BEE  0E80               	movlw	128
  1542   000BF0  6E81               	movwf	129,c	;volatile
  1543   000BF2                     
  1544                           ;main.c: 359:                             _delay((unsigned long)((3)*(64000000/4000.0)))
      +                          ;
  1545   000BF2  0E3F               	movlw	63
  1546   000BF4  6E0B               	movwf	??_startTimer^0,c
  1547   000BF6  0E55               	movlw	85
  1548   000BF8                     u1407:
  1549   000BF8  2EE8               	decfsz	wreg,f,c
  1550   000BFA  D7FE               	bra	u1407
  1551   000BFC  2E0B               	decfsz	??_startTimer^0,f,c
  1552   000BFE  D7FC               	bra	u1407
  1553   000C00  F000               	nop	
  1554   000C02                     
  1555                           ;main.c: 360:                             LATAbits.LATA1 = 0;
  1556   000C02  9289               	bcf	137,1,c	;volatile
  1557   000C04                     l1924:
  1558                           
  1559                           ;main.c: 364:                         if (PORTCbits.RC2 == 0)
  1560   000C04  B482               	btfsc	130,2,c	;volatile
  1561   000C06  EF07  F006         	goto	u891
  1562   000C0A  EF09  F006         	goto	u890
  1563   000C0E                     u891:
  1564   000C0E  EF0F  F006         	goto	l1928
  1565   000C12                     u890:
  1566   000C12                     
  1567                           ;main.c: 365:                         {;main.c: 366:                             RESET =
      +                           1;
  1568   000C12  0E00               	movlw	0
  1569   000C14  6E15               	movwf	(startTimer@RESET+1)^0,c
  1570   000C16  0E01               	movlw	1
  1571   000C18  6E14               	movwf	startTimer@RESET^0,c
  1572                           
  1573                           ;main.c: 367:                             break;
  1574   000C1A  EF1F  F006         	goto	l1932
  1575   000C1E                     l1928:
  1576                           
  1577                           ;main.c: 369:                     }
  1578   000C1E  0639               	decf	_DEL^0,f,c
  1579   000C20  A0D8               	btfss	status,0,c
  1580   000C22  063A               	decf	(_DEL+1)^0,f,c
  1581   000C24  BE3A               	btfsc	(_DEL+1)^0,7,c
  1582   000C26  EF1F  F006         	goto	u900
  1583   000C2A  503A               	movf	(_DEL+1)^0,w,c
  1584   000C2C  E106               	bnz	u901
  1585   000C2E  0439               	decf	_DEL^0,w,c
  1586   000C30  B0D8               	btfsc	status,0,c
  1587   000C32  EF1D  F006         	goto	u901
  1588   000C36  EF1F  F006         	goto	u900
  1589   000C3A                     u901:
  1590   000C3A  EF97  F005         	goto	l1876
  1591   000C3E                     u900:
  1592   000C3E                     l1932:
  1593                           
  1594                           ;main.c: 371:                     if (RESET || timeUp)
  1595   000C3E  5014               	movf	startTimer@RESET^0,w,c
  1596   000C40  1015               	iorwf	(startTimer@RESET+1)^0,w,c
  1597   000C42  A4D8               	btfss	status,2,c
  1598   000C44  EF26  F006         	goto	u911
  1599   000C48  EF28  F006         	goto	u910
  1600   000C4C                     u911:
  1601   000C4C  EF3D  F006         	goto	l1940
  1602   000C50                     u910:
  1603   000C50  5012               	movf	startTimer@timeUp^0,w,c
  1604   000C52  1013               	iorwf	(startTimer@timeUp+1)^0,w,c
  1605   000C54  B4D8               	btfsc	status,2,c
  1606   000C56  EF2F  F006         	goto	u921
  1607   000C5A  EF31  F006         	goto	u920
  1608   000C5E                     u921:
  1609   000C5E  EF33  F006         	goto	l1936
  1610   000C62                     u920:
  1611   000C62  EF3D  F006         	goto	l1940
  1612   000C66                     l1936:
  1613                           
  1614                           ;main.c: 374:                 }
  1615   000C66  063B               	decf	_minute_second_digit^0,f,c
  1616   000C68  A0D8               	btfss	status,0,c
  1617   000C6A  063C               	decf	(_minute_second_digit+1)^0,f,c
  1618   000C6C                     l1938:
  1619   000C6C  BE3C               	btfsc	(_minute_second_digit+1)^0,7,c
  1620   000C6E  EF3D  F006         	goto	u930
  1621   000C72  EF3B  F006         	goto	u931
  1622   000C76                     u931:
  1623   000C76  EF69  F005         	goto	l1860
  1624   000C7A                     u930:
  1625   000C7A                     l1940:
  1626                           
  1627                           ;main.c: 376:                 if (RESET || timeUp)
  1628   000C7A  5014               	movf	startTimer@RESET^0,w,c
  1629   000C7C  1015               	iorwf	(startTimer@RESET+1)^0,w,c
  1630   000C7E  A4D8               	btfss	status,2,c
  1631   000C80  EF44  F006         	goto	u941
  1632   000C84  EF46  F006         	goto	u940
  1633   000C88                     u941:
  1634   000C88  EF5B  F006         	goto	l1948
  1635   000C8C                     u940:
  1636   000C8C  5012               	movf	startTimer@timeUp^0,w,c
  1637   000C8E  1013               	iorwf	(startTimer@timeUp+1)^0,w,c
  1638   000C90  B4D8               	btfsc	status,2,c
  1639   000C92  EF4D  F006         	goto	u951
  1640   000C96  EF4F  F006         	goto	u950
  1641   000C9A                     u951:
  1642   000C9A  EF51  F006         	goto	l1944
  1643   000C9E                     u950:
  1644   000C9E  EF5B  F006         	goto	l1948
  1645   000CA2                     l1944:
  1646                           
  1647                           ;main.c: 379:             }
  1648   000CA2  063D               	decf	_minute_first_digit^0,f,c
  1649   000CA4  A0D8               	btfss	status,0,c
  1650   000CA6  063E               	decf	(_minute_first_digit+1)^0,f,c
  1651   000CA8                     l1946:
  1652   000CA8  BE3E               	btfsc	(_minute_first_digit+1)^0,7,c
  1653   000CAA  EF5B  F006         	goto	u960
  1654   000CAE  EF59  F006         	goto	u961
  1655   000CB2                     u961:
  1656   000CB2  EF4F  F005         	goto	l1856
  1657   000CB6                     u960:
  1658   000CB6                     l1948:
  1659                           
  1660                           ;main.c: 381:             if (RESET || timeUp)
  1661   000CB6  5014               	movf	startTimer@RESET^0,w,c
  1662   000CB8  1015               	iorwf	(startTimer@RESET+1)^0,w,c
  1663   000CBA  A4D8               	btfss	status,2,c
  1664   000CBC  EF62  F006         	goto	u971
  1665   000CC0  EF64  F006         	goto	u970
  1666   000CC4                     u971:
  1667   000CC4  EF79  F006         	goto	l1956
  1668   000CC8                     u970:
  1669   000CC8  5012               	movf	startTimer@timeUp^0,w,c
  1670   000CCA  1013               	iorwf	(startTimer@timeUp+1)^0,w,c
  1671   000CCC  B4D8               	btfsc	status,2,c
  1672   000CCE  EF6B  F006         	goto	u981
  1673   000CD2  EF6D  F006         	goto	u980
  1674   000CD6                     u981:
  1675   000CD6  EF6F  F006         	goto	l1952
  1676   000CDA                     u980:
  1677   000CDA  EF79  F006         	goto	l1956
  1678   000CDE                     l1952:
  1679                           
  1680                           ;main.c: 384:         }
  1681   000CDE  063F               	decf	_hour_second_digit^0,f,c
  1682   000CE0  A0D8               	btfss	status,0,c
  1683   000CE2  0640               	decf	(_hour_second_digit+1)^0,f,c
  1684   000CE4                     l1954:
  1685   000CE4  BE40               	btfsc	(_hour_second_digit+1)^0,7,c
  1686   000CE6  EF79  F006         	goto	u990
  1687   000CEA  EF77  F006         	goto	u991
  1688   000CEE                     u991:
  1689   000CEE  EF23  F005         	goto	l1846
  1690   000CF2                     u990:
  1691   000CF2                     l1956:
  1692                           
  1693                           ;main.c: 385:     }
  1694   000CF2  0641               	decf	_hour_first_digit^0,f,c
  1695   000CF4  A0D8               	btfss	status,0,c
  1696   000CF6  0642               	decf	(_hour_first_digit+1)^0,f,c
  1697   000CF8                     l1958:
  1698   000CF8  BE42               	btfsc	(_hour_first_digit+1)^0,7,c
  1699   000CFA  EF83  F006         	goto	u1000
  1700   000CFE  EF81  F006         	goto	u1001
  1701   000D02                     u1001:
  1702   000D02  EF07  F005         	goto	l1838
  1703   000D06                     u1000:
  1704   000D06                     
  1705                           ;main.c: 387:     LATAbits.LATA7 = 1;
  1706   000D06  8E89               	bsf	137,7,c	;volatile
  1707   000D08                     
  1708                           ;main.c: 389:     if (RESET)
  1709   000D08  5014               	movf	startTimer@RESET^0,w,c
  1710   000D0A  1015               	iorwf	(startTimer@RESET+1)^0,w,c
  1711   000D0C  B4D8               	btfsc	status,2,c
  1712   000D0E  EF8B  F006         	goto	u1011
  1713   000D12  EF8D  F006         	goto	u1010
  1714   000D16                     u1011:
  1715   000D16  EF91  F006         	goto	l171
  1716   000D1A                     u1010:
  1717   000D1A                     
  1718                           ;main.c: 390:     {;main.c: 391:         stopTimer();
  1719   000D1A  EC59  F009         	call	_stopTimer	;wreg free
  1720                           
  1721                           ;main.c: 392:     }
  1722   000D1E  EF94  F006         	goto	l173
  1723   000D22                     l171:
  1724                           
  1725                           ;main.c: 394:     {;main.c: 395:         LATCbits.LATC3 = 0;
  1726   000D22  968B               	bcf	139,3,c	;volatile
  1727   000D24                     
  1728                           ;main.c: 396:         stopMessage();
  1729   000D24  ECA9  F009         	call	_stopMessage	;wreg free
  1730   000D28                     l173:
  1731   000D28  0012               	return		;funcret
  1732   000D2A                     __end_of_startTimer:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _stopTimer *****************
  1736 ;; Defined at:
  1737 ;;		line 405 in file "main.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1751 ;;      Params:         0       0       0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0
  1753 ;;      Temps:          2       0       0       0       0       0       0
  1754 ;;      Totals:         2       0       0       0       0       0       0
  1755 ;;Total ram usage:        2 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 1
  1758 ;; This function calls:
  1759 ;;		_red_led
  1760 ;;		_seven_segment_config
  1761 ;; This function is called by:
  1762 ;;		_startTimer
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text6
  1768   0012B2                     __ptext6:
  1769                           	callstack 0
  1770   0012B2                     _stopTimer:
  1771                           	callstack 29
  1772   0012B2                     
  1773                           ;main.c: 408:     red_led();
  1774   0012B2  EC45  F00A         	call	_red_led	;wreg free
  1775   0012B6                     
  1776                           ;main.c: 410:     LATCbits.LATC3 = 0;
  1777   0012B6  968B               	bcf	139,3,c	;volatile
  1778                           
  1779                           ;main.c: 413:     seven_segment_config();
  1780   0012B8  EC54  F00A         	call	_seven_segment_config	;wreg free
  1781   0012BC                     
  1782                           ;main.c: 415:     segmentCounter = 0;
  1783   0012BC  0E00               	movlw	0
  1784   0012BE  6E43               	movwf	_segmentCounter^0,c
  1785   0012C0                     
  1786                           ;main.c: 416:     PORTB = segment[segmentCounter];
  1787   0012C0  0E2B               	movlw	low _segment
  1788   0012C2  2443               	addwf	_segmentCounter^0,w,c
  1789   0012C4  6ED9               	movwf	fsr2l,c
  1790   0012C6  6ADA               	clrf	fsr2h,c
  1791   0012C8  0E00               	movlw	high _segment
  1792   0012CA  22DA               	addwfc	fsr2h,f,c
  1793   0012CC  50DF               	movf	indf2,w,c
  1794   0012CE  6E81               	movwf	129,c	;volatile
  1795   0012D0                     
  1796                           ;main.c: 417:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1797   0012D0  0E09               	movlw	9
  1798   0012D2  6E02               	movwf	(??_stopTimer+1)^0,c
  1799   0012D4  0E1E               	movlw	30
  1800   0012D6  6E01               	movwf	??_stopTimer^0,c
  1801   0012D8  0EE4               	movlw	228
  1802   0012DA                     u1417:
  1803   0012DA  2EE8               	decfsz	wreg,f,c
  1804   0012DC  D7FE               	bra	u1417
  1805   0012DE  2E01               	decfsz	??_stopTimer^0,f,c
  1806   0012E0  D7FC               	bra	u1417
  1807   0012E2  2E02               	decfsz	(??_stopTimer+1)^0,f,c
  1808   0012E4  D7FA               	bra	u1417
  1809   0012E6  D000               	nop2	
  1810   0012E8                     
  1811                           ;main.c: 419:     LATAbits.LATA7 = 0;
  1812   0012E8  9E89               	bcf	137,7,c	;volatile
  1813   0012EA  0012               	return		;funcret
  1814   0012EC                     __end_of_stopTimer:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _seven_segment_config *****************
  1818 ;; Defined at:
  1819 ;;		line 230 in file "main.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		None
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1833 ;;      Params:         0       0       0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_startTimer
  1843 ;;		_stopTimer
  1844 ;;		_startUpcounter
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text7
  1849   0014A8                     __ptext7:
  1850                           	callstack 0
  1851   0014A8                     _seven_segment_config:
  1852                           	callstack 29
  1853   0014A8  0012               	return		;funcret
  1854   0014AA                     __end_of_seven_segment_config:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _stopMessage *****************
  1858 ;; Defined at:
  1859 ;;		line 426 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  DEL             2    0        unsigned int 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1873 ;;      Params:         0       0       0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 5
  1880 ;; This function calls:
  1881 ;;		_LCD_Init
  1882 ;;		_LCD_Set_Cursor
  1883 ;;		_LCD_Write_String
  1884 ;;		_red_led
  1885 ;; This function is called by:
  1886 ;;		_startTimer
  1887 ;;		_startUpcounter
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text8
  1892   001352                     __ptext8:
  1893                           	callstack 0
  1894   001352                     _stopMessage:
  1895                           	callstack 24
  1896   001352                     
  1897                           ;main.c: 428:     unsigned int DEL;;main.c: 430:     red_led();
  1898   001352  EC45  F00A         	call	_red_led	;wreg free
  1899   001356                     
  1900                           ;main.c: 432:     LCD_Init((0x38<<1));
  1901   001356  0E70               	movlw	112
  1902   001358  EC96  F007         	call	_LCD_Init
  1903   00135C                     
  1904                           ;main.c: 434:     LCD_Set_Cursor(1, 7);
  1905   00135C  0E07               	movlw	7
  1906   00135E  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  1907   001360  0E01               	movlw	1
  1908   001362  ECC7  F008         	call	_LCD_Set_Cursor
  1909   001366                     
  1910                           ;main.c: 435:     LCD_Write_String("OVER");
  1911   001366  0E01               	movlw	low STR_1
  1912   001368  6E05               	movwf	LCD_Write_String@Str^0,c
  1913   00136A  0E06               	movlw	high STR_1
  1914   00136C  6E06               	movwf	(LCD_Write_String@Str+1)^0,c
  1915   00136E  EC2E  F009         	call	_LCD_Write_String	;wreg free
  1916   001372                     
  1917                           ;main.c: 437:     LATAbits.LATA7 = 0;
  1918   001372  9E89               	bcf	137,7,c	;volatile
  1919   001374  0012               	return		;funcret
  1920   001376                     __end_of_stopMessage:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _red_led *****************
  1924 ;; Defined at:
  1925 ;;		line 197 in file "main.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		None
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1939 ;;      Params:         0       0       0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; This function calls:
  1946 ;;		Nothing
  1947 ;; This function is called by:
  1948 ;;		_stopTimer
  1949 ;;		_stopMessage
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text9
  1955   00148A                     __ptext9:
  1956                           	callstack 0
  1957   00148A                     _red_led:
  1958                           	callstack 29
  1959   00148A                     
  1960                           ;main.c: 199:     LATAbits.LATA5 = 0;
  1961   00148A  9A89               	bcf	137,5,c	;volatile
  1962                           
  1963                           ;main.c: 201:     LATAbits.LATA4 = 1;
  1964   00148C  8889               	bsf	137,4,c	;volatile
  1965                           
  1966                           ;main.c: 202:     LATAbits.LATA6 = 1;
  1967   00148E  8C89               	bsf	137,6,c	;volatile
  1968   001490  0012               	return		;funcret
  1969   001492                     __end_of_red_led:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _LCD_Write_String *****************
  1973 ;; Defined at:
  1974 ;;		line 137 in file "main.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  Str             2    4[COMRAM] PTR unsigned char 
  1977 ;;		 -> STR_1(5), 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  i               2    8[COMRAM] int 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         2       0       0       0       0       0       0
  1990 ;;      Locals:         2       0       0       0       0       0       0
  1991 ;;      Temps:          2       0       0       0       0       0       0
  1992 ;;      Totals:         6       0       0       0       0       0       0
  1993 ;;Total ram usage:        6 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 4
  1996 ;; This function calls:
  1997 ;;		_LCD_Write_Char
  1998 ;; This function is called by:
  1999 ;;		_stopMessage
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text10
  2004   00125C                     __ptext10:
  2005                           	callstack 0
  2006   00125C                     _LCD_Write_String:
  2007                           	callstack 24
  2008   00125C                     
  2009                           ;main.c: 137: void LCD_Write_String(char* Str);main.c: 138: {;main.c: 139:   for(int i=0
      +                          ; Str[i]!='\0'; i++)
  2010   00125C  0E00               	movlw	0
  2011   00125E  6E0A               	movwf	(LCD_Write_String@i+1)^0,c
  2012   001260  0E00               	movlw	0
  2013   001262  6E09               	movwf	LCD_Write_String@i^0,c
  2014   001264  EF44  F009         	goto	l1718
  2015   001268                     l1714:
  2016                           
  2017                           ;main.c: 140:     LCD_Write_Char(Str[i]);
  2018   001268  5009               	movf	LCD_Write_String@i^0,w,c
  2019   00126A  2405               	addwf	LCD_Write_String@Str^0,w,c
  2020   00126C  6E07               	movwf	??_LCD_Write_String^0,c
  2021   00126E  500A               	movf	(LCD_Write_String@i+1)^0,w,c
  2022   001270  2006               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  2023   001272  6E08               	movwf	(??_LCD_Write_String+1)^0,c
  2024   001274  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
  2025   001278  C008  FFF7         	movff	??_LCD_Write_String+1,tblptrh
  2026   00127C                     	if	0	;tblptru may be non-zero
  2027   00127C                     	endif
  2028   00127C                     	if	0	;tblptru may be non-zero
  2029   00127C                     	endif
  2030   00127C  0008               	tblrd		*
  2031   00127E  50F5               	movf	tablat,w,c
  2032   001280  ECCB  F009         	call	_LCD_Write_Char
  2033   001284  4A09               	infsnz	LCD_Write_String@i^0,f,c
  2034   001286  2A0A               	incf	(LCD_Write_String@i+1)^0,f,c
  2035   001288                     l1718:
  2036   001288  5009               	movf	LCD_Write_String@i^0,w,c
  2037   00128A  2405               	addwf	LCD_Write_String@Str^0,w,c
  2038   00128C  6E07               	movwf	??_LCD_Write_String^0,c
  2039   00128E  500A               	movf	(LCD_Write_String@i+1)^0,w,c
  2040   001290  2006               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  2041   001292  6E08               	movwf	(??_LCD_Write_String+1)^0,c
  2042   001294  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
  2043   001298  C008  FFF7         	movff	??_LCD_Write_String+1,tblptrh
  2044   00129C                     	if	0	;tblptru may be non-zero
  2045   00129C                     	endif
  2046   00129C                     	if	0	;tblptru may be non-zero
  2047   00129C                     	endif
  2048   00129C  0008               	tblrd		*
  2049   00129E  50F5               	movf	tablat,w,c
  2050   0012A0  0900               	iorlw	0
  2051   0012A2  A4D8               	btfss	status,2,c
  2052   0012A4  EF56  F009         	goto	u701
  2053   0012A8  EF58  F009         	goto	u700
  2054   0012AC                     u701:
  2055   0012AC  EF34  F009         	goto	l1714
  2056   0012B0                     u700:
  2057   0012B0  0012               	return		;funcret
  2058   0012B2                     __end_of_LCD_Write_String:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _LCD_Write_Char *****************
  2062 ;; Defined at:
  2063 ;;		line 130 in file "main.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  Data            1    wreg     unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  Data            1    3[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2077 ;;      Params:         0       0       0       0       0       0       0
  2078 ;;      Locals:         1       0       0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0
  2080 ;;      Totals:         1       0       0       0       0       0       0
  2081 ;;Total ram usage:        1 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 3
  2084 ;; This function calls:
  2085 ;;		_LCD_Write_4Bit
  2086 ;; This function is called by:
  2087 ;;		_LCD_Write_String
  2088 ;;		_lcd_print
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text11
  2093   001396                     __ptext11:
  2094                           	callstack 0
  2095   001396                     _LCD_Write_Char:
  2096                           	callstack 24
  2097                           
  2098                           ;incstack = 0
  2099                           ;LCD_Write_Char@Data stored from wreg
  2100   001396  6E04               	movwf	LCD_Write_Char@Data^0,c
  2101   001398                     
  2102                           ;main.c: 130: void LCD_Write_Char(char Data);main.c: 131: {;main.c: 132:   RS = 1;
  2103   001398  0E01               	movlw	1
  2104   00139A  6E44               	movwf	_RS^0,c
  2105   00139C                     
  2106                           ;main.c: 133:   LCD_Write_4Bit(Data & 0xF0);
  2107   00139C  5004               	movf	LCD_Write_Char@Data^0,w,c
  2108   00139E  0BF0               	andlw	240
  2109   0013A0  ECBB  F009         	call	_LCD_Write_4Bit
  2110   0013A4                     
  2111                           ;main.c: 134:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2112   0013A4  3804               	swapf	LCD_Write_Char@Data^0,w,c
  2113   0013A6  0BF0               	andlw	240
  2114   0013A8  0BF0               	andlw	240
  2115   0013AA  ECBB  F009         	call	_LCD_Write_4Bit
  2116   0013AE  0012               	return		;funcret
  2117   0013B0                     __end_of_LCD_Write_Char:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _LCD_Set_Cursor *****************
  2121 ;; Defined at:
  2122 ;;		line 143 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  ROW             1    wreg     unsigned char 
  2125 ;;  COL             1    4[COMRAM] unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  ROW             1    7[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2137 ;;      Params:         1       0       0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0       0       0
  2140 ;;      Totals:         4       0       0       0       0       0       0
  2141 ;;Total ram usage:        4 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 4
  2144 ;; This function calls:
  2145 ;;		_LCD_CMD
  2146 ;; This function is called by:
  2147 ;;		_stopMessage
  2148 ;;		_lcd_print
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text12
  2153   00118E                     __ptext12:
  2154                           	callstack 0
  2155   00118E                     _LCD_Set_Cursor:
  2156                           	callstack 24
  2157                           
  2158                           ;incstack = 0
  2159                           ;LCD_Set_Cursor@ROW stored from wreg
  2160   00118E  6E08               	movwf	LCD_Set_Cursor@ROW^0,c
  2161   001190                     
  2162                           ;main.c: 143: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);main.c: 144: {;m
      +                          ain.c: 145:   switch(ROW)
  2163   001190  EFE2  F008         	goto	l1730
  2164   001194                     l1722:
  2165                           
  2166                           ;main.c: 148:       LCD_CMD(0xC0 + COL-1);
  2167   001194  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  2168   001196  0FBF               	addlw	191
  2169   001198  ECD8  F009         	call	_LCD_CMD
  2170                           
  2171                           ;main.c: 149:       break;
  2172   00119C  EFFB  F008         	goto	l108
  2173   0011A0                     l1724:
  2174                           
  2175                           ;main.c: 151:       LCD_CMD(0x94 + COL-1);
  2176   0011A0  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  2177   0011A2  0F93               	addlw	147
  2178   0011A4  ECD8  F009         	call	_LCD_CMD
  2179                           
  2180                           ;main.c: 152:       break;
  2181   0011A8  EFFB  F008         	goto	l108
  2182   0011AC                     l1726:
  2183                           
  2184                           ;main.c: 154:       LCD_CMD(0xD4 + COL-1);
  2185   0011AC  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  2186   0011AE  0FD3               	addlw	211
  2187   0011B0  ECD8  F009         	call	_LCD_CMD
  2188                           
  2189                           ;main.c: 155:       break;
  2190   0011B4  EFFB  F008         	goto	l108
  2191   0011B8                     l1728:
  2192                           
  2193                           ;main.c: 158:       LCD_CMD(0x80 + COL-1);
  2194   0011B8  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  2195   0011BA  0F7F               	addlw	127
  2196   0011BC  ECD8  F009         	call	_LCD_CMD
  2197                           
  2198                           ;main.c: 159:   }
  2199   0011C0  EFFB  F008         	goto	l108
  2200   0011C4                     l1730:
  2201   0011C4  5008               	movf	LCD_Set_Cursor@ROW^0,w,c
  2202   0011C6  6E06               	movwf	??_LCD_Set_Cursor^0,c
  2203   0011C8  6A07               	clrf	(??_LCD_Set_Cursor+1)^0,c
  2204                           
  2205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 1, Range of values is 0 to 0
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte            4     3 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212   0011CA  5007               	movf	(??_LCD_Set_Cursor+1)^0,w,c
  2213   0011CC  0A00               	xorlw	0	; case 0
  2214   0011CE  B4D8               	btfsc	status,2,c
  2215   0011D0  EFEC  F008         	goto	l2306
  2216   0011D4  EFDC  F008         	goto	l1728
  2217   0011D8                     l2306:
  2218                           
  2219                           ; Switch size 1, requested type "simple"
  2220                           ; Number of cases is 3, Range of values is 2 to 4
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte           10     6 (average)
  2224                           ;	Chosen strategy is simple_byte
  2225   0011D8  5006               	movf	??_LCD_Set_Cursor^0,w,c
  2226   0011DA  0A02               	xorlw	2	; case 2
  2227   0011DC  B4D8               	btfsc	status,2,c
  2228   0011DE  EFCA  F008         	goto	l1722
  2229   0011E2  0A01               	xorlw	1	; case 3
  2230   0011E4  B4D8               	btfsc	status,2,c
  2231   0011E6  EFD0  F008         	goto	l1724
  2232   0011EA  0A07               	xorlw	7	; case 4
  2233   0011EC  B4D8               	btfsc	status,2,c
  2234   0011EE  EFD6  F008         	goto	l1726
  2235   0011F2  EFDC  F008         	goto	l1728
  2236   0011F6                     l108:
  2237   0011F6  0012               	return		;funcret
  2238   0011F8                     __end_of_LCD_Set_Cursor:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _LCD_Init *****************
  2242 ;; Defined at:
  2243 ;;		line 83 in file "main.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  I2C_Add         1    wreg     unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  I2C_Add         1    6[COMRAM] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2257 ;;      Params:         0       0       0       0       0       0       0
  2258 ;;      Locals:         1       0       0       0       0       0       0
  2259 ;;      Temps:          2       0       0       0       0       0       0
  2260 ;;      Totals:         3       0       0       0       0       0       0
  2261 ;;Total ram usage:        3 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 4
  2264 ;; This function calls:
  2265 ;;		_IO_Expander_Write
  2266 ;;		_LCD_CMD
  2267 ;; This function is called by:
  2268 ;;		_stopMessage
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text13
  2274   000F2C                     __ptext13:
  2275                           	callstack 0
  2276   000F2C                     _LCD_Init:
  2277                           	callstack 24
  2278                           
  2279                           ;incstack = 0
  2280                           ;LCD_Init@I2C_Add stored from wreg
  2281   000F2C  6E07               	movwf	LCD_Init@I2C_Add^0,c
  2282   000F2E                     
  2283                           ;main.c: 83: void LCD_Init(unsigned char I2C_Add);main.c: 84: {;main.c: 85:   i2c_add = 
      +                          I2C_Add;
  2284   000F2E  C007  F045         	movff	LCD_Init@I2C_Add,_i2c_add
  2285   000F32                     
  2286                           ;main.c: 86:   IO_Expander_Write(0x00);
  2287   000F32  0E00               	movlw	0
  2288   000F34  ECE5  F009         	call	_IO_Expander_Write
  2289   000F38                     
  2290                           ;main.c: 87:   _delay((unsigned long)((30)*(64000000/4000.0)));
  2291   000F38  0E03               	movlw	3
  2292   000F3A  6E06               	movwf	(??_LCD_Init+1)^0,c
  2293   000F3C  0E70               	movlw	112
  2294   000F3E  6E05               	movwf	??_LCD_Init^0,c
  2295   000F40  0E5C               	movlw	92
  2296   000F42                     u1427:
  2297   000F42  2EE8               	decfsz	wreg,f,c
  2298   000F44  D7FE               	bra	u1427
  2299   000F46  2E05               	decfsz	??_LCD_Init^0,f,c
  2300   000F48  D7FC               	bra	u1427
  2301   000F4A  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2302   000F4C  D7FA               	bra	u1427
  2303   000F4E  D000               	nop2	
  2304                           
  2305                           ;main.c: 88:   LCD_CMD(0x03);
  2306   000F50  0E03               	movlw	3
  2307   000F52  ECD8  F009         	call	_LCD_CMD
  2308   000F56                     
  2309                           ;main.c: 89:   _delay((unsigned long)((5)*(64000000/4000.0)));
  2310   000F56  0E68               	movlw	104
  2311   000F58  6E05               	movwf	??_LCD_Init^0,c
  2312   000F5A  0EE4               	movlw	228
  2313   000F5C                     u1437:
  2314   000F5C  2EE8               	decfsz	wreg,f,c
  2315   000F5E  D7FE               	bra	u1437
  2316   000F60  2E05               	decfsz	??_LCD_Init^0,f,c
  2317   000F62  D7FC               	bra	u1437
  2318   000F64  D000               	nop2	
  2319   000F66                     
  2320                           ;main.c: 90:   LCD_CMD(0x03);
  2321   000F66  0E03               	movlw	3
  2322   000F68  ECD8  F009         	call	_LCD_CMD
  2323                           
  2324                           ;main.c: 91:   _delay((unsigned long)((5)*(64000000/4000.0)));
  2325   000F6C  0E68               	movlw	104
  2326   000F6E  6E05               	movwf	??_LCD_Init^0,c
  2327   000F70  0EE4               	movlw	228
  2328   000F72                     u1447:
  2329   000F72  2EE8               	decfsz	wreg,f,c
  2330   000F74  D7FE               	bra	u1447
  2331   000F76  2E05               	decfsz	??_LCD_Init^0,f,c
  2332   000F78  D7FC               	bra	u1447
  2333   000F7A  D000               	nop2	
  2334   000F7C                     
  2335                           ;main.c: 92:   LCD_CMD(0x03);
  2336   000F7C  0E03               	movlw	3
  2337   000F7E  ECD8  F009         	call	_LCD_CMD
  2338   000F82                     
  2339                           ;main.c: 93:   _delay((unsigned long)((5)*(64000000/4000.0)));
  2340   000F82  0E68               	movlw	104
  2341   000F84  6E05               	movwf	??_LCD_Init^0,c
  2342   000F86  0EE4               	movlw	228
  2343   000F88                     u1457:
  2344   000F88  2EE8               	decfsz	wreg,f,c
  2345   000F8A  D7FE               	bra	u1457
  2346   000F8C  2E05               	decfsz	??_LCD_Init^0,f,c
  2347   000F8E  D7FC               	bra	u1457
  2348   000F90  D000               	nop2	
  2349                           
  2350                           ;main.c: 94:   LCD_CMD(0x02);
  2351   000F92  0E02               	movlw	2
  2352   000F94  ECD8  F009         	call	_LCD_CMD
  2353   000F98                     
  2354                           ;main.c: 95:   _delay((unsigned long)((5)*(64000000/4000.0)));
  2355   000F98  0E68               	movlw	104
  2356   000F9A  6E05               	movwf	??_LCD_Init^0,c
  2357   000F9C  0EE4               	movlw	228
  2358   000F9E                     u1467:
  2359   000F9E  2EE8               	decfsz	wreg,f,c
  2360   000FA0  D7FE               	bra	u1467
  2361   000FA2  2E05               	decfsz	??_LCD_Init^0,f,c
  2362   000FA4  D7FC               	bra	u1467
  2363   000FA6  D000               	nop2	
  2364   000FA8                     
  2365                           ;main.c: 96:   LCD_CMD(0x20 | (2 << 2));
  2366   000FA8  0E28               	movlw	40
  2367   000FAA  ECD8  F009         	call	_LCD_CMD
  2368                           
  2369                           ;main.c: 97:   _delay((unsigned long)((50)*(64000000/4000.0)));
  2370   000FAE  0E05               	movlw	5
  2371   000FB0  6E06               	movwf	(??_LCD_Init+1)^0,c
  2372   000FB2  0E0F               	movlw	15
  2373   000FB4  6E05               	movwf	??_LCD_Init^0,c
  2374   000FB6  0EF1               	movlw	241
  2375   000FB8                     u1477:
  2376   000FB8  2EE8               	decfsz	wreg,f,c
  2377   000FBA  D7FE               	bra	u1477
  2378   000FBC  2E05               	decfsz	??_LCD_Init^0,f,c
  2379   000FBE  D7FC               	bra	u1477
  2380   000FC0  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2381   000FC2  D7FA               	bra	u1477
  2382   000FC4  F000               	nop	
  2383   000FC6                     
  2384                           ;main.c: 98:   LCD_CMD(0x0C);
  2385   000FC6  0E0C               	movlw	12
  2386   000FC8  ECD8  F009         	call	_LCD_CMD
  2387   000FCC                     
  2388                           ;main.c: 99:   _delay((unsigned long)((50)*(64000000/4000.0)));
  2389   000FCC  0E05               	movlw	5
  2390   000FCE  6E06               	movwf	(??_LCD_Init+1)^0,c
  2391   000FD0  0E0F               	movlw	15
  2392   000FD2  6E05               	movwf	??_LCD_Init^0,c
  2393   000FD4  0EF1               	movlw	241
  2394   000FD6                     u1487:
  2395   000FD6  2EE8               	decfsz	wreg,f,c
  2396   000FD8  D7FE               	bra	u1487
  2397   000FDA  2E05               	decfsz	??_LCD_Init^0,f,c
  2398   000FDC  D7FC               	bra	u1487
  2399   000FDE  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2400   000FE0  D7FA               	bra	u1487
  2401   000FE2  F000               	nop	
  2402                           
  2403                           ;main.c: 100:   LCD_CMD(0x01);
  2404   000FE4  0E01               	movlw	1
  2405   000FE6  ECD8  F009         	call	_LCD_CMD
  2406   000FEA                     
  2407                           ;main.c: 101:   _delay((unsigned long)((50)*(64000000/4000.0)));
  2408   000FEA  0E05               	movlw	5
  2409   000FEC  6E06               	movwf	(??_LCD_Init+1)^0,c
  2410   000FEE  0E0F               	movlw	15
  2411   000FF0  6E05               	movwf	??_LCD_Init^0,c
  2412   000FF2  0EF1               	movlw	241
  2413   000FF4                     u1497:
  2414   000FF4  2EE8               	decfsz	wreg,f,c
  2415   000FF6  D7FE               	bra	u1497
  2416   000FF8  2E05               	decfsz	??_LCD_Init^0,f,c
  2417   000FFA  D7FC               	bra	u1497
  2418   000FFC  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2419   000FFE  D7FA               	bra	u1497
  2420   001000  F000               	nop	
  2421   001002                     
  2422                           ;main.c: 102:   LCD_CMD(0x04 | 0x02);
  2423   001002  0E06               	movlw	6
  2424   001004  ECD8  F009         	call	_LCD_CMD
  2425                           
  2426                           ;main.c: 103:   _delay((unsigned long)((50)*(64000000/4000.0)));
  2427   001008  0E05               	movlw	5
  2428   00100A  6E06               	movwf	(??_LCD_Init+1)^0,c
  2429   00100C  0E0F               	movlw	15
  2430   00100E  6E05               	movwf	??_LCD_Init^0,c
  2431   001010  0EF1               	movlw	241
  2432   001012                     u1507:
  2433   001012  2EE8               	decfsz	wreg,f,c
  2434   001014  D7FE               	bra	u1507
  2435   001016  2E05               	decfsz	??_LCD_Init^0,f,c
  2436   001018  D7FC               	bra	u1507
  2437   00101A  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2438   00101C  D7FA               	bra	u1507
  2439   00101E  F000               	nop	
  2440   001020  0012               	return		;funcret
  2441   001022                     __end_of_LCD_Init:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _LCD_CMD *****************
  2445 ;; Defined at:
  2446 ;;		line 123 in file "main.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  CMD             1    wreg     unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  CMD             1    3[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2460 ;;      Params:         0       0       0       0       0       0       0
  2461 ;;      Locals:         1       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0
  2463 ;;      Totals:         1       0       0       0       0       0       0
  2464 ;;Total ram usage:        1 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 3
  2467 ;; This function calls:
  2468 ;;		_LCD_Write_4Bit
  2469 ;; This function is called by:
  2470 ;;		_LCD_Init
  2471 ;;		_LCD_Set_Cursor
  2472 ;;		_LCD_CLR
  2473 ;;		_LCD_SL
  2474 ;;		_LCD_SR
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text14
  2479   0013B0                     __ptext14:
  2480                           	callstack 0
  2481   0013B0                     _LCD_CMD:
  2482                           	callstack 24
  2483                           
  2484                           ;incstack = 0
  2485                           ;LCD_CMD@CMD stored from wreg
  2486   0013B0  6E04               	movwf	LCD_CMD@CMD^0,c
  2487   0013B2                     
  2488                           ;main.c: 123: void LCD_CMD(unsigned char CMD);main.c: 124: {;main.c: 125:   RS = 0;
  2489   0013B2  0E00               	movlw	0
  2490   0013B4  6E44               	movwf	_RS^0,c
  2491   0013B6                     
  2492                           ;main.c: 126:   LCD_Write_4Bit(CMD & 0xF0);
  2493   0013B6  5004               	movf	LCD_CMD@CMD^0,w,c
  2494   0013B8  0BF0               	andlw	240
  2495   0013BA  ECBB  F009         	call	_LCD_Write_4Bit
  2496   0013BE                     
  2497                           ;main.c: 127:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  2498   0013BE  3804               	swapf	LCD_CMD@CMD^0,w,c
  2499   0013C0  0BF0               	andlw	240
  2500   0013C2  0BF0               	andlw	240
  2501   0013C4  ECBB  F009         	call	_LCD_Write_4Bit
  2502   0013C8  0012               	return		;funcret
  2503   0013CA                     __end_of_LCD_CMD:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _LCD_Write_4Bit *****************
  2507 ;; Defined at:
  2508 ;;		line 114 in file "main.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  Nibble          1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  Nibble          1    2[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:         1       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         1       0       0       0       0       0       0
  2526 ;;Total ram usage:        1 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 2
  2529 ;; This function calls:
  2530 ;;		_IO_Expander_Write
  2531 ;; This function is called by:
  2532 ;;		_LCD_CMD
  2533 ;;		_LCD_Write_Char
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text15
  2538   001376                     __ptext15:
  2539                           	callstack 0
  2540   001376                     _LCD_Write_4Bit:
  2541                           	callstack 24
  2542                           
  2543                           ;incstack = 0
  2544                           ;LCD_Write_4Bit@Nibble stored from wreg
  2545   001376  6E03               	movwf	LCD_Write_4Bit@Nibble^0,c
  2546   001378                     
  2547                           ;main.c: 114: void LCD_Write_4Bit(unsigned char Nibble);main.c: 115: {;main.c: 117:   Ni
      +                          bble |= RS;
  2548   001378  5044               	movf	_RS^0,w,c
  2549   00137A  1203               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  2550   00137C                     
  2551                           ;main.c: 118:   IO_Expander_Write(Nibble | 0x04);
  2552   00137C  5003               	movf	LCD_Write_4Bit@Nibble^0,w,c
  2553   00137E  0904               	iorlw	4
  2554   001380  ECE5  F009         	call	_IO_Expander_Write
  2555   001384                     
  2556                           ;main.c: 119:   IO_Expander_Write(Nibble & 0xFB);
  2557   001384  5003               	movf	LCD_Write_4Bit@Nibble^0,w,c
  2558   001386  0BFB               	andlw	251
  2559   001388  ECE5  F009         	call	_IO_Expander_Write
  2560   00138C                     
  2561                           ;main.c: 120:   _delay((unsigned long)((50)*(64000000/4000000.0)));
  2562   00138C  0EA0               	movlw	160
  2563   00138E                     u1517:
  2564   00138E  D000               	nop2	
  2565   001390  2EE8               	decfsz	wreg,f,c
  2566   001392  D7FD               	bra	u1517
  2567   001394  0012               	return		;funcret
  2568   001396                     __end_of_LCD_Write_4Bit:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _IO_Expander_Write *****************
  2572 ;; Defined at:
  2573 ;;		line 106 in file "main.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  Data            1    wreg     unsigned char 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  Data            1    1[COMRAM] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2587 ;;      Params:         0       0       0       0       0       0       0
  2588 ;;      Locals:         1       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0
  2590 ;;      Totals:         1       0       0       0       0       0       0
  2591 ;;Total ram usage:        1 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 1
  2594 ;; This function calls:
  2595 ;;		_I2C2_Send
  2596 ;;		_I2C2_Start
  2597 ;;		_I2C2_Stop
  2598 ;; This function is called by:
  2599 ;;		_LCD_Init
  2600 ;;		_LCD_Write_4Bit
  2601 ;;		_Backlight
  2602 ;;		_noBacklight
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text16
  2607   0013CA                     __ptext16:
  2608                           	callstack 0
  2609   0013CA                     _IO_Expander_Write:
  2610                           	callstack 24
  2611                           
  2612                           ;incstack = 0
  2613                           ;IO_Expander_Write@Data stored from wreg
  2614   0013CA  6E02               	movwf	IO_Expander_Write@Data^0,c
  2615   0013CC                     
  2616                           ;main.c: 106: void IO_Expander_Write(unsigned char Data);main.c: 107: {;main.c: 108:   I
      +                          2C2_Start();
  2617   0013CC  EC2B  F00A         	call	_I2C2_Start	;wreg free
  2618   0013D0                     
  2619                           ;main.c: 109:   I2C2_Send(i2c_add);
  2620   0013D0  5045               	movf	_i2c_add^0,w,c
  2621   0013D2  ECF2  F009         	call	_I2C2_Send
  2622   0013D6                     
  2623                           ;main.c: 110:   I2C2_Send(Data | BackLight_State);
  2624   0013D6  5002               	movf	IO_Expander_Write@Data^0,w,c
  2625   0013D8  1036               	iorwf	_BackLight_State^0,w,c
  2626   0013DA  ECF2  F009         	call	_I2C2_Send
  2627   0013DE                     
  2628                           ;main.c: 111:   I2C2_Stop();
  2629   0013DE  EC21  F00A         	call	_I2C2_Stop	;wreg free
  2630   0013E2  0012               	return		;funcret
  2631   0013E4                     __end_of_IO_Expander_Write:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _I2C2_Stop *****************
  2635 ;; Defined at:
  2636 ;;		line 82 in file "i2c.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		None
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2650 ;;      Params:         0       0       0       0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0
  2653 ;;      Totals:         0       0       0       0       0       0       0
  2654 ;;Total ram usage:        0 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_IO_Expander_Write
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text17
  2664   001442                     __ptext17:
  2665                           	callstack 0
  2666   001442                     _I2C2_Stop:
  2667                           	callstack 24
  2668   001442                     
  2669                           ;i2c.c: 83:  SSP2CON2bits.PEN = 1;
  2670   001442  846B               	bsf	107,2,c	;volatile
  2671   001444                     l289:
  2672   001444  AEA4               	btfss	164,7,c	;volatile
  2673   001446  EF27  F00A         	goto	u31
  2674   00144A  EF29  F00A         	goto	u30
  2675   00144E                     u31:
  2676   00144E  EF22  F00A         	goto	l289
  2677   001452                     u30:
  2678   001452                     
  2679                           ;i2c.c: 85:  PIR3bits.SSP2IF = 0;
  2680   001452  9EA4               	bcf	164,7,c	;volatile
  2681   001454  0012               	return		;funcret
  2682   001456                     __end_of_I2C2_Stop:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function _I2C2_Start *****************
  2686 ;; Defined at:
  2687 ;;		line 51 in file "i2c.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		None
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2701 ;;      Params:         0       0       0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_IO_Expander_Write
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text18
  2715   001456                     __ptext18:
  2716                           	callstack 0
  2717   001456                     _I2C2_Start:
  2718                           	callstack 24
  2719   001456                     
  2720                           ;i2c.c: 52:  SSP2CON2bits.SEN = 1;
  2721   001456  806B               	bsf	107,0,c	;volatile
  2722   001458                     l277:
  2723   001458  AEA4               	btfss	164,7,c	;volatile
  2724   00145A  EF31  F00A         	goto	u11
  2725   00145E  EF33  F00A         	goto	u10
  2726   001462                     u11:
  2727   001462  EF2C  F00A         	goto	l277
  2728   001466                     u10:
  2729   001466                     
  2730                           ;i2c.c: 54:  PIR3bits.SSP2IF = 0;
  2731   001466  9EA4               	bcf	164,7,c	;volatile
  2732   001468  0012               	return		;funcret
  2733   00146A                     __end_of_I2C2_Start:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _I2C2_Send *****************
  2737 ;; Defined at:
  2738 ;;		line 131 in file "i2c.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  BYTE            1    wreg     unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  BYTE            1    0[COMRAM] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      unsigned char 
  2745 ;; Registers used:
  2746 ;;		wreg
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2752 ;;      Params:         0       0       0       0       0       0       0
  2753 ;;      Locals:         1       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0
  2755 ;;      Totals:         1       0       0       0       0       0       0
  2756 ;;Total ram usage:        1 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_IO_Expander_Write
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text19
  2766   0013E4                     __ptext19:
  2767                           	callstack 0
  2768   0013E4                     _I2C2_Send:
  2769                           	callstack 24
  2770                           
  2771                           ;incstack = 0
  2772                           ;I2C2_Send@BYTE stored from wreg
  2773   0013E4  6E01               	movwf	I2C2_Send@BYTE^0,c
  2774   0013E6                     
  2775                           ;i2c.c: 132:  SSP2BUF = BYTE;
  2776   0013E6  C001  FF6F         	movff	I2C2_Send@BYTE,3951	;volatile
  2777   0013EA                     l307:
  2778   0013EA  AEA4               	btfss	164,7,c	;volatile
  2779   0013EC  EFFA  F009         	goto	u21
  2780   0013F0  EFFC  F009         	goto	u20
  2781   0013F4                     u21:
  2782   0013F4  EFF5  F009         	goto	l307
  2783   0013F8                     u20:
  2784   0013F8                     
  2785                           ;i2c.c: 134:  PIR3bits.SSP2IF = 0;
  2786   0013F8  9EA4               	bcf	164,7,c	;volatile
  2787                           
  2788                           ;i2c.c: 135:  return SSP2CON2bits.ACKSTAT;;	Return value of _I2C2_Send is never used
  2789   0013FA  506B               	movf	107,w,c	;volatile
  2790   0013FC  0012               	return		;funcret
  2791   0013FE                     __end_of_I2C2_Send:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _green_led *****************
  2795 ;; Defined at:
  2796 ;;		line 205 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		None
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2810 ;;      Params:         0       0       0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		_startTimer
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text20
  2824   001492                     __ptext20:
  2825                           	callstack 0
  2826   001492                     _green_led:
  2827                           	callstack 29
  2828   001492                     
  2829                           ;main.c: 208:     LATAbits.LATA4 = 0;
  2830   001492  9889               	bcf	137,4,c	;volatile
  2831                           
  2832                           ;main.c: 210:     LATAbits.LATA5 = 1;
  2833   001494  8A89               	bsf	137,5,c	;volatile
  2834                           
  2835                           ;main.c: 211:     LATAbits.LATA6 = 1;
  2836   001496  8C89               	bsf	137,6,c	;volatile
  2837   001498  0012               	return		;funcret
  2838   00149A                     __end_of_green_led:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function ___awmod *****************
  2842 ;; Defined at:
  2843 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  dividend        2    0[COMRAM] int 
  2846 ;;  divisor         2    2[COMRAM] int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  sign            1    5[COMRAM] unsigned char 
  2849 ;;  counter         1    4[COMRAM] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  2    0[COMRAM] int 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2859 ;;      Params:         4       0       0       0       0       0       0
  2860 ;;      Locals:         2       0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0
  2862 ;;      Totals:         6       0       0       0       0       0       0
  2863 ;;Total ram usage:        6 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_startTimer
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text21
  2873   0010DE                     __ptext21:
  2874                           	callstack 0
  2875   0010DE                     ___awmod:
  2876                           	callstack 29
  2877   0010DE  0E00               	movlw	0
  2878   0010E0  6E06               	movwf	___awmod@sign^0,c
  2879   0010E2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2880   0010E4  EF78  F008         	goto	u720
  2881   0010E8  EF76  F008         	goto	u721
  2882   0010EC                     u721:
  2883   0010EC  EF7E  F008         	goto	l1780
  2884   0010F0                     u720:
  2885   0010F0  6C01               	negf	___awmod@dividend^0,c
  2886   0010F2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2887   0010F4  B0D8               	btfsc	status,0,c
  2888   0010F6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2889   0010F8  0E01               	movlw	1
  2890   0010FA  6E06               	movwf	___awmod@sign^0,c
  2891   0010FC                     l1780:
  2892   0010FC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2893   0010FE  EF85  F008         	goto	u730
  2894   001102  EF83  F008         	goto	u731
  2895   001106                     u731:
  2896   001106  EF89  F008         	goto	l1784
  2897   00110A                     u730:
  2898   00110A  6C03               	negf	___awmod@divisor^0,c
  2899   00110C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2900   00110E  B0D8               	btfsc	status,0,c
  2901   001110  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2902   001112                     l1784:
  2903   001112  5003               	movf	___awmod@divisor^0,w,c
  2904   001114  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2905   001116  B4D8               	btfsc	status,2,c
  2906   001118  EF90  F008         	goto	u741
  2907   00111C  EF92  F008         	goto	u740
  2908   001120                     u741:
  2909   001120  EFB6  F008         	goto	l1800
  2910   001124                     u740:
  2911   001124  0E01               	movlw	1
  2912   001126  6E05               	movwf	___awmod@counter^0,c
  2913   001128  EF9A  F008         	goto	l1790
  2914   00112C                     l1788:
  2915   00112C  90D8               	bcf	status,0,c
  2916   00112E  3603               	rlcf	___awmod@divisor^0,f,c
  2917   001130  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2918   001132  2A05               	incf	___awmod@counter^0,f,c
  2919   001134                     l1790:
  2920   001134  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2921   001136  EF9F  F008         	goto	u751
  2922   00113A  EFA1  F008         	goto	u750
  2923   00113E                     u751:
  2924   00113E  EF96  F008         	goto	l1788
  2925   001142                     u750:
  2926   001142                     l1792:
  2927   001142  5003               	movf	___awmod@divisor^0,w,c
  2928   001144  5C01               	subwf	___awmod@dividend^0,w,c
  2929   001146  5004               	movf	(___awmod@divisor+1)^0,w,c
  2930   001148  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2931   00114A  A0D8               	btfss	status,0,c
  2932   00114C  EFAA  F008         	goto	u761
  2933   001150  EFAC  F008         	goto	u760
  2934   001154                     u761:
  2935   001154  EFB0  F008         	goto	l1796
  2936   001158                     u760:
  2937   001158  5003               	movf	___awmod@divisor^0,w,c
  2938   00115A  5E01               	subwf	___awmod@dividend^0,f,c
  2939   00115C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2940   00115E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2941   001160                     l1796:
  2942   001160  90D8               	bcf	status,0,c
  2943   001162  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2944   001164  3203               	rrcf	___awmod@divisor^0,f,c
  2945   001166  2E05               	decfsz	___awmod@counter^0,f,c
  2946   001168  EFA1  F008         	goto	l1792
  2947   00116C                     l1800:
  2948   00116C  5006               	movf	___awmod@sign^0,w,c
  2949   00116E  B4D8               	btfsc	status,2,c
  2950   001170  EFBC  F008         	goto	u771
  2951   001174  EFBE  F008         	goto	u770
  2952   001178                     u771:
  2953   001178  EFC2  F008         	goto	l1804
  2954   00117C                     u770:
  2955   00117C  6C01               	negf	___awmod@dividend^0,c
  2956   00117E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2957   001180  B0D8               	btfsc	status,0,c
  2958   001182  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2959   001184                     l1804:
  2960   001184  C001  F001         	movff	___awmod@dividend,?___awmod
  2961   001188  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2962   00118C  0012               	return		;funcret
  2963   00118E                     __end_of___awmod:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _display *****************
  2967 ;; Defined at:
  2968 ;;		line 526 in file "main.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  buttonCounte    2    5[COMRAM] unsigned int 
  2971 ;;  update          2    7[COMRAM] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  DEL             2   11[COMRAM] unsigned int 
  2974 ;;  minute_secon    1   16[COMRAM] unsigned char 
  2975 ;;  minute_first    1   15[COMRAM] unsigned char 
  2976 ;;  hour_second_    1   14[COMRAM] unsigned char 
  2977 ;;  hour_first_d    1   13[COMRAM] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2987 ;;      Params:         4       0       0       0       0       0       0
  2988 ;;      Locals:         6       0       0       0       0       0       0
  2989 ;;      Temps:          2       0       0       0       0       0       0
  2990 ;;      Totals:        12       0       0       0       0       0       0
  2991 ;;Total ram usage:       12 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 1
  2994 ;; This function calls:
  2995 ;;		_EEPROM_Read
  2996 ;;		_EEPROM_Write
  2997 ;;		___lwmod
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text22
  3004   000608                     __ptext22:
  3005                           	callstack 0
  3006   000608                     _display:
  3007                           	callstack 29
  3008   000608                     
  3009                           ;main.c: 526: void display(unsigned int buttonCounter, unsigned int update);main.c: 527:
      +                           {;main.c: 528:     display_function_count = display_function_count + 1;
  3010   000608  0E01               	movlw	1
  3011   00060A  2437               	addwf	_display_function_count^0,w,c
  3012   00060C  6E37               	movwf	_display_function_count^0,c
  3013   00060E  0E00               	movlw	0
  3014   000610  2038               	addwfc	(_display_function_count+1)^0,w,c
  3015   000612  6E38               	movwf	(_display_function_count+1)^0,c
  3016   000614                     
  3017                           ;main.c: 530:     unsigned char hour_first_digit, hour_second_digit, minute_first_digit,
      +                           minute_second_digit;;main.c: 531:     unsigned int DEL;;main.c: 534:     hour_first_dig
      +                          it = EEPROM_Read(0x0A);
  3018   000614  0E0A               	movlw	10
  3019   000616  EC3D  F00A         	call	_EEPROM_Read
  3020   00061A  6E0E               	movwf	display@hour_first_digit^0,c
  3021   00061C                     
  3022                           ;main.c: 535:     hour_second_digit = EEPROM_Read(0x0B);
  3023   00061C  0E0B               	movlw	11
  3024   00061E  EC3D  F00A         	call	_EEPROM_Read
  3025   000622  6E0F               	movwf	display@hour_second_digit^0,c
  3026   000624                     
  3027                           ;main.c: 536:     minute_first_digit = EEPROM_Read(0x0C);
  3028   000624  0E0C               	movlw	12
  3029   000626  EC3D  F00A         	call	_EEPROM_Read
  3030   00062A  6E10               	movwf	display@minute_first_digit^0,c
  3031   00062C                     
  3032                           ;main.c: 537:     minute_second_digit = EEPROM_Read(0x0D);
  3033   00062C  0E0D               	movlw	13
  3034   00062E  EC3D  F00A         	call	_EEPROM_Read
  3035   000632  6E11               	movwf	display@minute_second_digit^0,c
  3036   000634                     
  3037                           ;main.c: 539:     for (DEL = 0; DEL <= 9; DEL++)
  3038   000634  0E00               	movlw	0
  3039   000636  6E0D               	movwf	(display@DEL+1)^0,c
  3040   000638  0E00               	movlw	0
  3041   00063A  6E0C               	movwf	display@DEL^0,c
  3042   00063C                     l2016:
  3043                           
  3044                           ;main.c: 540:     {;main.c: 543:         LATAbits.LATA0 = (buttonCounter == 1) ? 0 : 1;
  3045   00063C  0406               	decf	display@buttonCounter^0,w,c
  3046   00063E  1007               	iorwf	(display@buttonCounter+1)^0,w,c
  3047   000640  A4D8               	btfss	status,2,c
  3048   000642  EF25  F003         	goto	u1051
  3049   000646  EF29  F003         	goto	u1050
  3050   00064A                     u1051:
  3051   00064A  6A0A               	clrf	??_display^0,c
  3052   00064C  2A0A               	incf	??_display^0,f,c
  3053   00064E  EF2A  F003         	goto	u1068
  3054   000652                     u1050:
  3055   000652  6A0A               	clrf	??_display^0,c
  3056   000654                     u1068:
  3057   000654  5089               	movf	137,w,c	;volatile
  3058   000656  180A               	xorwf	??_display^0,w,c
  3059   000658  0BFE               	andlw	-2
  3060   00065A  180A               	xorwf	??_display^0,w,c
  3061   00065C  6E89               	movwf	137,c	;volatile
  3062   00065E                     
  3063                           ;main.c: 544:         PORTB = segment[hour_first_digit];
  3064   00065E  0E2B               	movlw	low _segment
  3065   000660  240E               	addwf	display@hour_first_digit^0,w,c
  3066   000662  6ED9               	movwf	fsr2l,c
  3067   000664  6ADA               	clrf	fsr2h,c
  3068   000666  0E00               	movlw	high _segment
  3069   000668  22DA               	addwfc	fsr2h,f,c
  3070   00066A  50DF               	movf	indf2,w,c
  3071   00066C  6E81               	movwf	129,c	;volatile
  3072   00066E                     
  3073                           ;main.c: 545:         _delay((unsigned long)((3)*(64000000/4000.0)));
  3074   00066E  0E3F               	movlw	63
  3075   000670  6E0A               	movwf	??_display^0,c
  3076   000672  0E55               	movlw	85
  3077   000674                     u1527:
  3078   000674  2EE8               	decfsz	wreg,f,c
  3079   000676  D7FE               	bra	u1527
  3080   000678  2E0A               	decfsz	??_display^0,f,c
  3081   00067A  D7FC               	bra	u1527
  3082   00067C  F000               	nop	
  3083   00067E                     
  3084                           ;main.c: 546:         LATAbits.LATA0 = 0;
  3085   00067E  9089               	bcf	137,0,c	;volatile
  3086   000680                     
  3087                           ;main.c: 549:         LATAbits.LATA1 = (buttonCounter == 2) ? 0 : 1;
  3088   000680  0E02               	movlw	2
  3089   000682  1806               	xorwf	display@buttonCounter^0,w,c
  3090   000684  1007               	iorwf	(display@buttonCounter+1)^0,w,c
  3091   000686  A4D8               	btfss	status,2,c
  3092   000688  EF48  F003         	goto	u1071
  3093   00068C  EF4C  F003         	goto	u1070
  3094   000690                     u1071:
  3095   000690  6A0A               	clrf	??_display^0,c
  3096   000692  2A0A               	incf	??_display^0,f,c
  3097   000694  EF4D  F003         	goto	u1088
  3098   000698                     u1070:
  3099   000698  6A0A               	clrf	??_display^0,c
  3100   00069A                     u1088:
  3101   00069A  460A               	rlncf	??_display^0,f,c
  3102   00069C  5089               	movf	137,w,c	;volatile
  3103   00069E  180A               	xorwf	??_display^0,w,c
  3104   0006A0  0BFD               	andlw	-3
  3105   0006A2  180A               	xorwf	??_display^0,w,c
  3106   0006A4  6E89               	movwf	137,c	;volatile
  3107   0006A6                     
  3108                           ;main.c: 550:         PORTB = segment_with_dot[hour_second_digit];
  3109   0006A6  0E20               	movlw	low _segment_with_dot
  3110   0006A8  240F               	addwf	display@hour_second_digit^0,w,c
  3111   0006AA  6ED9               	movwf	fsr2l,c
  3112   0006AC  6ADA               	clrf	fsr2h,c
  3113   0006AE  0E00               	movlw	high _segment_with_dot
  3114   0006B0  22DA               	addwfc	fsr2h,f,c
  3115   0006B2  50DF               	movf	indf2,w,c
  3116   0006B4  6E81               	movwf	129,c	;volatile
  3117                           
  3118                           ;main.c: 551:         _delay((unsigned long)((3)*(64000000/4000.0)));
  3119   0006B6  0E3F               	movlw	63
  3120   0006B8  6E0A               	movwf	??_display^0,c
  3121   0006BA  0E55               	movlw	85
  3122   0006BC                     u1537:
  3123   0006BC  2EE8               	decfsz	wreg,f,c
  3124   0006BE  D7FE               	bra	u1537
  3125   0006C0  2E0A               	decfsz	??_display^0,f,c
  3126   0006C2  D7FC               	bra	u1537
  3127   0006C4  F000               	nop	
  3128   0006C6                     
  3129                           ;main.c: 552:         LATAbits.LATA1 = 0;
  3130   0006C6  9289               	bcf	137,1,c	;volatile
  3131   0006C8                     
  3132                           ;main.c: 556:         LATAbits.LATA2 = (buttonCounter == 3) ? 0 : 1;
  3133   0006C8  0E03               	movlw	3
  3134   0006CA  1806               	xorwf	display@buttonCounter^0,w,c
  3135   0006CC  1007               	iorwf	(display@buttonCounter+1)^0,w,c
  3136   0006CE  A4D8               	btfss	status,2,c
  3137   0006D0  EF6C  F003         	goto	u1091
  3138   0006D4  EF70  F003         	goto	u1090
  3139   0006D8                     u1091:
  3140   0006D8  6A0A               	clrf	??_display^0,c
  3141   0006DA  2A0A               	incf	??_display^0,f,c
  3142   0006DC  EF71  F003         	goto	u1108
  3143   0006E0                     u1090:
  3144   0006E0  6A0A               	clrf	??_display^0,c
  3145   0006E2                     u1108:
  3146   0006E2  460A               	rlncf	??_display^0,f,c
  3147   0006E4  460A               	rlncf	??_display^0,f,c
  3148   0006E6  5089               	movf	137,w,c	;volatile
  3149   0006E8  180A               	xorwf	??_display^0,w,c
  3150   0006EA  0BFB               	andlw	-5
  3151   0006EC  180A               	xorwf	??_display^0,w,c
  3152   0006EE  6E89               	movwf	137,c	;volatile
  3153   0006F0                     
  3154                           ;main.c: 557:         PORTB = segment[minute_first_digit];
  3155   0006F0  0E2B               	movlw	low _segment
  3156   0006F2  2410               	addwf	display@minute_first_digit^0,w,c
  3157   0006F4  6ED9               	movwf	fsr2l,c
  3158   0006F6  6ADA               	clrf	fsr2h,c
  3159   0006F8  0E00               	movlw	high _segment
  3160   0006FA  22DA               	addwfc	fsr2h,f,c
  3161   0006FC  50DF               	movf	indf2,w,c
  3162   0006FE  6E81               	movwf	129,c	;volatile
  3163   000700                     
  3164                           ;main.c: 558:         _delay((unsigned long)((3)*(64000000/4000.0)));
  3165   000700  0E3F               	movlw	63
  3166   000702  6E0A               	movwf	??_display^0,c
  3167   000704  0E55               	movlw	85
  3168   000706                     u1547:
  3169   000706  2EE8               	decfsz	wreg,f,c
  3170   000708  D7FE               	bra	u1547
  3171   00070A  2E0A               	decfsz	??_display^0,f,c
  3172   00070C  D7FC               	bra	u1547
  3173   00070E  F000               	nop	
  3174   000710                     
  3175                           ;main.c: 559:         LATAbits.LATA2 = 0;
  3176   000710  9489               	bcf	137,2,c	;volatile
  3177   000712                     
  3178                           ;main.c: 562:         LATAbits.LATA3 = (buttonCounter == 4) ? 0 : 1;
  3179   000712  0E04               	movlw	4
  3180   000714  1806               	xorwf	display@buttonCounter^0,w,c
  3181   000716  1007               	iorwf	(display@buttonCounter+1)^0,w,c
  3182   000718  A4D8               	btfss	status,2,c
  3183   00071A  EF91  F003         	goto	u1111
  3184   00071E  EF95  F003         	goto	u1110
  3185   000722                     u1111:
  3186   000722  6A0A               	clrf	??_display^0,c
  3187   000724  2A0A               	incf	??_display^0,f,c
  3188   000726  EF96  F003         	goto	u1128
  3189   00072A                     u1110:
  3190   00072A  6A0A               	clrf	??_display^0,c
  3191   00072C                     u1128:
  3192   00072C  460A               	rlncf	??_display^0,f,c
  3193   00072E  460A               	rlncf	??_display^0,f,c
  3194   000730  460A               	rlncf	??_display^0,f,c
  3195   000732  5089               	movf	137,w,c	;volatile
  3196   000734  180A               	xorwf	??_display^0,w,c
  3197   000736  0BF7               	andlw	-9
  3198   000738  180A               	xorwf	??_display^0,w,c
  3199   00073A  6E89               	movwf	137,c	;volatile
  3200                           
  3201                           ;main.c: 563:         PORTB = segment[minute_second_digit];
  3202   00073C  0E2B               	movlw	low _segment
  3203   00073E  2411               	addwf	display@minute_second_digit^0,w,c
  3204   000740  6ED9               	movwf	fsr2l,c
  3205   000742  6ADA               	clrf	fsr2h,c
  3206   000744  0E00               	movlw	high _segment
  3207   000746  22DA               	addwfc	fsr2h,f,c
  3208   000748  50DF               	movf	indf2,w,c
  3209   00074A  6E81               	movwf	129,c	;volatile
  3210   00074C                     
  3211                           ;main.c: 564:         _delay((unsigned long)((3)*(64000000/4000.0)));
  3212   00074C  0E3F               	movlw	63
  3213   00074E  6E0A               	movwf	??_display^0,c
  3214   000750  0E55               	movlw	85
  3215   000752                     u1557:
  3216   000752  2EE8               	decfsz	wreg,f,c
  3217   000754  D7FE               	bra	u1557
  3218   000756  2E0A               	decfsz	??_display^0,f,c
  3219   000758  D7FC               	bra	u1557
  3220   00075A  F000               	nop	
  3221   00075C                     
  3222                           ;main.c: 565:         LATAbits.LATA3 = 0;
  3223   00075C  9689               	bcf	137,3,c	;volatile
  3224   00075E                     
  3225                           ;main.c: 567:         LATAbits.LATA7 = 0;
  3226   00075E  9E89               	bcf	137,7,c	;volatile
  3227   000760                     
  3228                           ;main.c: 569:         if ((display_function_count % 12 == 0) || (display_function_count 
      +                          % 6 == 0))
  3229   000760  C037  F001         	movff	_display_function_count,___lwmod@dividend
  3230   000764  C038  F002         	movff	_display_function_count+1,___lwmod@dividend+1
  3231   000768  0E00               	movlw	0
  3232   00076A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3233   00076C  0E0C               	movlw	12
  3234   00076E  6E03               	movwf	___lwmod@divisor^0,c
  3235   000770  ECFC  F008         	call	___lwmod	;wreg free
  3236   000774  5001               	movf	?___lwmod^0,w,c
  3237   000776  1002               	iorwf	(?___lwmod+1)^0,w,c
  3238   000778  B4D8               	btfsc	status,2,c
  3239   00077A  EFC1  F003         	goto	u1131
  3240   00077E  EFC3  F003         	goto	u1130
  3241   000782                     u1131:
  3242   000782  EF28  F004         	goto	l2076
  3243   000786                     u1130:
  3244   000786  C037  F001         	movff	_display_function_count,___lwmod@dividend
  3245   00078A  C038  F002         	movff	_display_function_count+1,___lwmod@dividend+1
  3246   00078E  0E00               	movlw	0
  3247   000790  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3248   000792  0E06               	movlw	6
  3249   000794  6E03               	movwf	___lwmod@divisor^0,c
  3250   000796  ECFC  F008         	call	___lwmod	;wreg free
  3251   00079A  5001               	movf	?___lwmod^0,w,c
  3252   00079C  1002               	iorwf	(?___lwmod+1)^0,w,c
  3253   00079E  A4D8               	btfss	status,2,c
  3254   0007A0  EFD4  F003         	goto	u1141
  3255   0007A4  EFD6  F003         	goto	u1140
  3256   0007A8                     u1141:
  3257   0007A8  EF46  F004         	goto	l2078
  3258   0007AC                     u1140:
  3259   0007AC  EF28  F004         	goto	l2076
  3260   0007B0                     l204:
  3261                           
  3262                           ;main.c: 574:                 LATAbits.LATA0 = 1;
  3263   0007B0  8089               	bsf	137,0,c	;volatile
  3264   0007B2                     
  3265                           ;main.c: 575:                 PORTB = segment[hour_first_digit];
  3266   0007B2  0E2B               	movlw	low _segment
  3267   0007B4  240E               	addwf	display@hour_first_digit^0,w,c
  3268   0007B6  6ED9               	movwf	fsr2l,c
  3269   0007B8  6ADA               	clrf	fsr2h,c
  3270   0007BA  0E00               	movlw	high _segment
  3271   0007BC  22DA               	addwfc	fsr2h,f,c
  3272   0007BE  50DF               	movf	indf2,w,c
  3273   0007C0  6E81               	movwf	129,c	;volatile
  3274   0007C2                     
  3275                           ;main.c: 576:                 _delay((unsigned long)((3)*(64000000/4000.0)));
  3276   0007C2  0E3F               	movlw	63
  3277   0007C4  6E0A               	movwf	??_display^0,c
  3278   0007C6  0E55               	movlw	85
  3279   0007C8                     u1567:
  3280   0007C8  2EE8               	decfsz	wreg,f,c
  3281   0007CA  D7FE               	bra	u1567
  3282   0007CC  2E0A               	decfsz	??_display^0,f,c
  3283   0007CE  D7FC               	bra	u1567
  3284   0007D0  F000               	nop	
  3285   0007D2                     
  3286                           ;main.c: 577:                 LATAbits.LATA0 = 0;
  3287   0007D2  9089               	bcf	137,0,c	;volatile
  3288                           
  3289                           ;main.c: 578:                 break;
  3290   0007D4  EF46  F004         	goto	l2078
  3291   0007D8                     l206:
  3292                           
  3293                           ;main.c: 581:                 LATAbits.LATA1 = 1;
  3294   0007D8  8289               	bsf	137,1,c	;volatile
  3295   0007DA                     
  3296                           ;main.c: 582:                 PORTB = segment_with_dot[hour_second_digit];
  3297   0007DA  0E20               	movlw	low _segment_with_dot
  3298   0007DC  240F               	addwf	display@hour_second_digit^0,w,c
  3299   0007DE  6ED9               	movwf	fsr2l,c
  3300   0007E0  6ADA               	clrf	fsr2h,c
  3301   0007E2  0E00               	movlw	high _segment_with_dot
  3302   0007E4  22DA               	addwfc	fsr2h,f,c
  3303   0007E6  50DF               	movf	indf2,w,c
  3304   0007E8  6E81               	movwf	129,c	;volatile
  3305   0007EA                     
  3306                           ;main.c: 583:                 _delay((unsigned long)((3)*(64000000/4000.0)));
  3307   0007EA  0E3F               	movlw	63
  3308   0007EC  6E0A               	movwf	??_display^0,c
  3309   0007EE  0E55               	movlw	85
  3310   0007F0                     u1577:
  3311   0007F0  2EE8               	decfsz	wreg,f,c
  3312   0007F2  D7FE               	bra	u1577
  3313   0007F4  2E0A               	decfsz	??_display^0,f,c
  3314   0007F6  D7FC               	bra	u1577
  3315   0007F8  F000               	nop	
  3316   0007FA                     
  3317                           ;main.c: 584:                 LATAbits.LATA1 = 0;
  3318   0007FA  9289               	bcf	137,1,c	;volatile
  3319                           
  3320                           ;main.c: 585:                 break;
  3321   0007FC  EF46  F004         	goto	l2078
  3322   000800                     l207:
  3323                           
  3324                           ;main.c: 588:                 LATAbits.LATA2 = 1;
  3325   000800  8489               	bsf	137,2,c	;volatile
  3326   000802                     
  3327                           ;main.c: 589:                 PORTB = segment[minute_first_digit];
  3328   000802  0E2B               	movlw	low _segment
  3329   000804  2410               	addwf	display@minute_first_digit^0,w,c
  3330   000806  6ED9               	movwf	fsr2l,c
  3331   000808  6ADA               	clrf	fsr2h,c
  3332   00080A  0E00               	movlw	high _segment
  3333   00080C  22DA               	addwfc	fsr2h,f,c
  3334   00080E  50DF               	movf	indf2,w,c
  3335   000810  6E81               	movwf	129,c	;volatile
  3336   000812                     
  3337                           ;main.c: 590:                 _delay((unsigned long)((3)*(64000000/4000.0)));
  3338   000812  0E3F               	movlw	63
  3339   000814  6E0A               	movwf	??_display^0,c
  3340   000816  0E55               	movlw	85
  3341   000818                     u1587:
  3342   000818  2EE8               	decfsz	wreg,f,c
  3343   00081A  D7FE               	bra	u1587
  3344   00081C  2E0A               	decfsz	??_display^0,f,c
  3345   00081E  D7FC               	bra	u1587
  3346   000820  F000               	nop	
  3347   000822                     
  3348                           ;main.c: 591:                 LATAbits.LATA2 = 0;
  3349   000822  9489               	bcf	137,2,c	;volatile
  3350                           
  3351                           ;main.c: 592:                 break;
  3352   000824  EF46  F004         	goto	l2078
  3353   000828                     l208:
  3354                           
  3355                           ;main.c: 595:                 LATAbits.LATA3 = 1;
  3356   000828  8689               	bsf	137,3,c	;volatile
  3357   00082A                     
  3358                           ;main.c: 596:                 PORTB = segment[minute_second_digit];
  3359   00082A  0E2B               	movlw	low _segment
  3360   00082C  2411               	addwf	display@minute_second_digit^0,w,c
  3361   00082E  6ED9               	movwf	fsr2l,c
  3362   000830  6ADA               	clrf	fsr2h,c
  3363   000832  0E00               	movlw	high _segment
  3364   000834  22DA               	addwfc	fsr2h,f,c
  3365   000836  50DF               	movf	indf2,w,c
  3366   000838  6E81               	movwf	129,c	;volatile
  3367   00083A                     
  3368                           ;main.c: 597:                 _delay((unsigned long)((3)*(64000000/4000.0)));
  3369   00083A  0E3F               	movlw	63
  3370   00083C  6E0A               	movwf	??_display^0,c
  3371   00083E  0E55               	movlw	85
  3372   000840                     u1597:
  3373   000840  2EE8               	decfsz	wreg,f,c
  3374   000842  D7FE               	bra	u1597
  3375   000844  2E0A               	decfsz	??_display^0,f,c
  3376   000846  D7FC               	bra	u1597
  3377   000848  F000               	nop	
  3378   00084A                     
  3379                           ;main.c: 598:                 LATAbits.LATA3 = 0;
  3380   00084A  9689               	bcf	137,3,c	;volatile
  3381                           
  3382                           ;main.c: 599:                 break;
  3383   00084C  EF46  F004         	goto	l2078
  3384   000850                     l2076:
  3385   000850  C006  F00A         	movff	display@buttonCounter,??_display
  3386   000854  C007  F00B         	movff	display@buttonCounter+1,??_display+1
  3387                           
  3388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3389                           ; Switch size 1, requested type "simple"
  3390                           ; Number of cases is 1, Range of values is 0 to 0
  3391                           ; switch strategies available:
  3392                           ; Name         Instructions Cycles
  3393                           ; simple_byte            4     3 (average)
  3394                           ;	Chosen strategy is simple_byte
  3395   000858  500B               	movf	(??_display+1)^0,w,c
  3396   00085A  0A00               	xorlw	0	; case 0
  3397   00085C  B4D8               	btfsc	status,2,c
  3398   00085E  EF33  F004         	goto	l2308
  3399   000862  EF46  F004         	goto	l2078
  3400   000866                     l2308:
  3401                           
  3402                           ; Switch size 1, requested type "simple"
  3403                           ; Number of cases is 4, Range of values is 1 to 4
  3404                           ; switch strategies available:
  3405                           ; Name         Instructions Cycles
  3406                           ; simple_byte           13     7 (average)
  3407                           ;	Chosen strategy is simple_byte
  3408   000866  500A               	movf	??_display^0,w,c
  3409   000868  0A01               	xorlw	1	; case 1
  3410   00086A  B4D8               	btfsc	status,2,c
  3411   00086C  EFD8  F003         	goto	l204
  3412   000870  0A03               	xorlw	3	; case 2
  3413   000872  B4D8               	btfsc	status,2,c
  3414   000874  EFEC  F003         	goto	l206
  3415   000878  0A01               	xorlw	1	; case 3
  3416   00087A  B4D8               	btfsc	status,2,c
  3417   00087C  EF00  F004         	goto	l207
  3418   000880  0A07               	xorlw	7	; case 4
  3419   000882  B4D8               	btfsc	status,2,c
  3420   000884  EF14  F004         	goto	l208
  3421   000888  EF46  F004         	goto	l2078
  3422   00088C                     l2078:
  3423                           
  3424                           ;main.c: 605:     }
  3425   00088C  4A0C               	infsnz	display@DEL^0,f,c
  3426   00088E  2A0D               	incf	(display@DEL+1)^0,f,c
  3427   000890  500D               	movf	(display@DEL+1)^0,w,c
  3428   000892  E109               	bnz	u1150
  3429   000894  0E0A               	movlw	10
  3430   000896  5C0C               	subwf	display@DEL^0,w,c
  3431   000898  A0D8               	btfss	status,0,c
  3432   00089A  EF51  F004         	goto	u1151
  3433   00089E  EF53  F004         	goto	u1150
  3434   0008A2                     u1151:
  3435   0008A2  EF1E  F003         	goto	l2016
  3436   0008A6                     u1150:
  3437   0008A6                     
  3438                           ;main.c: 608:     if (update && (display_function_count % 2 == 0))
  3439   0008A6  5008               	movf	display@update^0,w,c
  3440   0008A8  1009               	iorwf	(display@update+1)^0,w,c
  3441   0008AA  B4D8               	btfsc	status,2,c
  3442   0008AC  EF5A  F004         	goto	u1161
  3443   0008B0  EF5C  F004         	goto	u1160
  3444   0008B4                     u1161:
  3445   0008B4  EFCF  F004         	goto	l2116
  3446   0008B8                     u1160:
  3447   0008B8  B037               	btfsc	_display_function_count^0,0,c
  3448   0008BA  EF61  F004         	goto	u1171
  3449   0008BE  EF63  F004         	goto	u1170
  3450   0008C2                     u1171:
  3451   0008C2  EFCF  F004         	goto	l2116
  3452   0008C6                     u1170:
  3453   0008C6  EFB1  F004         	goto	l2114
  3454   0008CA                     l2088:
  3455                           
  3456                           ;main.c: 613:             hour_first_digit = hour_first_digit + 1;
  3457   0008CA  280E               	incf	display@hour_first_digit^0,w,c
  3458   0008CC  6E0E               	movwf	display@hour_first_digit^0,c
  3459                           
  3460                           ;main.c: 614:             if (hour_first_digit > 9)
  3461   0008CE  0E09               	movlw	9
  3462   0008D0  640E               	cpfsgt	display@hour_first_digit^0,c
  3463   0008D2  EF6D  F004         	goto	u1181
  3464   0008D6  EF6F  F004         	goto	u1180
  3465   0008DA                     u1181:
  3466   0008DA  EF71  F004         	goto	l2092
  3467   0008DE                     u1180:
  3468   0008DE                     
  3469                           ;main.c: 615:                 hour_first_digit = 0;
  3470   0008DE  0E00               	movlw	0
  3471   0008E0  6E0E               	movwf	display@hour_first_digit^0,c
  3472   0008E2                     l2092:
  3473                           
  3474                           ;main.c: 616:             EEPROM_Write(0x0A, hour_first_digit);
  3475   0008E2  C00E  F001         	movff	display@hour_first_digit,EEPROM_Write@data
  3476   0008E6  0E0A               	movlw	10
  3477   0008E8  EC91  F009         	call	_EEPROM_Write
  3478                           
  3479                           ;main.c: 617:             break;
  3480   0008EC  EFCF  F004         	goto	l2116
  3481   0008F0                     l2094:
  3482                           
  3483                           ;main.c: 619:             hour_second_digit = hour_second_digit + 1;
  3484   0008F0  280F               	incf	display@hour_second_digit^0,w,c
  3485   0008F2  6E0F               	movwf	display@hour_second_digit^0,c
  3486                           
  3487                           ;main.c: 620:             if (hour_second_digit > 9)
  3488   0008F4  0E09               	movlw	9
  3489   0008F6  640F               	cpfsgt	display@hour_second_digit^0,c
  3490   0008F8  EF80  F004         	goto	u1191
  3491   0008FC  EF82  F004         	goto	u1190
  3492   000900                     u1191:
  3493   000900  EF84  F004         	goto	l2098
  3494   000904                     u1190:
  3495   000904                     
  3496                           ;main.c: 621:                 hour_second_digit = 0;
  3497   000904  0E00               	movlw	0
  3498   000906  6E0F               	movwf	display@hour_second_digit^0,c
  3499   000908                     l2098:
  3500                           
  3501                           ;main.c: 622:             EEPROM_Write(0x0B, hour_second_digit);
  3502   000908  C00F  F001         	movff	display@hour_second_digit,EEPROM_Write@data
  3503   00090C  0E0B               	movlw	11
  3504   00090E  EC91  F009         	call	_EEPROM_Write
  3505                           
  3506                           ;main.c: 623:             break;
  3507   000912  EFCF  F004         	goto	l2116
  3508   000916                     l2100:
  3509                           
  3510                           ;main.c: 625:             minute_first_digit = minute_first_digit + 1;
  3511   000916  2810               	incf	display@minute_first_digit^0,w,c
  3512   000918  6E10               	movwf	display@minute_first_digit^0,c
  3513                           
  3514                           ;main.c: 626:             if (minute_first_digit > 5)
  3515   00091A  0E05               	movlw	5
  3516   00091C  6410               	cpfsgt	display@minute_first_digit^0,c
  3517   00091E  EF93  F004         	goto	u1201
  3518   000922  EF95  F004         	goto	u1200
  3519   000926                     u1201:
  3520   000926  EF97  F004         	goto	l2104
  3521   00092A                     u1200:
  3522   00092A                     
  3523                           ;main.c: 627:                 minute_first_digit = 0;
  3524   00092A  0E00               	movlw	0
  3525   00092C  6E10               	movwf	display@minute_first_digit^0,c
  3526   00092E                     l2104:
  3527                           
  3528                           ;main.c: 628:             EEPROM_Write(0x0C, minute_first_digit);
  3529   00092E  C010  F001         	movff	display@minute_first_digit,EEPROM_Write@data
  3530   000932  0E0C               	movlw	12
  3531   000934  EC91  F009         	call	_EEPROM_Write
  3532                           
  3533                           ;main.c: 629:             break;
  3534   000938  EFCF  F004         	goto	l2116
  3535   00093C                     l2106:
  3536                           
  3537                           ;main.c: 631:             minute_second_digit = minute_second_digit + 1;
  3538   00093C  2811               	incf	display@minute_second_digit^0,w,c
  3539   00093E  6E11               	movwf	display@minute_second_digit^0,c
  3540                           
  3541                           ;main.c: 632:             if (minute_second_digit > 9)
  3542   000940  0E09               	movlw	9
  3543   000942  6411               	cpfsgt	display@minute_second_digit^0,c
  3544   000944  EFA6  F004         	goto	u1211
  3545   000948  EFA8  F004         	goto	u1210
  3546   00094C                     u1211:
  3547   00094C  EFAA  F004         	goto	l2110
  3548   000950                     u1210:
  3549   000950                     
  3550                           ;main.c: 633:                 minute_second_digit = 0;
  3551   000950  0E00               	movlw	0
  3552   000952  6E11               	movwf	display@minute_second_digit^0,c
  3553   000954                     l2110:
  3554                           
  3555                           ;main.c: 634:             EEPROM_Write(0x0D, minute_second_digit);
  3556   000954  C011  F001         	movff	display@minute_second_digit,EEPROM_Write@data
  3557   000958  0E0D               	movlw	13
  3558   00095A  EC91  F009         	call	_EEPROM_Write
  3559                           
  3560                           ;main.c: 635:             break;
  3561   00095E  EFCF  F004         	goto	l2116
  3562   000962                     l2114:
  3563   000962  C006  F00A         	movff	display@buttonCounter,??_display
  3564   000966  C007  F00B         	movff	display@buttonCounter+1,??_display+1
  3565                           
  3566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3567                           ; Switch size 1, requested type "simple"
  3568                           ; Number of cases is 1, Range of values is 0 to 0
  3569                           ; switch strategies available:
  3570                           ; Name         Instructions Cycles
  3571                           ; simple_byte            4     3 (average)
  3572                           ;	Chosen strategy is simple_byte
  3573   00096A  500B               	movf	(??_display+1)^0,w,c
  3574   00096C  0A00               	xorlw	0	; case 0
  3575   00096E  B4D8               	btfsc	status,2,c
  3576   000970  EFBC  F004         	goto	l2310
  3577   000974  EFCF  F004         	goto	l2116
  3578   000978                     l2310:
  3579                           
  3580                           ; Switch size 1, requested type "simple"
  3581                           ; Number of cases is 4, Range of values is 1 to 4
  3582                           ; switch strategies available:
  3583                           ; Name         Instructions Cycles
  3584                           ; simple_byte           13     7 (average)
  3585                           ;	Chosen strategy is simple_byte
  3586   000978  500A               	movf	??_display^0,w,c
  3587   00097A  0A01               	xorlw	1	; case 1
  3588   00097C  B4D8               	btfsc	status,2,c
  3589   00097E  EF65  F004         	goto	l2088
  3590   000982  0A03               	xorlw	3	; case 2
  3591   000984  B4D8               	btfsc	status,2,c
  3592   000986  EF78  F004         	goto	l2094
  3593   00098A  0A01               	xorlw	1	; case 3
  3594   00098C  B4D8               	btfsc	status,2,c
  3595   00098E  EF8B  F004         	goto	l2100
  3596   000992  0A07               	xorlw	7	; case 4
  3597   000994  B4D8               	btfsc	status,2,c
  3598   000996  EF9E  F004         	goto	l2106
  3599   00099A  EFCF  F004         	goto	l2116
  3600   00099E                     l2116:
  3601                           
  3602                           ;main.c: 642:     if (display_function_count > 1000)
  3603   00099E  0EE9               	movlw	233
  3604   0009A0  5C37               	subwf	_display_function_count^0,w,c
  3605   0009A2  0E03               	movlw	3
  3606   0009A4  5838               	subwfb	(_display_function_count+1)^0,w,c
  3607   0009A6  A0D8               	btfss	status,0,c
  3608   0009A8  EFD8  F004         	goto	u1221
  3609   0009AC  EFDA  F004         	goto	u1220
  3610   0009B0                     u1221:
  3611   0009B0  EFDE  F004         	goto	l223
  3612   0009B4                     u1220:
  3613   0009B4                     
  3614                           ;main.c: 643:         display_function_count = 0;
  3615   0009B4  0E00               	movlw	0
  3616   0009B6  6E38               	movwf	(_display_function_count+1)^0,c
  3617   0009B8  0E00               	movlw	0
  3618   0009BA  6E37               	movwf	_display_function_count^0,c
  3619   0009BC                     l223:
  3620   0009BC  0012               	return		;funcret
  3621   0009BE                     __end_of_display:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function ___lwmod *****************
  3625 ;; Defined at:
  3626 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  dividend        2    0[COMRAM] unsigned int 
  3629 ;;  divisor         2    2[COMRAM] unsigned int 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  counter         1    4[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2    0[COMRAM] unsigned int 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3641 ;;      Params:         4       0       0       0       0       0       0
  3642 ;;      Locals:         1       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0
  3644 ;;      Totals:         5       0       0       0       0       0       0
  3645 ;;Total ram usage:        5 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_display
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text23
  3655   0011F8                     __ptext23:
  3656                           	callstack 0
  3657   0011F8                     ___lwmod:
  3658                           	callstack 29
  3659   0011F8  5003               	movf	___lwmod@divisor^0,w,c
  3660   0011FA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3661   0011FC  B4D8               	btfsc	status,2,c
  3662   0011FE  EF03  F009         	goto	u781
  3663   001202  EF05  F009         	goto	u780
  3664   001206                     u781:
  3665   001206  EF29  F009         	goto	l820
  3666   00120A                     u780:
  3667   00120A  0E01               	movlw	1
  3668   00120C  6E05               	movwf	___lwmod@counter^0,c
  3669   00120E  EF0D  F009         	goto	l1814
  3670   001212                     l1812:
  3671   001212  90D8               	bcf	status,0,c
  3672   001214  3603               	rlcf	___lwmod@divisor^0,f,c
  3673   001216  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3674   001218  2A05               	incf	___lwmod@counter^0,f,c
  3675   00121A                     l1814:
  3676   00121A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3677   00121C  EF12  F009         	goto	u791
  3678   001220  EF14  F009         	goto	u790
  3679   001224                     u791:
  3680   001224  EF09  F009         	goto	l1812
  3681   001228                     u790:
  3682   001228                     l1816:
  3683   001228  5003               	movf	___lwmod@divisor^0,w,c
  3684   00122A  5C01               	subwf	___lwmod@dividend^0,w,c
  3685   00122C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3686   00122E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3687   001230  A0D8               	btfss	status,0,c
  3688   001232  EF1D  F009         	goto	u801
  3689   001236  EF1F  F009         	goto	u800
  3690   00123A                     u801:
  3691   00123A  EF23  F009         	goto	l1820
  3692   00123E                     u800:
  3693   00123E  5003               	movf	___lwmod@divisor^0,w,c
  3694   001240  5E01               	subwf	___lwmod@dividend^0,f,c
  3695   001242  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3696   001244  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3697   001246                     l1820:
  3698   001246  90D8               	bcf	status,0,c
  3699   001248  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3700   00124A  3203               	rrcf	___lwmod@divisor^0,f,c
  3701   00124C  2E05               	decfsz	___lwmod@counter^0,f,c
  3702   00124E  EF14  F009         	goto	l1816
  3703   001252                     l820:
  3704   001252  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3705   001256  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3706   00125A  0012               	return		;funcret
  3707   00125C                     __end_of___lwmod:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _EEPROM_Write *****************
  3711 ;; Defined at:
  3712 ;;		line 481 in file "main.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  address         1    wreg     unsigned char 
  3715 ;;  data            1    0[COMRAM] unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  address         1    1[COMRAM] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3727 ;;      Params:         1       0       0       0       0       0       0
  3728 ;;      Locals:         1       0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0
  3730 ;;      Totals:         2       0       0       0       0       0       0
  3731 ;;Total ram usage:        2 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_display
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text24
  3742   001322                     __ptext24:
  3743                           	callstack 0
  3744   001322                     _EEPROM_Write:
  3745                           	callstack 29
  3746                           
  3747                           ;incstack = 0
  3748                           ;EEPROM_Write@address stored from wreg
  3749   001322  6E02               	movwf	EEPROM_Write@address^0,c
  3750   001324                     
  3751                           ;main.c: 481: void EEPROM_Write(unsigned char address, unsigned char data);main.c: 482: 
      +                          {;main.c: 484:     EEADR = address;
  3752   001324  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  3753   001328                     
  3754                           ;main.c: 485:     EEDATA = data;
  3755   001328  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  3756   00132C                     
  3757                           ;main.c: 486:     EECON1bits.EEPGD = 0;
  3758   00132C  9EA6               	bcf	166,7,c	;volsfr
  3759   00132E                     
  3760                           ;main.c: 487:     EECON1bits.CFGS = 0;
  3761   00132E  9CA6               	bcf	166,6,c	;volsfr
  3762   001330                     
  3763                           ;main.c: 488:     EECON1bits.WREN = 1;
  3764   001330  84A6               	bsf	166,2,c	;volsfr
  3765   001332                     
  3766                           ;main.c: 489:     INTCONbits.GIE = 0;
  3767   001332  9EF2               	bcf	242,7,c	;volatile
  3768   001334                     
  3769                           ;main.c: 493:     EECON2 = 0x55;
  3770   001334  0E55               	movlw	85
  3771   001336  6EA7               	movwf	167,c	;volsfr
  3772   001338                     
  3773                           ;main.c: 494:     EECON2 = 0xAA;
  3774   001338  0EAA               	movlw	170
  3775   00133A  6EA7               	movwf	167,c	;volsfr
  3776   00133C                     
  3777                           ;main.c: 496:     EECON1bits.WR = 1;
  3778   00133C  82A6               	bsf	166,1,c	;volsfr
  3779   00133E                     
  3780                           ;main.c: 497:     INTCONbits.GIE = 1;
  3781   00133E  8EF2               	bsf	242,7,c	;volatile
  3782   001340                     l189:
  3783                           
  3784                           ;main.c: 499:     while (PIR2bits.EEIF == 0)
  3785   001340  A8A1               	btfss	161,4,c	;volatile
  3786   001342  EFA5  F009         	goto	u711
  3787   001346  EFA7  F009         	goto	u710
  3788   00134A                     u711:
  3789   00134A  EFA0  F009         	goto	l189
  3790   00134E                     u710:
  3791   00134E                     
  3792                           ;main.c: 501:     PIR2bits.EEIF = 0;
  3793   00134E  98A1               	bcf	161,4,c	;volatile
  3794   001350  0012               	return		;funcret
  3795   001352                     __end_of_EEPROM_Write:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _EEPROM_Read *****************
  3799 ;; Defined at:
  3800 ;;		line 510 in file "main.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  address         1    wreg     unsigned char 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  address         1    0[COMRAM] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      unsigned char 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3814 ;;      Params:         0       0       0       0       0       0       0
  3815 ;;      Locals:         1       0       0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0
  3817 ;;      Totals:         1       0       0       0       0       0       0
  3818 ;;Total ram usage:        1 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_startTimer
  3824 ;;		_display
  3825 ;;		_main
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text25
  3830   00147A                     __ptext25:
  3831                           	callstack 0
  3832   00147A                     _EEPROM_Read:
  3833                           	callstack 29
  3834                           
  3835                           ;incstack = 0
  3836                           ;EEPROM_Read@address stored from wreg
  3837   00147A  6E01               	movwf	EEPROM_Read@address^0,c
  3838   00147C                     
  3839                           ;main.c: 510: char EEPROM_Read(unsigned char address);main.c: 511: {;main.c: 513:     EE
      +                          ADR = address;
  3840   00147C  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  3841   001480                     
  3842                           ;main.c: 514:     EECON1bits.WREN = 0;
  3843   001480  94A6               	bcf	166,2,c	;volsfr
  3844   001482                     
  3845                           ;main.c: 515:     EECON1bits.EEPGD = 0;
  3846   001482  9EA6               	bcf	166,7,c	;volsfr
  3847   001484                     
  3848                           ;main.c: 516:     EECON1bits.RD = 1;
  3849   001484  80A6               	bsf	166,0,c	;volsfr
  3850   001486                     
  3851                           ;main.c: 517:     return (EEDATA);
  3852   001486  50A8               	movf	168,w,c	;volatile
  3853   001488  0012               	return		;funcret
  3854   00148A                     __end_of_EEPROM_Read:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _blue_led *****************
  3858 ;; Defined at:
  3859 ;;		line 214 in file "main.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		None
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3873 ;;      Params:         0       0       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text26
  3887   00149A                     __ptext26:
  3888                           	callstack 0
  3889   00149A                     _blue_led:
  3890                           	callstack 30
  3891   00149A                     
  3892                           ;main.c: 216:     LATAbits.LATA6 = 0;
  3893   00149A  9C89               	bcf	137,6,c	;volatile
  3894                           
  3895                           ;main.c: 218:     LATAbits.LATA5 = 1;
  3896   00149C  8A89               	bsf	137,5,c	;volatile
  3897                           
  3898                           ;main.c: 219:     LATAbits.LATA4 = 1;
  3899   00149E  8889               	bsf	137,4,c	;volatile
  3900   0014A0  0012               	return		;funcret
  3901   0014A2                     __end_of_blue_led:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _I2C2_Init *****************
  3905 ;; Defined at:
  3906 ;;		line 20 in file "i2c.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3920 ;;      Params:         0       0       0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0
  3923 ;;      Totals:         0       0       0       0       0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text27
  3934   0013FE                     __ptext27:
  3935                           	callstack 0
  3936   0013FE                     _I2C2_Init:
  3937                           	callstack 30
  3938   0013FE                     
  3939                           ;i2c.c: 21:     TRISBbits.RB2 = 1;
  3940   0013FE  8493               	bsf	147,2,c	;volatile
  3941                           
  3942                           ;i2c.c: 22:     TRISBbits.RB1 = 1;
  3943   001400  8293               	bsf	147,1,c	;volatile
  3944                           
  3945                           ;i2c.c: 25:     ANSELBbits.ANSB2 = 0;
  3946   001402  010F               	movlb	15	; () banked
  3947   001404  9539               	bcf	57,2,b	;volatile
  3948                           
  3949                           ;i2c.c: 26:     ANSELBbits.ANSB1 = 0;
  3950   001406  9339               	bcf	57,1,b	;volatile
  3951   001408                     
  3952                           ; BSR set to: 15
  3953                           ;i2c.c: 28:     SSP2STAT = 0b10000000;
  3954   001408  0E80               	movlw	128
  3955   00140A  6E6D               	movwf	109,c	;volatile
  3956                           
  3957                           ;i2c.c: 37:  SSP2CON1 = 0b00101000;
  3958   00140C  0E28               	movlw	40
  3959   00140E  6E6C               	movwf	108,c	;volatile
  3960                           
  3961                           ;i2c.c: 38:     SSP2ADD = 159u;
  3962   001410  0E9F               	movlw	159
  3963   001412  6E6E               	movwf	110,c	;volatile
  3964   001414                     
  3965                           ; BSR set to: 15
  3966   001414  0012               	return		;funcret
  3967   001416                     __end_of_I2C2_Init:
  3968                           	callstack 0
  3969                           
  3970                           	psect	rparam
  3971   000000                     
  3972                           	psect	idloc
  3973                           
  3974                           ;Config register IDLOC0 @ 0x200000
  3975                           ;	unspecified, using default values
  3976   200000                     	org	2097152
  3977   200000  FF                 	db	255
  3978                           
  3979                           ;Config register IDLOC1 @ 0x200001
  3980                           ;	unspecified, using default values
  3981   200001                     	org	2097153
  3982   200001  FF                 	db	255
  3983                           
  3984                           ;Config register IDLOC2 @ 0x200002
  3985                           ;	unspecified, using default values
  3986   200002                     	org	2097154
  3987   200002  FF                 	db	255
  3988                           
  3989                           ;Config register IDLOC3 @ 0x200003
  3990                           ;	unspecified, using default values
  3991   200003                     	org	2097155
  3992   200003  FF                 	db	255
  3993                           
  3994                           ;Config register IDLOC4 @ 0x200004
  3995                           ;	unspecified, using default values
  3996   200004                     	org	2097156
  3997   200004  FF                 	db	255
  3998                           
  3999                           ;Config register IDLOC5 @ 0x200005
  4000                           ;	unspecified, using default values
  4001   200005                     	org	2097157
  4002   200005  FF                 	db	255
  4003                           
  4004                           ;Config register IDLOC6 @ 0x200006
  4005                           ;	unspecified, using default values
  4006   200006                     	org	2097158
  4007   200006  FF                 	db	255
  4008                           
  4009                           ;Config register IDLOC7 @ 0x200007
  4010                           ;	unspecified, using default values
  4011   200007                     	org	2097159
  4012   200007  FF                 	db	255
  4013                           
  4014                           	psect	config
  4015                           
  4016                           ; Padding undefined space
  4017   300000                     	org	3145728
  4018   300000  FF                 	db	255
  4019                           
  4020                           ;Config register CONFIG1H @ 0x300001
  4021                           ;	Oscillator Selection bits
  4022                           ;	FOSC = INTIO67, Internal oscillator block
  4023                           ;	4X PLL Enable
  4024                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4025                           ;	Primary clock enable bit
  4026                           ;	PRICLKEN = ON, Primary clock enabled
  4027                           ;	Fail-Safe Clock Monitor Enable bit
  4028                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4029                           ;	Internal/External Oscillator Switchover bit
  4030                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4031   300001                     	org	3145729
  4032   300001  38                 	db	56
  4033                           
  4034                           ;Config register CONFIG2L @ 0x300002
  4035                           ;	Power-up Timer Enable bit
  4036                           ;	PWRTEN = OFF, Power up timer disabled
  4037                           ;	Brown-out Reset Enable bits
  4038                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4039                           ;	Brown Out Reset Voltage bits
  4040                           ;	BORV = 250, VBOR set to 2.50 V nominal
  4041   300002                     	org	3145730
  4042   300002  0F                 	db	15
  4043                           
  4044                           ;Config register CONFIG2H @ 0x300003
  4045                           ;	Watchdog Timer Enable bits
  4046                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4047                           ;	Watchdog Timer Postscale Select bits
  4048                           ;	WDTPS = 32768, 1:32768
  4049   300003                     	org	3145731
  4050   300003  3C                 	db	60
  4051                           
  4052                           ; Padding undefined space
  4053   300004                     	org	3145732
  4054   300004  FF                 	db	255
  4055                           
  4056                           ;Config register CONFIG3H @ 0x300005
  4057                           ;	CCP2 MUX bit
  4058                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4059                           ;	PORTB A/D Enable bit
  4060                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4061                           ;	P3A/CCP3 Mux bit
  4062                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4063                           ;	HFINTOSC Fast Start-up
  4064                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4065                           ;	Timer3 Clock input mux bit
  4066                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4067                           ;	ECCP2 B output mux bit
  4068                           ;	P2BMX = PORTB5, P2B is on RB5
  4069                           ;	MCLR Pin Enable bit
  4070                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4071   300005                     	org	3145733
  4072   300005  BF                 	db	191
  4073                           
  4074                           ;Config register CONFIG4L @ 0x300006
  4075                           ;	Stack Full/Underflow Reset Enable bit
  4076                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4077                           ;	Single-Supply ICSP Enable bit
  4078                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4079                           ;	Extended Instruction Set Enable bit
  4080                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4081                           ;	Background Debug
  4082                           ;	DEBUG = 0x1, unprogrammed default
  4083   300006                     	org	3145734
  4084   300006  85                 	db	133
  4085                           
  4086                           ; Padding undefined space
  4087   300007                     	org	3145735
  4088   300007  FF                 	db	255
  4089                           
  4090                           ;Config register CONFIG5L @ 0x300008
  4091                           ;	Code Protection Block 0
  4092                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4093                           ;	Code Protection Block 1
  4094                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4095                           ;	Code Protection Block 2
  4096                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4097                           ;	Code Protection Block 3
  4098                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4099   300008                     	org	3145736
  4100   300008  0F                 	db	15
  4101                           
  4102                           ;Config register CONFIG5H @ 0x300009
  4103                           ;	Boot Block Code Protection bit
  4104                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4105                           ;	Data EEPROM Code Protection bit
  4106                           ;	CPD = OFF, Data EEPROM not code-protected
  4107   300009                     	org	3145737
  4108   300009  C0                 	db	192
  4109                           
  4110                           ;Config register CONFIG6L @ 0x30000A
  4111                           ;	Write Protection Block 0
  4112                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4113                           ;	Write Protection Block 1
  4114                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4115                           ;	Write Protection Block 2
  4116                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4117                           ;	Write Protection Block 3
  4118                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4119   30000A                     	org	3145738
  4120   30000A  0F                 	db	15
  4121                           
  4122                           ;Config register CONFIG6H @ 0x30000B
  4123                           ;	Configuration Register Write Protection bit
  4124                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4125                           ;	Boot Block Write Protection bit
  4126                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4127                           ;	Data EEPROM Write Protection bit
  4128                           ;	WRTD = OFF, Data EEPROM not write-protected
  4129   30000B                     	org	3145739
  4130   30000B  E0                 	db	224
  4131                           
  4132                           ;Config register CONFIG7L @ 0x30000C
  4133                           ;	Table Read Protection Block 0
  4134                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4135                           ;	Table Read Protection Block 1
  4136                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4137                           ;	Table Read Protection Block 2
  4138                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4139                           ;	Table Read Protection Block 3
  4140                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4141   30000C                     	org	3145740
  4142   30000C  0F                 	db	15
  4143                           
  4144                           ;Config register CONFIG7H @ 0x30000D
  4145                           ;	Boot Block Table Read Protection bit
  4146                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4147   30000D                     	org	3145741
  4148   30000D  40                 	db	64
  4149                           tosu	equ	0xFFF
  4150                           tosh	equ	0xFFE
  4151                           tosl	equ	0xFFD
  4152                           stkptr	equ	0xFFC
  4153                           pclatu	equ	0xFFB
  4154                           pclath	equ	0xFFA
  4155                           pcl	equ	0xFF9
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           prodh	equ	0xFF4
  4161                           prodl	equ	0xFF3
  4162                           indf0	equ	0xFEF
  4163                           postinc0	equ	0xFEE
  4164                           postdec0	equ	0xFED
  4165                           preinc0	equ	0xFEC
  4166                           plusw0	equ	0xFEB
  4167                           fsr0h	equ	0xFEA
  4168                           fsr0l	equ	0xFE9
  4169                           wreg	equ	0xFE8
  4170                           indf1	equ	0xFE7
  4171                           postinc1	equ	0xFE6
  4172                           postdec1	equ	0xFE5
  4173                           preinc1	equ	0xFE4
  4174                           plusw1	equ	0xFE3
  4175                           fsr1h	equ	0xFE2
  4176                           fsr1l	equ	0xFE1
  4177                           bsr	equ	0xFE0
  4178                           indf2	equ	0xFDF
  4179                           postinc2	equ	0xFDE
  4180                           postdec2	equ	0xFDD
  4181                           preinc2	equ	0xFDC
  4182                           plusw2	equ	0xFDB
  4183                           fsr2h	equ	0xFDA
  4184                           fsr2l	equ	0xFD9
  4185                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        23
    BSS         14
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_startTimer
    _startUpcounter->_lcd_print
    _lcd_print->_LCD_Set_Cursor
    _LCD_CLR->_LCD_CMD
    _stopMessage->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C2_Send
    _display->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    7007
                                             21 COMRAM    10    10      0
                        _EEPROM_Read
                       _EEPROM_Write
                          _I2C2_Init
                           _LCD_Init
                           _blue_led
                            _display
                            _red_led
                         _startTimer
                     _startUpcounter
                          _stopTimer
 ---------------------------------------------------------------------------------
 (1) _startUpcounter                                       6     6      0    1856
                                             11 COMRAM     6     6      0
                            _LCD_CLR
                          _inttochar
                          _lcd_print
               _seven_segment_config
                        _stopMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            3     1      2     812
                                              8 COMRAM     3     1      2
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                          _inttochar (ARG)
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _LCD_CLR                                              0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _startTimer                                          11    11      0    1502
                                             10 COMRAM    11    11      0
                        _EEPROM_Read
                            ___awmod
                          _green_led
               _seven_segment_config
                        _stopMessage
                          _stopTimer
 ---------------------------------------------------------------------------------
 (1) _stopTimer                                            2     2      0       0
                                              0 COMRAM     2     2      0
                            _red_led
               _seven_segment_config
 ---------------------------------------------------------------------------------
 (2) _seven_segment_config                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stopMessage                                          2     2      0     743
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _red_led
 ---------------------------------------------------------------------------------
 (2) _red_led                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     6     4      2     256
                                              4 COMRAM     6     4      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       1     1      0      90
                                              3 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       4     3      1     352
                                              4 COMRAM     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_Init                                             3     3      0     135
                                              4 COMRAM     3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (5) _LCD_Write_4Bit                                       1     1      0      60
                                              2 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (6) _IO_Expander_Write                                    1     1      0      30
                                              1 COMRAM     1     1      0
                          _I2C2_Send
                         _I2C2_Start
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_Send                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _green_led                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display                                             12     8      4    2466
                                              5 COMRAM    12     8      4
                        _EEPROM_Read
                       _EEPROM_Write
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     728
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _blue_led                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_Write
   _I2C2_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C2_Send
       _I2C2_Start
       _I2C2_Stop
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _blue_led
   _display
     _EEPROM_Read
     _EEPROM_Write
     ___lwmod
   _red_led
   _startTimer
     _EEPROM_Read
     ___awmod
     _green_led
     _seven_segment_config
     _stopMessage
       _LCD_Init
       _LCD_Set_Cursor
         _LCD_CMD
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Write_4Bit
       _red_led
     _stopTimer
       _red_led
       _seven_segment_config
   _startUpcounter
     _LCD_CLR
       _LCD_CMD
     _inttochar
     _lcd_print
       _LCD_Set_Cursor
       _LCD_Write_Char
       _inttochar (ARG)
     _seven_segment_config
     _stopMessage
   _stopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      45       1       72.6%
BITBIGSFRllhl       30      0       0      26        0.0%
BITBIGSFRhhhll      29      0       0      17        0.0%
BITBIGSFRhhhlh      1E      0       0      16        0.0%
BITBIGSFRllhh       11      0       0      25        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRhhllll      6      0       0      21        0.0%
BITBIGSFRlh          6      0       0      24        0.0%
BITBIGSFRhhllll      6      0       0      22        0.0%
BITBIGSFRhhlllh      5      0       0      20        0.0%
BITBIGSFRhhllhl      2      0       0      19        0.0%
BITBIGSFRhhllhh      1      0       0      18        0.0%
BITBIGSFRhl          1      0       0      23        0.0%
BITBIGSFRlll         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      28        0.0%
DATA                 0      0      45      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 11 01:58:11 2023

                          l81 1020                            l90 13C8                            l84 13E2  
                          l93 13AE                            l87 1394                            l99 12B0  
                          u10 1466                            u11 1462                            u20 13F8  
                          u21 13F4                            u30 1452                            u31 144E  
                          _RS 0044          _seven_segment_config 14A8                           l123 1478  
                         l132 14A0                           l204 07B0                           l108 11F6  
                         l206 07D8                           l310 13FC                           l126 1490  
                         l223 09BC                           l207 0800                           l135 14A8  
                         l208 0828                           l129 1498                           l170 0D06  
                         l226 14A6                           l307 13EA                           l171 0D22  
                         l236 0DE8                           l309 13F8                           l173 0D28  
                         l229 1440                           l182 103E                           l238 0E78  
                         l191 134E                           l192 1350                           l280 1468  
                         l176 12EA                           l274 1414                           l186 10DC  
                         l195 1488                           l291 1452                           l179 1374  
                         l292 1454                           l189 1340                           l277 1458  
                         l279 1466                           l289 1444                           l563 118C  
                         l820 1252                           l827 125A                           _DEL 0039  
                         l992 1456                           l994 13E6                           l996 1442  
                         l998 13CC                           u700 12B0                           u701 12AC  
                         u710 134E                           u711 134A                           u800 123E  
                         u720 10F0                           u801 123A                           u721 10EC  
                         u730 110A                           u810 0A3A                           u731 1106  
                         u811 0A36                           u740 1124                           u900 0C3E  
                         u820 0A72                           u741 1120                           u901 0C3A  
                         u821 0A6E                           u750 1142                           u910 0C50  
                         u830 0AC6                           u751 113E                           u911 0C4C  
                         u831 0AC2                           u760 1158                           u920 0C62  
                         u840 0AE4                           u761 1154                           u921 0C5E  
                         u841 0AE0                           u770 117C                           u930 0C7A  
                         u850 0AF6                           u771 1178                           u931 0C76  
                         u851 0AF2                           u780 120A                           u940 0C8C  
                         u860 0B08                           u781 1206                           u941 0C88  
                         u861 0B04                           u790 1228                           u950 0C9E  
                         u870 0B1A                           u791 1224                           u951 0C9A  
                         u871 0B16                           u960 0CB6                           u880 0BEC  
                         u961 0CB2                           u881 0BE8                           u970 0CC8  
                         u890 0C12                           u971 0CC4                           u891 0C0E  
                         u980 0CDA                           u981 0CD6                           u990 0CF2  
                         u991 0CEE                  ___awmod@sign 0006                           wreg 0FE8  
             __end_of_LCD_CMD 13CA               __end_of_LCD_CLR 147A              _segment_with_dot 0020  
         LCD_Write_String@Str 0005                _LCD_Set_Cursor 118E                          l1000 13D0  
                        l1002 13D6                          l1010 1384                          l1004 13DE  
                        l1012 138C                          l1020 1398                          l1100 12BC  
                        l1006 1378                          l1014 13B2                          l1030 0F38  
                        l1022 139C                          l1102 12C0                          l2000 0608  
                        l1008 137C                          l1016 13B6                          l1040 0F98  
                        l1032 0F56                          l1024 13A4                          l1104 12D0  
                        l2010 0634                          l2002 0614                          l1018 13BE  
                        l1050 1002                          l1042 0FA8                          l1034 0F66  
                        l1026 0F2E                          l1106 12E8                          l2100 0916  
                        l2020 066E                          l2004 061C                          l1044 0FC6  
                        l1036 0F7C                          l1028 0F32                          l2110 0954  
                        l2102 092A                          l2030 06C8                          l2022 067E  
                        l2006 0624                          l1046 0FCC                          l1038 0F82  
                        l2104 092E                          l2040 074C                          l2032 06F0  
                        l2024 0680                          l2016 063C                          l2008 062C  
                        l1048 0FEA                          l1080 1470                          l2200 0E40  
                        l1090 1484                          l2106 093C                          l2114 0962  
                        l2050 07B2                          l2042 075C                          l2034 0700  
                        l2026 06A6                          l2018 065E                          l1082 1492  
                        l2210 0E86                          l2202 0E48                          l2130 0D32  
                        l1092 1486                          l1084 147C                          l2108 0950  
                        l2116 099E                          l2060 07FA                          l2052 07C2  
                        l2044 075E                          l2036 0710                          l2028 06C6  
                        l1076 148A                          l2220 0EB2                          l2212 0E88  
                        l2204 0E50                          l2140 0D3E                          l2132 0D34  
                        l1502 13FE                          l1086 1480                          l2118 09B4  
                        l2310 0978                          l2070 083A                          l2062 0802  
                        l2054 07D2                          l2046 0760                          l2038 0712  
                        l1078 146A                          l2230 0ED4                          l2222 0EBA  
                        l2214 0E88                          l2206 0E68                          l2150 0D48  
                        l2142 0D40                          l2134 0D36                          l1504 1408  
                        l1088 1482                          l2080 0890                          l2072 084A  
                        l2064 0812                          l2056 07DA                          l2048 0786  
                        l1096 12B2                          l2240 0F0A                          l2232 0ED8  
                        l2224 0EBA                          l2216 0E9A                          l2208 0E70  
                        l2160 0D58                          l2152 0D4A                          l2144 0D42  
                        l2136 0D38                          l2128 0D2A                          l2090 08DE  
                        l2082 08A6                          l2066 0822                          l2058 07EA  
                        l2306 11D8                          l1098 12B6                          l2242 0F0E  
                        l2234 0EEA                          l2218 0E9A                          l2226 0EC2  
                        l2170 0DB6                          l2162 0D5C                          l2154 0D4C  
                        l2146 0D44                          l2138 0D3C                          l1196 149A  
                        l2092 08E2                          l2084 08B8                          l2308 0866  
                        l2068 082A                          l2076 0850                          l2244 0F22  
                        l2236 0EF2                          l2228 0EC2                          l2180 0DC6  
                        l2172 0DBE                          l2164 0D6A                          l2156 0D4E  
                        l2148 0D46                          l2094 08F0                          l2078 088C  
                        l2238 0F0A                          l2190 0DF6                          l2182 0DD4  
                        l2174 0DC6                          l2166 0D7C                          l2158 0D52  
                        l2096 0904                          l2088 08CA                          l1800 116C  
                        l1720 1190                          l1712 125C                          l2192 0DF8  
                        l2184 0DD6                          l2176 0DC6                          l2168 0DAE  
                        l1810 120A                          l2098 0908                          l1802 117C  
                        l1722 1194                          l1730 11C4                          l1714 1268  
                        l2194 0E00                          l2186 0DDA                          l2178 0DC6  
                        l1820 1246                          l1812 1212                          l1804 1184  
                        l1724 11A0                          l1716 1284                          l1740 135C  
                        l1900 0B8E                          l2196 0E12                          l2188 0DE2  
                        l1822 124C                          l1814 121A                          l1726 11AC  
                        l1718 1288                          l1742 1366                          l1910 0BC2  
                        l1902 0B9E                          l1830 09EA                          l1750 1430  
                        l2198 0E2A                          l1760 1330                          l1752 1324  
                        l1816 1228                          l1808 11F8                          l1728 11B8  
                        l1744 1372                          l1736 1352                          l1920 0BF2  
                        l1912 0BC4                          l1904 0BA0                          l1840 0A12  
                        l1832 09EC                          l1824 09BE                          l1770 133E  
                        l1762 1332                          l1754 1328                          l1818 123E  
                        l1738 1356                          l1930 0C24                          l1922 0C02  
                        l1914 0BC6                          l1906 0BA2                          l1850 0A56  
                        l1842 0A1E                          l1834 09EE                          l1826 09E6  
                        l1746 14A2                          l1764 1334                          l1756 132C  
                        l1780 10FC                          l1772 10DE                          l1932 0C3E  
                        l1916 0BEC                          l1924 0C04                          l1908 0BB2  
                        l1940 0C7A                          l1860 0AD2                          l1852 0A72  
                        l1844 0A3A                          l1836 09FC                          l1828 09E8  
                        l1766 1338                          l1758 132E                          l1790 1134  
                        l1782 110A                          l1774 10E2                          l1950 0CC8  
                        l1942 0C8C                          l1934 0C50                          l1926 0C12  
                        l1918 0BEE                          l1862 0AE4                          l1870 0B26  
                        l1854 0A7E                          l1846 0A46                          l1838 0A0E  
                        l1768 133C                          l1792 1142                          l1784 1112  
                        l1776 10F0                          l1960 0D08                          l1952 0CDE  
                        l1944 0CA2                          l1936 0C66                          l1928 0C1E  
                        l1880 0B34                          l1864 0AF6                          l1856 0A9E  
                        l1848 0A52                          l1794 1158                          l1786 1124  
                        l1778 10F8                          l1962 0D1A                          l1890 0B5A  
                        l1882 0B36                          l1866 0B08                          l1858 0AC6  
                        l1938 0C6C                          l1946 0CA8                          l1954 0CE4  
                        l1970 102A                          l1796 1160                          l1788 112C  
                        l1964 0D24                          l1956 0CF2                          l1948 0CB6  
                        l1892 0B6A                          l1884 0B46                          l1876 0B2E  
                        l1868 0B1A                          l1980 1048                          l1798 1166  
                        l1894 0B7A                          l1886 0B56                          l1878 0B32  
                        l1958 0CF8                          l1990 1090                          l1982 1052  
                        l1974 1040                          l1966 1022                          l1896 0B7C  
                        l1888 0B58                          l1992 10A8                          l1984 1068  
                        l1968 1026                          l1898 0B7E                          l1994 10C2  
                        l1986 1076                          l1988 107A                          l1996 10D4  
                        l1998 10D8                          STR_1 0601                          u1000 0D06  
                        u1001 0D02                          u1010 0D1A                          u1011 0D16  
                        u1020 103A                          u1021 1036                          u1110 072A  
                        u1030 1090                          u1111 0722                          u1031 108C  
                        u1200 092A                          u1040 10D4                          u1201 0926  
                        u1041 10D0                          u1210 0950                          u1130 0786  
                        u1050 0652                          u1211 094C                          u1131 0782  
                        u1051 064A                          u1220 09B4                          u1140 07AC  
                        u1108 06E2                          u1300 0ED4                          u1221 09B0  
                        u1141 07A8                          u1301 0ED0                          u1150 08A6  
                        u1070 0698                          u1310 0EEA                          u1230 0D7C  
                        u1151 08A2                          u1071 0690                          u1311 0EE6  
                        u1231 0D78                          u1160 08B8                          u1128 072C  
                        u1240 0DD4                          u1161 08B4                          u1241 0DD0  
                        u1170 08C6                          u1090 06E0                          u1250 0DF6  
                        u1171 08C2                          u1091 06D8                          u1251 0DF2  
                        u1180 08DE                          u1068 0654                          u1260 0E12  
                        u1181 08DA                          u1261 0E0E                          u1190 0904  
                        u1270 0E40                          u1191 0900                          u1407 0BF8  
                        u1271 0E3C                          u1327 0E1C                          u1088 069A  
                        u1280 0E86                          u1417 12DA                          u1337 109A  
                        u1281 0E82                          u1290 0E9A                          u1507 1012  
                        u1427 0F42                          u1347 10B4                          u1291 0E96  
                 _stopMessage 1352                          u1517 138E                          u1437 0F5C  
                        u1357 1472                          u1527 0674                          u1447 0F72  
                        u1367 0B4C                          u1537 06BC                          u1457 0F88  
                        u1377 0B70                          u1547 0706                          u1467 0F9E  
                        u1387 0B94                          u1557 0752                          u1477 0FB8  
                        u1397 0BB8                          u1567 07C8                          u1487 0FD6  
                        u1577 07F0                          u1497 0FF4                          u1587 0818  
                        u1597 0840             ?_LCD_Write_String 0005                          _main 0D2A  
                        indf2 0FDF                          fsr1l 0FE1                          fsr2l 0FD9  
                        start 0000            ??_LCD_Write_String 0007                  ___param_bank 0000  
        LCD_Write_4Bit@Nibble 0003          __end_of_EEPROM_Write 1352              __end_of_LCD_Init 1022  
       ?_seven_segment_config 0001             __end_of_I2C2_Init 1416                         ?_main 0001  
           __end_of_I2C2_Send 13FE                         _EEADR 0FA9       display@hour_first_digit 000E  
             __end_of___awmod 118E             __end_of_I2C2_Stop 1456               __end_of___lwmod 125C  
                       _PORTB 0F81                  lcd_print@col 0009        __end_of_LCD_Set_Cursor 11F8  
                lcd_print@row 000B               __end_of_display 09BE               __end_of_red_led 1492  
      _display_function_count 0037                         tablat 0FF5                         status 0FD8  
            EEPROM_Write@data 0001                _LCD_Write_4Bit 1376                  ??_I2C2_Start 0001  
              _LCD_Write_Char 1396               __initialization 12EC                  __end_of_main 0F2C  
           _IO_Expander_Write 13CA            ?_IO_Expander_Write 0001                        ??_main 0016  
               __activetblptr 0002                     ??_LCD_CMD 0004                     ??_LCD_CLR 0005  
         ??_IO_Expander_Write 0002               ?_LCD_Set_Cursor 0005                _startUpcounter 1022  
                      _EEDATA 0FA8                        _EECON2 0FA7            __end_of_I2C2_Start 146A  
                      _OSCCON 0FD3        __end_of_LCD_Write_4Bit 1396        __end_of_LCD_Write_Char 13B0  
               lcd_print@Data 000A              __end_of_blue_led 14A2     __end_of_IO_Expander_Write 13E4  
                   ??___awmod 0005                 display@update 0008                     ??___lwmod 0005  
          _minute_first_digit 003D        ??_seven_segment_config 0001                        clear_0 1312  
             ___awmod@divisor 0003                        isa$std 0001               ___awmod@counter 0005  
                   ??_display 000A                  __pdataCOMRAM 0020                     ??_red_led 0001  
              _segmentCounter 0043                  __mediumconst 0000        __end_of_startUpcounter 10DE  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
               main@stop_flag 001A                    __accesstop 0060       __end_of__initialization 1318  
                   ?_LCD_Init 0001               ?_LCD_Write_4Bit 0001                 ___rparam_used 0001  
             ?_LCD_Write_Char 0001                __pcstackCOMRAM 0001     startTimer@hour_first_flag 000C  
             ?_startUpcounter 0001                  ?_stopMessage 0001                  _EEPROM_Write 1322  
              main@isEditMode 001C                    ??_LCD_Init 0005                    __pnvCOMRAM 0045  
                     _LCD_CMD 13B0                       _LCD_CLR 146A                     _I2C2_Init 13FE  
                   _I2C2_Send 13E4                     _I2C2_Stop 1442                       _OSCTUNE 0F9B  
                     _SSP2ADD 0F6E                       _SSP2BUF 0F6F                     ?_blue_led 0001  
startTimer@minute_second_flag 0010              startTimer@timeUp 0012                       _i2c_add 0045  
    display@hour_second_digit 000F                       __Hparam 0000                       __Lparam 0000  
           __end_of_lcd_print 1442                       ___awmod 10DE                       ___lwmod 11F8  
                __psmallconst 0600                       __pcinit 12EC                       __ramtop 0600  
           __end_of_green_led 149A              ??_LCD_Set_Cursor 0006                       __ptext0 0D2A  
                     __ptext1 1022                       __ptext2 142E                       __ptext3 14A2  
                     __ptext4 146A                       __ptext5 09BE                       __ptext6 12B2  
                     __ptext7 14A8                       __ptext8 1352                       __ptext9 148A  
                     _display 0608                       _red_led 148A              ___awmod@dividend 0001  
                  ?_I2C2_Init 0001                       _segment 002B                    ?_I2C2_Send 0001  
                  ?_I2C2_Stop 0001                    ??_blue_led 0001             __end_of_inttochar 14A8  
        end_of_initialization 1318                 ??_EEPROM_Read 0001                 __Lmediumconst 0000  
                     postdec1 0FE5                       postinc0 0FEE             __end_of_stopTimer 12EC  
                   _PORTCbits 0F82     display@minute_first_digit 0010                    LCD_CMD@CMD 0004  
                   _TRISAbits 0F92                     _TRISBbits 0F93                     _TRISCbits 0F94  
            ??_LCD_Write_4Bit 0003                    _startTimer 09BE             LCD_Write_String@i 0009  
            ??_LCD_Write_Char 0004                    display@DEL 000C           __end_of_EEPROM_Read 148A  
            _LCD_Write_String 125C                 __pidataCOMRAM 1416             _hour_second_digit 003F  
            ??_startUpcounter 000C           start_initialization 12EC                   ??_I2C2_Init 0001  
                 ??_I2C2_Send 0001                   ??_I2C2_Stop 0001                      ?_LCD_CMD 0001  
                    ?_LCD_CLR 0001                   __pbssCOMRAM 0037   startTimer@minute_first_flag 000E  
         _minute_second_digit 003B                   ?_startTimer 0001                   _EEPROM_Read 147A  
    startUpcounter@displaypos 0010         IO_Expander_Write@Data 0002              _hour_first_digit 0041  
                    ?___awmod 0001               startTimer@RESET 0014                      ?___lwmod 0001  
                   _lcd_print 142E                inttochar@digit 0001                      ?_display 0006  
                 __smallconst 0600                      ?_red_led 0001                     _green_led 1492  
            main@shiftCounter 001E                      _LCD_Init 0F2C                      _LATAbits 0F89  
                    _LATCbits 0F8B                     _inttochar 14A2                      _PIR2bits 0FA1  
                    _PIR3bits 0FA4                    _I2C2_Start 1456                      _SSP2CON1 0F6C  
                    _SSP2STAT 0F6D                    ?_lcd_print 0009          main@EEPROM_Mem_check 0018  
                   _stopTimer 12B2                    ?_green_led 0001                     copy_data0 1300  
    __end_of_LCD_Write_String 12B2    display@minute_second_digit 0011                    ?_inttochar 0001  
                  _EECON1bits 0FA6                      __Hrparam 0000                      __Lrparam 0000  
     startUpcounter@actualpos 000E                    _ANSELBbits 0F39                    _ANSELCbits 0F3A  
                  ?_stopTimer 0001                      __ptext10 125C                      __ptext11 1396  
                    __ptext20 1492                      __ptext12 118E                      __ptext21 10DE  
                    __ptext13 0F2C                      __ptext22 0608                      __ptext14 13B0  
                    __ptext23 11F8                      __ptext15 1376                      __ptext24 1322  
                    __ptext16 13CA                      __ptext25 147A                      __ptext17 1442  
                    __ptext26 149A                      __ptext18 1456                      __ptext27 13FE  
                    __ptext19 13E4                      _blue_led 149A                 ??_stopMessage 000B  
               ?_EEPROM_Write 0001                  _SSP2CON2bits 0F6B  __end_of_seven_segment_config 14AA  
        display@buttonCounter 0006               _BackLight_State 0036                   ?_I2C2_Start 0001  
                    isa$xinst 0000                   ??_lcd_print 000B                    _INTCONbits 0FF2  
                 ??_green_led 0001            LCD_Write_Char@Data 0004                ??_EEPROM_Write 0002  
                ??_startTimer 000B              ___lwmod@dividend 0001                  ?_EEPROM_Read 0001  
                 ??_inttochar 0003           __end_of_stopMessage 1376            EEPROM_Read@address 0001  
             LCD_Init@I2C_Add 0007            __end_of_startTimer 0D2A               ___lwmod@divisor 0003  
               I2C2_Send@BYTE 0001                   ??_stopTimer 0001               ___lwmod@counter 0005  
           LCD_Set_Cursor@COL 0005             LCD_Set_Cursor@ROW 0008           EEPROM_Write@address 0002  
