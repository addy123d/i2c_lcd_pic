

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 12 06:20:14 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 06/04/2022 GMT
    47                           ; 
    48                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F25K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   00152E                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _segment_with_dot
    86   00152E  BF                 	db	191
    87   00152F  86                 	db	134
    88   001530  DB                 	db	219
    89   001531  CF                 	db	207
    90   001532  E6                 	db	230
    91   001533  ED                 	db	237
    92   001534  FD                 	db	253
    93   001535  87                 	db	135
    94   001536  FF                 	db	255
    95   001537  EF                 	db	239
    96   001538  00                 	db	0
    97                           
    98                           ;initializer for _segment
    99   001539  3F                 	db	63
   100   00153A  06                 	db	6
   101   00153B  5B                 	db	91
   102   00153C  4F                 	db	79
   103   00153D  66                 	db	102
   104   00153E  6D                 	db	109
   105   00153F  7D                 	db	125
   106   001540  07                 	db	7
   107   001541  7F                 	db	127
   108   001542  6F                 	db	111
   109   001543  00                 	db	0
   110                           
   111                           ;initializer for _BackLight_State
   112   001544  08                 	db	8
   113   000000                     _TRISBbits	set	3987
   114   000000                     _EECON2	set	4007
   115                           
   116                           	psect	nvCOMRAM
   117   000045                     __pnvCOMRAM:
   118                           	callstack 0
   119   000045                     _i2c_add:
   120                           	callstack 0
   121   000045                     	ds	1
   122   000000                     _ANSELBbits	set	3897
   123   000000                     _ANSELCbits	set	3898
   124   000000                     _PORTB	set	3969
   125   000000                     _LATAbits	set	3977
   126   000000                     _LATCbits	set	3979
   127   000000                     _TRISAbits	set	3986
   128   000000                     _TRISCbits	set	3988
   129   000000                     _OSCTUNE	set	3995
   130   000000                     _PIR2bits	set	4001
   131   000000                     _EECON1bits	set	4006
   132   000000                     _EEDATA	set	4008
   133   000000                     _EEADR	set	4009
   134   000000                     _PORTCbits	set	3970
   135   000000                     _OSCCON	set	4051
   136   000000                     _INTCONbits	set	4082
   137   000000                     _PIR3bits	set	4004
   138   000000                     _SSP2CON2bits	set	3947
   139   000000                     _SSP2CON1	set	3948
   140   000000                     _SSP2STAT	set	3949
   141   000000                     _SSP2BUF	set	3951
   142   000000                     _SSP2ADD	set	3950
   143                           
   144                           	psect	smallconst
   145   000600                     __psmallconst:
   146                           	callstack 0
   147   000600  00                 	db	0
   148   000601                     STR_1:
   149   000601  4F                 	db	79	;'O'
   150   000602  56                 	db	86	;'V'
   151   000603  45                 	db	69	;'E'
   152   000604  52                 	db	82	;'R'
   153   000605  00                 	db	0
   154   000606  00                 	db	0	; dummy byte at the end
   155   000000                     
   156                           ; #config settings
   157                           
   158                           	psect	cinit
   159   001428                     __pcinit:
   160                           	callstack 0
   161   001428                     start_initialization:
   162                           	callstack 0
   163   001428                     __initialization:
   164                           	callstack 0
   165                           
   166                           ; Initialize objects allocated to COMRAM (23 bytes)
   167                           ; load TBLPTR registers with __pidataCOMRAM
   168   001428  0E2E               	movlw	low __pidataCOMRAM
   169   00142A  6EF6               	movwf	tblptrl,c
   170   00142C  0E15               	movlw	high __pidataCOMRAM
   171   00142E  6EF7               	movwf	tblptrh,c
   172   001430  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   173   001432  6EF8               	movwf	tblptru,c
   174   001434  EE00  F020         	lfsr	0,__pdataCOMRAM
   175   001438  EE10 F017          	lfsr	1,23
   176   00143C                     copy_data0:
   177   00143C  0009               	tblrd		*+
   178   00143E  CFF5 FFEE          	movff	tablat,postinc0
   179   001442  50E5               	movf	postdec1,w,c
   180   001444  50E1               	movf	fsr1l,w,c
   181   001446  E1FA               	bnz	copy_data0
   182                           
   183                           ; Clear objects allocated to COMRAM (14 bytes)
   184   001448  EE00  F037         	lfsr	0,__pbssCOMRAM
   185   00144C  0E0E               	movlw	14
   186   00144E                     clear_0:
   187   00144E  6AEE               	clrf	postinc0,c
   188   001450  06E8               	decf	wreg,f,c
   189   001452  E1FD               	bnz	clear_0
   190   001454                     end_of_initialization:
   191                           	callstack 0
   192   001454                     __end_of__initialization:
   193                           	callstack 0
   194   001454  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195   001456  6EF8               	movwf	tblptru,c
   196   001458  0100               	movlb	0
   197   00145A  EFE6  F006         	goto	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMRAM
   200   000037                     __pbssCOMRAM:
   201                           	callstack 0
   202   000037                     _display_function_count:
   203                           	callstack 0
   204   000037                     	ds	2
   205   000039                     _DEL:
   206                           	callstack 0
   207   000039                     	ds	2
   208   00003B                     _minute_second_digit:
   209                           	callstack 0
   210   00003B                     	ds	2
   211   00003D                     _minute_first_digit:
   212                           	callstack 0
   213   00003D                     	ds	2
   214   00003F                     _hour_second_digit:
   215                           	callstack 0
   216   00003F                     	ds	2
   217   000041                     _hour_first_digit:
   218                           	callstack 0
   219   000041                     	ds	2
   220   000043                     _segmentCounter:
   221                           	callstack 0
   222   000043                     	ds	1
   223   000044                     _RS:
   224                           	callstack 0
   225   000044                     	ds	1
   226                           
   227                           	psect	dataCOMRAM
   228   000020                     __pdataCOMRAM:
   229                           	callstack 0
   230   000020                     _segment_with_dot:
   231                           	callstack 0
   232   000020                     	ds	11
   233   00002B                     _segment:
   234                           	callstack 0
   235   00002B                     	ds	11
   236   000036                     _BackLight_State:
   237                           	callstack 0
   238   000036                     	ds	1
   239                           
   240                           	psect	cstackCOMRAM
   241   000001                     __pcstackCOMRAM:
   242                           	callstack 0
   243   000001                     ??_stopTimer:
   244   000001                     ?___awmod:
   245                           	callstack 0
   246   000001                     ?___lwmod:
   247                           	callstack 0
   248   000001                     EEPROM_Write@data:
   249                           	callstack 0
   250   000001                     EEPROM_Read@address:
   251                           	callstack 0
   252   000001                     I2C2_Send@BYTE:
   253                           	callstack 0
   254   000001                     ___awmod@dividend:
   255                           	callstack 0
   256   000001                     ___lwmod@dividend:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x0
   260   000001                     	ds	1
   261   000002                     IO_Expander_Write@Data:
   262                           	callstack 0
   263   000002                     EEPROM_Write@address:
   264                           	callstack 0
   265   000002                     inttochar@digit:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x1
   269   000002                     	ds	1
   270   000003                     ??_EEPROM_Mem_Initialise:
   271   000003                     LCD_Write_4Bit@Nibble:
   272                           	callstack 0
   273   000003                     ___awmod@divisor:
   274                           	callstack 0
   275   000003                     ___lwmod@divisor:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279   000003                     	ds	1
   280   000004                     LCD_CMD@CMD:
   281                           	callstack 0
   282   000004                     LCD_Write_Char@Data:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x3
   286   000004                     	ds	1
   287   000005                     ??_LCD_Init:
   288   000005                     LCD_Set_Cursor@COL:
   289                           	callstack 0
   290   000005                     ___awmod@counter:
   291                           	callstack 0
   292   000005                     ___lwmod@counter:
   293                           	callstack 0
   294   000005                     LCD_Write_String@Str:
   295                           	callstack 0
   296   000005                     EEPROM_Mem_Initialise@EEPROM_Mem_check:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x4
   300   000005                     	ds	1
   301   000006                     ??_LCD_Set_Cursor:
   302   000006                     ___awmod@sign:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x5
   306   000006                     	ds	1
   307   000007                     ??_LCD_Write_String:
   308   000007                     LCD_Init@I2C_Add:
   309                           	callstack 0
   310   000007                     EEPROM_Mem_Initialise@eeprom_addr:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314   000007                     	ds	1
   315   000008                     LCD_Set_Cursor@ROW:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x7
   319   000008                     	ds	1
   320   000009                     lcd_print@col:
   321                           	callstack 0
   322   000009                     LCD_Write_String@i:
   323                           	callstack 0
   324   000009                     display@buttonCounter:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x8
   328   000009                     	ds	1
   329   00000A                     lcd_print@Data:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x9
   333   00000A                     	ds	1
   334   00000B                     ??_stopMessage:
   335   00000B                     lcd_print@row:
   336                           	callstack 0
   337   00000B                     display@update:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0xA
   341   00000B                     	ds	2
   342   00000D                     ??_startTimer:
   343   00000D                     ??_startUpcounter:
   344   00000D                     ??_display:
   345                           
   346                           ; 1 bytes @ 0xC
   347   00000D                     	ds	1
   348   00000E                     startTimer@hour_first_flag:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0xD
   352   00000E                     	ds	1
   353   00000F                     startUpcounter@actualpos:
   354                           	callstack 0
   355   00000F                     display@hour_f_digit:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xE
   359   00000F                     	ds	1
   360   000010                     startTimer@minute_first_flag:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xF
   364   000010                     	ds	1
   365   000011                     startUpcounter@displaypos:
   366                           	callstack 0
   367   000011                     display@hour_s_digit:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x10
   371   000011                     	ds	1
   372   000012                     startTimer@minute_second_flag:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x11
   376   000012                     	ds	1
   377   000013                     display@minute_f_digit:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x12
   381   000013                     	ds	1
   382   000014                     startTimer@timeUp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x13
   386   000014                     	ds	1
   387   000015                     display@minute_s_digit:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x14
   391   000015                     	ds	1
   392   000016                     startTimer@RESET:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x15
   396   000016                     	ds	2
   397   000018                     ??_main:
   398                           
   399                           ; 1 bytes @ 0x17
   400   000018                     	ds	2
   401   00001A                     main@stop_flag:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x19
   405   00001A                     	ds	2
   406   00001C                     main@isEditMode:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x1B
   410   00001C                     	ds	2
   411   00001E                     main@shiftCounter:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1D
   415   00001E                     	ds	2
   416                           
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 756 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  shiftCounter    2   29[COMRAM] unsigned int 
   427 ;;  updateFlag      2    0        unsigned int 
   428 ;;  isEditMode      2   27[COMRAM] unsigned int 
   429 ;;  stop_flag       2   25[COMRAM] unsigned int 
   430 ;;  transition_s    2    0        unsigned int 
   431 ;;  transition_e    2    0        unsigned int 
   432 ;;  minute_secon    1    0        unsigned char 
   433 ;;  minute_first    1    0        unsigned char 
   434 ;;  hour_second_    1    0        unsigned char 
   435 ;;  hour_first_d    1    0        unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   445 ;;      Params:         0       0       0       0       0       0       0
   446 ;;      Locals:         6       0       0       0       0       0       0
   447 ;;      Temps:          2       0       0       0       0       0       0
   448 ;;      Totals:         8       0       0       0       0       0       0
   449 ;;Total ram usage:        8 bytes
   450 ;; Hardware stack levels required when called: 7
   451 ;; This function calls:
   452 ;;		_EEPROM_Mem_Initialise
   453 ;;		_I2C2_Init
   454 ;;		_LCD_Init
   455 ;;		_blue_led
   456 ;;		_display
   457 ;;		_red_led
   458 ;;		_startTimer
   459 ;;		_startUpcounter
   460 ;;		_stopTimer
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text0
   467   000DCC                     __ptext0:
   468                           	callstack 0
   469   000DCC                     _main:
   470                           	callstack 24
   471   000DCC                     
   472                           ;main.c: 760:     OSCCON = 0x70;
   473   000DCC  0E70               	movlw	112
   474   000DCE  6ED3               	movwf	211,c	;volatile
   475                           
   476                           ;main.c: 761:     OSCTUNE = 0xC0;
   477   000DD0  0EC0               	movlw	192
   478   000DD2  6E9B               	movwf	155,c	;volatile
   479   000DD4                     
   480                           ;main.c: 764:     TRISCbits.TRISC0 = 1;
   481   000DD4  8094               	bsf	148,0,c	;volatile
   482   000DD6                     
   483                           ;main.c: 765:     TRISCbits.TRISC1 = 1;
   484   000DD6  8294               	bsf	148,1,c	;volatile
   485   000DD8                     
   486                           ;main.c: 766:     TRISCbits.TRISC2 = 1;
   487   000DD8  8494               	bsf	148,2,c	;volatile
   488   000DDA                     
   489                           ;main.c: 769:     ANSELCbits.ANSC2 = 0;
   490   000DDA  010F               	movlb	15	; () banked
   491   000DDC  953A               	bcf	58,2,b	;volatile
   492   000DDE                     
   493                           ; BSR set to: 15
   494                           ;main.c: 772:     TRISAbits.TRISA4 = 0;
   495   000DDE  9892               	bcf	146,4,c	;volatile
   496   000DE0                     
   497                           ; BSR set to: 15
   498                           ;main.c: 773:     TRISAbits.TRISA5 = 0;
   499   000DE0  9A92               	bcf	146,5,c	;volatile
   500   000DE2                     
   501                           ; BSR set to: 15
   502                           ;main.c: 774:     TRISAbits.TRISA6 = 0;
   503   000DE2  9C92               	bcf	146,6,c	;volatile
   504   000DE4                     
   505                           ; BSR set to: 15
   506                           ;main.c: 776:     TRISAbits.TRISA7 = 0;
   507   000DE4  9E92               	bcf	146,7,c	;volatile
   508   000DE6                     
   509                           ; BSR set to: 15
   510                           ;main.c: 777:     TRISCbits.TRISC3 = 0;
   511   000DE6  9694               	bcf	148,3,c	;volatile
   512   000DE8                     
   513                           ; BSR set to: 15
   514                           ;main.c: 780:     LATAbits.LATA4 = 1;
   515   000DE8  8889               	bsf	137,4,c	;volatile
   516   000DEA                     
   517                           ; BSR set to: 15
   518                           ;main.c: 781:     LATAbits.LATA5 = 1;
   519   000DEA  8A89               	bsf	137,5,c	;volatile
   520   000DEC                     
   521                           ; BSR set to: 15
   522                           ;main.c: 782:     LATAbits.LATA6 = 1;
   523   000DEC  8C89               	bsf	137,6,c	;volatile
   524   000DEE                     
   525                           ; BSR set to: 15
   526                           ;main.c: 784:     LATCbits.LATC3 = 0;
   527   000DEE  968B               	bcf	139,3,c	;volatile
   528   000DF0                     
   529                           ; BSR set to: 15
   530                           ;main.c: 787:     I2C2_Init();
   531   000DF0  EC8B  F00A         	call	_I2C2_Init	;wreg free
   532   000DF4                     
   533                           ;main.c: 789:     LCD_Init((0x38 << 1));
   534   000DF4  0E70               	movlw	112
   535   000DF6  ECC0  F007         	call	_LCD_Init
   536   000DFA                     
   537                           ;main.c: 792:     startUpcounter();
   538   000DFA  EC3B  F008         	call	_startUpcounter	;wreg free
   539   000DFE                     
   540                           ;main.c: 796:     EEPROM_Mem_Initialise();
   541   000DFE  ECF1  F008         	call	_EEPROM_Mem_Initialise	;wreg free
   542   000E02                     
   543                           ;main.c: 813:     unsigned int isEditMode = 0;
   544   000E02  0E00               	movlw	0
   545   000E04  6E1D               	movwf	(main@isEditMode+1)^0,c
   546   000E06  0E00               	movlw	0
   547   000E08  6E1C               	movwf	main@isEditMode^0,c
   548   000E0A                     
   549                           ;main.c: 814:     unsigned int shiftCounter = 1;
   550   000E0A  0E00               	movlw	0
   551   000E0C  6E1F               	movwf	(main@shiftCounter+1)^0,c
   552   000E0E  0E01               	movlw	1
   553   000E10  6E1E               	movwf	main@shiftCounter^0,c
   554   000E12                     
   555                           ;main.c: 815:     unsigned int stop_flag = 0;
   556   000E12  0E00               	movlw	0
   557   000E14  6E1B               	movwf	(main@stop_flag+1)^0,c
   558   000E16  0E00               	movlw	0
   559   000E18  6E1A               	movwf	main@stop_flag^0,c
   560   000E1A                     l2215:
   561                           
   562                           ;main.c: 822:     {;main.c: 823:         if (PORTCbits.RC0 == 0)
   563   000E1A  B082               	btfsc	130,0,c	;volatile
   564   000E1C  EF12  F007         	goto	u1161
   565   000E20  EF14  F007         	goto	u1160
   566   000E24                     u1161:
   567   000E24  EF1E  F007         	goto	l247
   568   000E28                     u1160:
   569   000E28                     
   570                           ;main.c: 824:         {;main.c: 825:             LATAbits.LATA7 = 1;
   571   000E28  8E89               	bsf	137,7,c	;volatile
   572   000E2A                     
   573                           ;main.c: 827:             isEditMode ^= 1;
   574   000E2A  0E01               	movlw	1
   575   000E2C  1A1C               	xorwf	main@isEditMode^0,f,c
   576   000E2E                     
   577                           ;main.c: 828:             stop_flag = 0;
   578   000E2E  0E00               	movlw	0
   579   000E30  6E1B               	movwf	(main@stop_flag+1)^0,c
   580   000E32  0E00               	movlw	0
   581   000E34  6E1A               	movwf	main@stop_flag^0,c
   582   000E36                     
   583                           ;main.c: 830:             LATAbits.LATA7 = 0;
   584   000E36  9E89               	bcf	137,7,c	;volatile
   585                           
   586                           ;main.c: 831:         }
   587   000E38  EF0D  F007         	goto	l2215
   588   000E3C                     l247:
   589   000E3C  B282               	btfsc	130,1,c	;volatile
   590   000E3E  EF23  F007         	goto	u1171
   591   000E42  EF25  F007         	goto	u1170
   592   000E46                     u1171:
   593   000E46  EF66  F007         	goto	l249
   594   000E4A                     u1170:
   595   000E4A                     
   596                           ;main.c: 833:         {;main.c: 834:             LATAbits.LATA7 = 1;
   597   000E4A  8E89               	bsf	137,7,c	;volatile
   598   000E4C                     
   599                           ;main.c: 837:             stop_flag = 0;
   600   000E4C  0E00               	movlw	0
   601   000E4E  6E1B               	movwf	(main@stop_flag+1)^0,c
   602   000E50  0E00               	movlw	0
   603   000E52  6E1A               	movwf	main@stop_flag^0,c
   604   000E54                     
   605                           ;main.c: 839:             if (isEditMode)
   606   000E54  501C               	movf	main@isEditMode^0,w,c
   607   000E56  101D               	iorwf	(main@isEditMode+1)^0,w,c
   608   000E58  B4D8               	btfsc	status,2,c
   609   000E5A  EF31  F007         	goto	u1181
   610   000E5E  EF33  F007         	goto	u1180
   611   000E62                     u1181:
   612   000E62  EF5E  F007         	goto	l2241
   613   000E66                     u1180:
   614   000E66                     
   615                           ;main.c: 840:             {;main.c: 842:                 _delay((unsigned long)((100)*(6
      +                          4000000/4000.0)));
   616   000E66  0E09               	movlw	9
   617   000E68  6E19               	movwf	(??_main+1)^0,c
   618   000E6A  0E1E               	movlw	30
   619   000E6C  6E18               	movwf	??_main^0,c
   620   000E6E  0EE4               	movlw	228
   621   000E70                     u1247:
   622   000E70  2EE8               	decfsz	wreg,f,c
   623   000E72  D7FE               	bra	u1247
   624   000E74  2E18               	decfsz	??_main^0,f,c
   625   000E76  D7FC               	bra	u1247
   626   000E78  2E19               	decfsz	(??_main+1)^0,f,c
   627   000E7A  D7FA               	bra	u1247
   628   000E7C  D000               	nop2	
   629   000E7E                     
   630                           ;main.c: 844:                 if (shiftCounter < 4)
   631   000E7E  501F               	movf	(main@shiftCounter+1)^0,w,c
   632   000E80  E107               	bnz	u1191
   633   000E82  0E04               	movlw	4
   634   000E84  5C1E               	subwf	main@shiftCounter^0,w,c
   635   000E86  B0D8               	btfsc	status,0,c
   636   000E88  EF48  F007         	goto	u1191
   637   000E8C  EF4A  F007         	goto	u1190
   638   000E90                     u1191:
   639   000E90  EF4E  F007         	goto	l2237
   640   000E94                     u1190:
   641   000E94                     
   642                           ;main.c: 845:                     shiftCounter++;
   643   000E94  4A1E               	infsnz	main@shiftCounter^0,f,c
   644   000E96  2A1F               	incf	(main@shiftCounter+1)^0,f,c
   645   000E98  EF52  F007         	goto	l2239
   646   000E9C                     l2237:
   647                           
   648                           ;main.c: 847:                     shiftCounter = 1;
   649   000E9C  0E00               	movlw	0
   650   000E9E  6E1F               	movwf	(main@shiftCounter+1)^0,c
   651   000EA0  0E01               	movlw	1
   652   000EA2  6E1E               	movwf	main@shiftCounter^0,c
   653   000EA4                     l2239:
   654                           
   655                           ;main.c: 849:                 display(shiftCounter, updateFlag);
   656   000EA4  C01E  F009         	movff	main@shiftCounter,display@buttonCounter
   657   000EA8  C01F  F00A         	movff	main@shiftCounter+1,display@buttonCounter+1
   658   000EAC  0E00               	movlw	0
   659   000EAE  6E0C               	movwf	(display@update+1)^0,c
   660   000EB0  0E00               	movlw	0
   661   000EB2  6E0B               	movwf	display@update^0,c
   662   000EB4  EC04  F003         	call	_display	;wreg free
   663                           
   664                           ;main.c: 850:             }
   665   000EB8  EF0D  F007         	goto	l2215
   666   000EBC                     l2241:
   667                           
   668                           ;main.c: 852:             {;main.c: 860:                 shiftCounter = 1;
   669   000EBC  0E00               	movlw	0
   670   000EBE  6E1F               	movwf	(main@shiftCounter+1)^0,c
   671   000EC0  0E01               	movlw	1
   672   000EC2  6E1E               	movwf	main@shiftCounter^0,c
   673   000EC4                     
   674                           ;main.c: 870:                 startTimer();
   675   000EC4  EC30  F005         	call	_startTimer	;wreg free
   676   000EC8  EF0D  F007         	goto	l2215
   677   000ECC                     l249:
   678   000ECC  B482               	btfsc	130,2,c	;volatile
   679   000ECE  EF6B  F007         	goto	u1201
   680   000ED2  EF6D  F007         	goto	u1200
   681   000ED6                     u1201:
   682   000ED6  EF8B  F007         	goto	l2261
   683   000EDA                     u1200:
   684   000EDA                     
   685                           ;main.c: 874:         {;main.c: 875:             LATAbits.LATA7 = 1;
   686   000EDA  8E89               	bsf	137,7,c	;volatile
   687   000EDC                     
   688                           ;main.c: 878:             if (isEditMode)
   689   000EDC  501C               	movf	main@isEditMode^0,w,c
   690   000EDE  101D               	iorwf	(main@isEditMode+1)^0,w,c
   691   000EE0  B4D8               	btfsc	status,2,c
   692   000EE2  EF75  F007         	goto	u1211
   693   000EE6  EF77  F007         	goto	u1210
   694   000EEA                     u1211:
   695   000EEA  EF83  F007         	goto	l2255
   696   000EEE                     u1210:
   697   000EEE                     
   698                           ;main.c: 881:                 display(shiftCounter, updateFlag);
   699   000EEE  C01E  F009         	movff	main@shiftCounter,display@buttonCounter
   700   000EF2  C01F  F00A         	movff	main@shiftCounter+1,display@buttonCounter+1
   701   000EF6  0E00               	movlw	0
   702   000EF8  6E0C               	movwf	(display@update+1)^0,c
   703   000EFA  0E01               	movlw	1
   704   000EFC  6E0B               	movwf	display@update^0,c
   705   000EFE  EC04  F003         	call	_display	;wreg free
   706                           
   707                           ;main.c: 882:             }
   708   000F02  EF0D  F007         	goto	l2215
   709   000F06                     l2255:
   710                           
   711                           ;main.c: 884:             {;main.c: 885:                 stop_flag = 1;
   712   000F06  0E00               	movlw	0
   713   000F08  6E1B               	movwf	(main@stop_flag+1)^0,c
   714   000F0A  0E01               	movlw	1
   715   000F0C  6E1A               	movwf	main@stop_flag^0,c
   716   000F0E                     
   717                           ;main.c: 889:                     stopTimer();
   718   000F0E  ECF7  F009         	call	_stopTimer	;wreg free
   719   000F12  EF0D  F007         	goto	l2215
   720   000F16                     l2261:
   721   000F16                     
   722                           ;main.c: 896:             if (isEditMode == 0)
   723   000F16  501C               	movf	main@isEditMode^0,w,c
   724   000F18  101D               	iorwf	(main@isEditMode+1)^0,w,c
   725   000F1A  A4D8               	btfss	status,2,c
   726   000F1C  EF92  F007         	goto	u1221
   727   000F20  EF94  F007         	goto	u1220
   728   000F24                     u1221:
   729   000F24  EFAF  F007         	goto	l2273
   730   000F28                     u1220:
   731   000F28                     
   732                           ;main.c: 897:             {;main.c: 898:                 red_led();
   733   000F28  ECD1  F00A         	call	_red_led	;wreg free
   734   000F2C                     
   735                           ;main.c: 900:                 if (stop_flag)
   736   000F2C  501A               	movf	main@stop_flag^0,w,c
   737   000F2E  101B               	iorwf	(main@stop_flag+1)^0,w,c
   738   000F30  B4D8               	btfsc	status,2,c
   739   000F32  EF9D  F007         	goto	u1231
   740   000F36  EF9F  F007         	goto	u1230
   741   000F3A                     u1231:
   742   000F3A  EFA3  F007         	goto	l2271
   743   000F3E                     u1230:
   744   000F3E                     
   745                           ;main.c: 901:                 {;main.c: 902:                     stopTimer();
   746   000F3E  ECF7  F009         	call	_stopTimer	;wreg free
   747                           
   748                           ;main.c: 903:                 }
   749   000F42  EFBB  F007         	goto	l2279
   750   000F46                     l2271:
   751                           
   752                           ;main.c: 905:                 {;main.c: 906:                     display(0, 0);
   753   000F46  0E00               	movlw	0
   754   000F48  6E0A               	movwf	(display@buttonCounter+1)^0,c
   755   000F4A  0E00               	movlw	0
   756   000F4C  6E09               	movwf	display@buttonCounter^0,c
   757   000F4E  0E00               	movlw	0
   758   000F50  6E0C               	movwf	(display@update+1)^0,c
   759   000F52  0E00               	movlw	0
   760   000F54  6E0B               	movwf	display@update^0,c
   761   000F56  EC04  F003         	call	_display	;wreg free
   762   000F5A  EFBB  F007         	goto	l2279
   763   000F5E                     l2273:
   764   000F5E                     
   765                           ;main.c: 912:                 blue_led();
   766   000F5E  ECD9  F00A         	call	_blue_led	;wreg free
   767   000F62                     
   768                           ;main.c: 913:                 display(shiftCounter, updateFlag);
   769   000F62  C01E  F009         	movff	main@shiftCounter,display@buttonCounter
   770   000F66  C01F  F00A         	movff	main@shiftCounter+1,display@buttonCounter+1
   771   000F6A  0E00               	movlw	0
   772   000F6C  6E0C               	movwf	(display@update+1)^0,c
   773   000F6E  0E00               	movlw	0
   774   000F70  6E0B               	movwf	display@update^0,c
   775   000F72  EC04  F003         	call	_display	;wreg free
   776   000F76                     l2279:
   777                           
   778                           ;main.c: 916:             LATAbits.LATA7 = 0;
   779   000F76  9E89               	bcf	137,7,c	;volatile
   780   000F78  EF0D  F007         	goto	l2215
   781   000F7C  EF00  F000         	goto	start
   782   000F80                     __end_of_main:
   783                           	callstack 0
   784                           
   785 ;; *************** function _startUpcounter *****************
   786 ;; Defined at:
   787 ;;		line 448 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  displaypos      2   16[COMRAM] unsigned int 
   792 ;;  actualpos       2   14[COMRAM] unsigned int 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   802 ;;      Params:         0       0       0       0       0       0       0
   803 ;;      Locals:         4       0       0       0       0       0       0
   804 ;;      Temps:          2       0       0       0       0       0       0
   805 ;;      Totals:         6       0       0       0       0       0       0
   806 ;;Total ram usage:        6 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 6
   809 ;; This function calls:
   810 ;;		_LCD_CLR
   811 ;;		_inttochar
   812 ;;		_lcd_print
   813 ;;		_seven_segment_config
   814 ;;		_stopMessage
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text1
   821   001076                     __ptext1:
   822                           	callstack 0
   823   001076                     _startUpcounter:
   824                           	callstack 24
   825   001076                     
   826                           ;main.c: 451:     seven_segment_config();
   827   001076  ECE0  F00A         	call	_seven_segment_config	;wreg free
   828   00107A                     
   829                           ;main.c: 452:     unsigned int displaypos, actualpos;;main.c: 454:     for (segmentCount
      +                          er = 0; segmentCounter < 10; segmentCounter++)
   830   00107A  0E00               	movlw	0
   831   00107C  6E43               	movwf	_segmentCounter^0,c
   832   00107E  0E09               	movlw	9
   833   001080  6443               	cpfsgt	_segmentCounter^0,c
   834   001082  EF45  F008         	goto	u981
   835   001086  EF47  F008         	goto	u980
   836   00108A                     u981:
   837   00108A  EF49  F008         	goto	l182
   838   00108E                     u980:
   839   00108E  EF94  F008         	goto	l2025
   840   001092                     l182:
   841                           
   842                           ;main.c: 455:     {;main.c: 456:         LATAbits.LATA7 = 1;
   843   001092  8E89               	bsf	137,7,c	;volatile
   844   001094                     
   845                           ;main.c: 458:         for (displaypos = 3; displaypos < 7; displaypos++)
   846   001094  0E00               	movlw	0
   847   001096  6E12               	movwf	(startUpcounter@displaypos+1)^0,c
   848   001098  0E03               	movlw	3
   849   00109A  6E11               	movwf	startUpcounter@displaypos^0,c
   850   00109C                     l2009:
   851                           
   852                           ;main.c: 459:         {;main.c: 460:             actualpos = displaypos * 2;
   853   00109C  90D8               	bcf	status,0,c
   854   00109E  3411               	rlcf	startUpcounter@displaypos^0,w,c
   855   0010A0  6E0F               	movwf	startUpcounter@actualpos^0,c
   856   0010A2  3412               	rlcf	(startUpcounter@displaypos+1)^0,w,c
   857   0010A4  6E10               	movwf	(startUpcounter@actualpos+1)^0,c
   858   0010A6                     
   859                           ;main.c: 462:             lcd_print(1, actualpos, inttochar(segmentCounter));
   860   0010A6  C00F  F009         	movff	startUpcounter@actualpos,lcd_print@col
   861   0010AA  C043  F002         	movff	_segmentCounter,inttochar@digit
   862   0010AE  6A03               	clrf	(inttochar@digit+1)^0,c
   863   0010B0  ECDD  F00A         	call	_inttochar	;wreg free
   864   0010B4  6E0A               	movwf	lcd_print@Data^0,c
   865   0010B6  0E01               	movlw	1
   866   0010B8  ECA3  F00A         	call	_lcd_print
   867   0010BC                     
   868                           ;main.c: 463:             lcd_print(1, actualpos + 1, '.');
   869   0010BC  280F               	incf	startUpcounter@actualpos^0,w,c
   870   0010BE  6E09               	movwf	lcd_print@col^0,c
   871   0010C0  0E2E               	movlw	46
   872   0010C2  6E0A               	movwf	lcd_print@Data^0,c
   873   0010C4  0E01               	movlw	1
   874   0010C6  ECA3  F00A         	call	_lcd_print
   875   0010CA                     
   876                           ;main.c: 464:         }
   877   0010CA  4A11               	infsnz	startUpcounter@displaypos^0,f,c
   878   0010CC  2A12               	incf	(startUpcounter@displaypos+1)^0,f,c
   879   0010CE  5012               	movf	(startUpcounter@displaypos+1)^0,w,c
   880   0010D0  E109               	bnz	u990
   881   0010D2  0E07               	movlw	7
   882   0010D4  5C11               	subwf	startUpcounter@displaypos^0,w,c
   883   0010D6  A0D8               	btfss	status,0,c
   884   0010D8  EF70  F008         	goto	u991
   885   0010DC  EF72  F008         	goto	u990
   886   0010E0                     u991:
   887   0010E0  EF4E  F008         	goto	l2009
   888   0010E4                     u990:
   889   0010E4                     
   890                           ;main.c: 465:         _delay((unsigned long)((500)*(64000000/4000.0)));
   891   0010E4  0E29               	movlw	41
   892   0010E6  6E0E               	movwf	(??_startUpcounter+1)^0,c
   893   0010E8  0E96               	movlw	150
   894   0010EA  6E0D               	movwf	??_startUpcounter^0,c
   895   0010EC  0E7F               	movlw	127
   896   0010EE                     u1257:
   897   0010EE  2EE8               	decfsz	wreg,f,c
   898   0010F0  D7FE               	bra	u1257
   899   0010F2  2E0D               	decfsz	??_startUpcounter^0,f,c
   900   0010F4  D7FC               	bra	u1257
   901   0010F6  2E0E               	decfsz	(??_startUpcounter+1)^0,f,c
   902   0010F8  D7FA               	bra	u1257
   903   0010FA  F000               	nop	
   904   0010FC                     
   905                           ;main.c: 467:         LATAbits.LATA7 = 0;
   906   0010FC  9E89               	bcf	137,7,c	;volatile
   907                           
   908                           ;main.c: 468:         _delay((unsigned long)((500)*(64000000/4000.0)));
   909   0010FE  0E29               	movlw	41
   910   001100  6E0E               	movwf	(??_startUpcounter+1)^0,c
   911   001102  0E96               	movlw	150
   912   001104  6E0D               	movwf	??_startUpcounter^0,c
   913   001106  0E7F               	movlw	127
   914   001108                     u1267:
   915   001108  2EE8               	decfsz	wreg,f,c
   916   00110A  D7FE               	bra	u1267
   917   00110C  2E0D               	decfsz	??_startUpcounter^0,f,c
   918   00110E  D7FC               	bra	u1267
   919   001110  2E0E               	decfsz	(??_startUpcounter+1)^0,f,c
   920   001112  D7FA               	bra	u1267
   921   001114  F000               	nop	
   922   001116                     
   923                           ;main.c: 469:     }
   924   001116  2A43               	incf	_segmentCounter^0,f,c
   925   001118  0E09               	movlw	9
   926   00111A  6443               	cpfsgt	_segmentCounter^0,c
   927   00111C  EF92  F008         	goto	u1001
   928   001120  EF94  F008         	goto	u1000
   929   001124                     u1001:
   930   001124  EF49  F008         	goto	l182
   931   001128                     u1000:
   932   001128                     l2025:
   933                           
   934                           ;main.c: 471:     LCD_CLR();
   935   001128  ECC1  F00A         	call	_LCD_CLR	;wreg free
   936   00112C                     
   937                           ;main.c: 473:     stopMessage();
   938   00112C  ECA0  F009         	call	_stopMessage	;wreg free
   939   001130  0012               	return		;funcret
   940   001132                     __end_of_startUpcounter:
   941                           	callstack 0
   942                           
   943 ;; *************** function _lcd_print *****************
   944 ;; Defined at:
   945 ;;		line 719 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  row             1    wreg     unsigned char 
   948 ;;  col             1    8[COMRAM] unsigned char 
   949 ;;  Data            1    9[COMRAM] unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  row             1   10[COMRAM] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   961 ;;      Params:         2       0       0       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0
   964 ;;      Totals:         3       0       0       0       0       0       0
   965 ;;Total ram usage:        3 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 5
   968 ;; This function calls:
   969 ;;		_LCD_Set_Cursor
   970 ;;		_LCD_Write_Char
   971 ;; This function is called by:
   972 ;;		_startUpcounter
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text2
   977   001546                     __ptext2:
   978                           	callstack 0
   979   001546                     _lcd_print:
   980                           	callstack 24
   981                           
   982                           ;incstack = 0
   983                           ;lcd_print@row stored from wreg
   984   001546  6E0B               	movwf	lcd_print@row^0,c
   985   001548                     
   986                           ;main.c: 719: void lcd_print(unsigned char row, unsigned char col, char Data);main.c: 72
      +                          0: {;main.c: 725:     LCD_Set_Cursor(row, col);
   987   001548  C009  F005         	movff	lcd_print@col,LCD_Set_Cursor@COL
   988   00154C  500B               	movf	lcd_print@row^0,w,c
   989   00154E  EC39  F009         	call	_LCD_Set_Cursor
   990                           
   991                           ;main.c: 726:     LCD_Write_Char(Data);
   992   001552  500A               	movf	lcd_print@Data^0,w,c
   993   001554  EC57  F00A         	call	_LCD_Write_Char
   994   001558  0012               	return		;funcret
   995   00155A                     __end_of_lcd_print:
   996                           	callstack 0
   997                           
   998 ;; *************** function _startTimer *****************
   999 ;; Defined at:
  1000 ;;		line 257 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  RESET           2   21[COMRAM] int 
  1005 ;;  timeUp          2   19[COMRAM] int 
  1006 ;;  minute_secon    2   17[COMRAM] int 
  1007 ;;  minute_first    2   15[COMRAM] int 
  1008 ;;  hour_first_f    2   13[COMRAM] int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1018 ;;      Params:         0       0       0       0       0       0       0
  1019 ;;      Locals:        10       0       0       0       0       0       0
  1020 ;;      Temps:          1       0       0       0       0       0       0
  1021 ;;      Totals:        11       0       0       0       0       0       0
  1022 ;;Total ram usage:       11 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 6
  1025 ;; This function calls:
  1026 ;;		_EEPROM_Read
  1027 ;;		___awmod
  1028 ;;		_green_led
  1029 ;;		_seven_segment_config
  1030 ;;		_stopMessage
  1031 ;;		_stopTimer
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text3
  1038   000A60                     __ptext3:
  1039                           	callstack 0
  1040   000A60                     _startTimer:
  1041                           	callstack 24
  1042   000A60                     
  1043                           ;main.c: 260:     int RESET = 0;
  1044   000A60  0E00               	movlw	0
  1045   000A62  6E17               	movwf	(startTimer@RESET+1)^0,c
  1046   000A64  0E00               	movlw	0
  1047   000A66  6E16               	movwf	startTimer@RESET^0,c
  1048                           
  1049                           ;main.c: 261:     int timeUp = 0;
  1050   000A68  0E00               	movlw	0
  1051   000A6A  6E15               	movwf	(startTimer@timeUp+1)^0,c
  1052   000A6C  0E00               	movlw	0
  1053   000A6E  6E14               	movwf	startTimer@timeUp^0,c
  1054                           
  1055                           ;main.c: 262:     int hour_first_flag = 0;
  1056   000A70  0E00               	movlw	0
  1057   000A72  6E0F               	movwf	(startTimer@hour_first_flag+1)^0,c
  1058   000A74  0E00               	movlw	0
  1059   000A76  6E0E               	movwf	startTimer@hour_first_flag^0,c
  1060                           
  1061                           ;main.c: 263:     int minute_first_flag = 0;
  1062   000A78  0E00               	movlw	0
  1063   000A7A  6E11               	movwf	(startTimer@minute_first_flag+1)^0,c
  1064   000A7C  0E00               	movlw	0
  1065   000A7E  6E10               	movwf	startTimer@minute_first_flag^0,c
  1066                           
  1067                           ;main.c: 264:     int minute_second_flag = 0;
  1068   000A80  0E00               	movlw	0
  1069   000A82  6E13               	movwf	(startTimer@minute_second_flag+1)^0,c
  1070   000A84  0E00               	movlw	0
  1071   000A86  6E12               	movwf	startTimer@minute_second_flag^0,c
  1072   000A88                     
  1073                           ;main.c: 267:     LATAbits.LATA0 = 0;
  1074   000A88  9089               	bcf	137,0,c	;volatile
  1075   000A8A                     
  1076                           ;main.c: 268:     LATAbits.LATA1 = 0;
  1077   000A8A  9289               	bcf	137,1,c	;volatile
  1078   000A8C                     
  1079                           ;main.c: 269:     LATAbits.LATA2 = 0;
  1080   000A8C  9489               	bcf	137,2,c	;volatile
  1081   000A8E                     
  1082                           ;main.c: 270:     LATAbits.LATA3 = 0;
  1083   000A8E  9689               	bcf	137,3,c	;volatile
  1084   000A90                     
  1085                           ;main.c: 273:     hour_first_digit = EEPROM_Read(0x0A);
  1086   000A90  0E0A               	movlw	10
  1087   000A92  ECC9  F00A         	call	_EEPROM_Read
  1088   000A96  6E0D               	movwf	??_startTimer^0,c
  1089   000A98  500D               	movf	??_startTimer^0,w,c
  1090   000A9A  6E41               	movwf	_hour_first_digit^0,c
  1091   000A9C  6A42               	clrf	(_hour_first_digit+1)^0,c
  1092   000A9E                     
  1093                           ;main.c: 274:     hour_second_digit = EEPROM_Read(0x0B);
  1094   000A9E  0E0B               	movlw	11
  1095   000AA0  ECC9  F00A         	call	_EEPROM_Read
  1096   000AA4  6E0D               	movwf	??_startTimer^0,c
  1097   000AA6  500D               	movf	??_startTimer^0,w,c
  1098   000AA8  6E3F               	movwf	_hour_second_digit^0,c
  1099   000AAA  6A40               	clrf	(_hour_second_digit+1)^0,c
  1100   000AAC  EFCD  F006         	goto	l1987
  1101   000AB0                     l1867:
  1102                           
  1103                           ;main.c: 277:     {;main.c: 278:         seven_segment_config();
  1104   000AB0  ECE0  F00A         	call	_seven_segment_config	;wreg free
  1105   000AB4                     
  1106                           ;main.c: 280:         hour_first_flag = hour_first_flag + 1;
  1107   000AB4  0E01               	movlw	1
  1108   000AB6  240E               	addwf	startTimer@hour_first_flag^0,w,c
  1109   000AB8  6E0E               	movwf	startTimer@hour_first_flag^0,c
  1110   000ABA  0E00               	movlw	0
  1111   000ABC  200F               	addwfc	(startTimer@hour_first_flag+1)^0,w,c
  1112   000ABE  6E0F               	movwf	(startTimer@hour_first_flag+1)^0,c
  1113   000AC0                     
  1114                           ;main.c: 282:         if (hour_first_flag > 1)
  1115   000AC0  BE0F               	btfsc	(startTimer@hour_first_flag+1)^0,7,c
  1116   000AC2  EF6C  F005         	goto	u771
  1117   000AC6  500F               	movf	(startTimer@hour_first_flag+1)^0,w,c
  1118   000AC8  E109               	bnz	u770
  1119   000ACA  0E02               	movlw	2
  1120   000ACC  5C0E               	subwf	startTimer@hour_first_flag^0,w,c
  1121   000ACE  A0D8               	btfss	status,0,c
  1122   000AD0  EF6C  F005         	goto	u771
  1123   000AD4  EF6E  F005         	goto	u770
  1124   000AD8                     u771:
  1125   000AD8  EFC3  F006         	goto	l1983
  1126   000ADC                     u770:
  1127   000ADC                     
  1128                           ;main.c: 283:             hour_second_digit = 9;
  1129   000ADC  0E00               	movlw	0
  1130   000ADE  6E40               	movwf	(_hour_second_digit+1)^0,c
  1131   000AE0  0E09               	movlw	9
  1132   000AE2  6E3F               	movwf	_hour_second_digit^0,c
  1133   000AE4  EFC3  F006         	goto	l1983
  1134   000AE8                     l1875:
  1135                           
  1136                           ;main.c: 286:         {;main.c: 288:             minute_first_flag = minute_first_flag +
      +                           1;
  1137   000AE8  0E01               	movlw	1
  1138   000AEA  2410               	addwf	startTimer@minute_first_flag^0,w,c
  1139   000AEC  6E10               	movwf	startTimer@minute_first_flag^0,c
  1140   000AEE  0E00               	movlw	0
  1141   000AF0  2011               	addwfc	(startTimer@minute_first_flag+1)^0,w,c
  1142   000AF2  6E11               	movwf	(startTimer@minute_first_flag+1)^0,c
  1143   000AF4                     
  1144                           ;main.c: 290:             seven_segment_config();
  1145   000AF4  ECE0  F00A         	call	_seven_segment_config	;wreg free
  1146   000AF8                     
  1147                           ;main.c: 292:             if (minute_first_flag > 1)
  1148   000AF8  BE11               	btfsc	(startTimer@minute_first_flag+1)^0,7,c
  1149   000AFA  EF88  F005         	goto	u781
  1150   000AFE  5011               	movf	(startTimer@minute_first_flag+1)^0,w,c
  1151   000B00  E109               	bnz	u780
  1152   000B02  0E02               	movlw	2
  1153   000B04  5C10               	subwf	startTimer@minute_first_flag^0,w,c
  1154   000B06  A0D8               	btfss	status,0,c
  1155   000B08  EF88  F005         	goto	u781
  1156   000B0C  EF8A  F005         	goto	u780
  1157   000B10                     u781:
  1158   000B10  EF90  F005         	goto	l1883
  1159   000B14                     u780:
  1160   000B14                     
  1161                           ;main.c: 293:             {;main.c: 294:                 minute_first_digit = 5;
  1162   000B14  0E00               	movlw	0
  1163   000B16  6E3E               	movwf	(_minute_first_digit+1)^0,c
  1164   000B18  0E05               	movlw	5
  1165   000B1A  6E3D               	movwf	_minute_first_digit^0,c
  1166                           
  1167                           ;main.c: 295:             }
  1168   000B1C  EFA5  F006         	goto	l1975
  1169   000B20                     l1883:
  1170                           
  1171                           ;main.c: 297:             {;main.c: 298:                 minute_first_digit = EEPROM_Rea
      +                          d(0x0C);
  1172   000B20  0E0C               	movlw	12
  1173   000B22  ECC9  F00A         	call	_EEPROM_Read
  1174   000B26  6E0D               	movwf	??_startTimer^0,c
  1175   000B28  500D               	movf	??_startTimer^0,w,c
  1176   000B2A  6E3D               	movwf	_minute_first_digit^0,c
  1177   000B2C  6A3E               	clrf	(_minute_first_digit+1)^0,c
  1178                           
  1179                           ;main.c: 299:                 minute_second_digit = EEPROM_Read(0x0D);
  1180   000B2E  0E0D               	movlw	13
  1181   000B30  ECC9  F00A         	call	_EEPROM_Read
  1182   000B34  6E0D               	movwf	??_startTimer^0,c
  1183   000B36  500D               	movf	??_startTimer^0,w,c
  1184   000B38  6E3B               	movwf	_minute_second_digit^0,c
  1185   000B3A  6A3C               	clrf	(_minute_second_digit+1)^0,c
  1186   000B3C  EFA5  F006         	goto	l1975
  1187   000B40                     l1885:
  1188                           
  1189                           ;main.c: 303:             {;main.c: 304:                 minute_second_flag = minute_sec
      +                          ond_flag + 1;
  1190   000B40  0E01               	movlw	1
  1191   000B42  2412               	addwf	startTimer@minute_second_flag^0,w,c
  1192   000B44  6E12               	movwf	startTimer@minute_second_flag^0,c
  1193   000B46  0E00               	movlw	0
  1194   000B48  2013               	addwfc	(startTimer@minute_second_flag+1)^0,w,c
  1195   000B4A  6E13               	movwf	(startTimer@minute_second_flag+1)^0,c
  1196                           
  1197                           ;main.c: 306:                 if (minute_second_flag > 1)
  1198   000B4C  BE13               	btfsc	(startTimer@minute_second_flag+1)^0,7,c
  1199   000B4E  EFB2  F005         	goto	u791
  1200   000B52  5013               	movf	(startTimer@minute_second_flag+1)^0,w,c
  1201   000B54  E109               	bnz	u790
  1202   000B56  0E02               	movlw	2
  1203   000B58  5C12               	subwf	startTimer@minute_second_flag^0,w,c
  1204   000B5A  A0D8               	btfss	status,0,c
  1205   000B5C  EFB2  F005         	goto	u791
  1206   000B60  EFB4  F005         	goto	u790
  1207   000B64                     u791:
  1208   000B64  EF87  F006         	goto	l1967
  1209   000B68                     u790:
  1210   000B68                     
  1211                           ;main.c: 307:                     minute_second_digit = 9;
  1212   000B68  0E00               	movlw	0
  1213   000B6A  6E3C               	movwf	(_minute_second_digit+1)^0,c
  1214   000B6C  0E09               	movlw	9
  1215   000B6E  6E3B               	movwf	_minute_second_digit^0,c
  1216   000B70  EF87  F006         	goto	l1967
  1217   000B74                     l1889:
  1218                           
  1219                           ;main.c: 311:                 {;main.c: 314:                     if ((hour_first_digit =
      +                          = 0) && (hour_second_digit == 0) && (minute_first_digit == 0) && (minute_second_digit ==
      +                           0))
  1220   000B74  5041               	movf	_hour_first_digit^0,w,c
  1221   000B76  1042               	iorwf	(_hour_first_digit+1)^0,w,c
  1222   000B78  A4D8               	btfss	status,2,c
  1223   000B7A  EFC1  F005         	goto	u801
  1224   000B7E  EFC3  F005         	goto	u800
  1225   000B82                     u801:
  1226   000B82  EFE4  F005         	goto	l1899
  1227   000B86                     u800:
  1228   000B86  503F               	movf	_hour_second_digit^0,w,c
  1229   000B88  1040               	iorwf	(_hour_second_digit+1)^0,w,c
  1230   000B8A  A4D8               	btfss	status,2,c
  1231   000B8C  EFCA  F005         	goto	u811
  1232   000B90  EFCC  F005         	goto	u810
  1233   000B94                     u811:
  1234   000B94  EFE4  F005         	goto	l1899
  1235   000B98                     u810:
  1236   000B98  503D               	movf	_minute_first_digit^0,w,c
  1237   000B9A  103E               	iorwf	(_minute_first_digit+1)^0,w,c
  1238   000B9C  A4D8               	btfss	status,2,c
  1239   000B9E  EFD3  F005         	goto	u821
  1240   000BA2  EFD5  F005         	goto	u820
  1241   000BA6                     u821:
  1242   000BA6  EFE4  F005         	goto	l1899
  1243   000BAA                     u820:
  1244   000BAA  503B               	movf	_minute_second_digit^0,w,c
  1245   000BAC  103C               	iorwf	(_minute_second_digit+1)^0,w,c
  1246   000BAE  A4D8               	btfss	status,2,c
  1247   000BB0  EFDC  F005         	goto	u831
  1248   000BB4  EFDE  F005         	goto	u830
  1249   000BB8                     u831:
  1250   000BB8  EFE4  F005         	goto	l1899
  1251   000BBC                     u830:
  1252   000BBC                     
  1253                           ;main.c: 315:                     {;main.c: 316:                         timeUp = 1;
  1254   000BBC  0E00               	movlw	0
  1255   000BBE  6E15               	movwf	(startTimer@timeUp+1)^0,c
  1256   000BC0  0E01               	movlw	1
  1257   000BC2  6E14               	movwf	startTimer@timeUp^0,c
  1258                           
  1259                           ;main.c: 317:                         break;
  1260   000BC4  EF8E  F006         	goto	l1969
  1261   000BC8                     l1899:
  1262                           
  1263                           ;main.c: 320:                     for (DEL = 4990; DEL > 0; DEL--)
  1264   000BC8  0E13               	movlw	19
  1265   000BCA  6E3A               	movwf	(_DEL+1)^0,c
  1266   000BCC  0E7E               	movlw	126
  1267   000BCE  6E39               	movwf	_DEL^0,c
  1268   000BD0                     l1905:
  1269                           
  1270                           ;main.c: 321:                     {;main.c: 323:                         green_led();
  1271   000BD0  ECD5  F00A         	call	_green_led	;wreg free
  1272   000BD4                     
  1273                           ;main.c: 324:                         LATCbits.LATC3 = 1;
  1274   000BD4  868B               	bsf	139,3,c	;volatile
  1275   000BD6                     
  1276                           ;main.c: 327:                         LATAbits.LATA0 = 1;
  1277   000BD6  8089               	bsf	137,0,c	;volatile
  1278   000BD8                     
  1279                           ;main.c: 328:                         PORTB = segment[hour_first_digit];
  1280   000BD8  0E2B               	movlw	low _segment
  1281   000BDA  2441               	addwf	_hour_first_digit^0,w,c
  1282   000BDC  6ED9               	movwf	fsr2l,c
  1283   000BDE  0E00               	movlw	high _segment
  1284   000BE0  2042               	addwfc	(_hour_first_digit+1)^0,w,c
  1285   000BE2  6EDA               	movwf	fsr2h,c
  1286   000BE4  50DF               	movf	indf2,w,c
  1287   000BE6  6E81               	movwf	129,c	;volatile
  1288   000BE8                     
  1289                           ;main.c: 329:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1290   000BE8  0E3F               	movlw	63
  1291   000BEA  6E0D               	movwf	??_startTimer^0,c
  1292   000BEC  0E55               	movlw	85
  1293   000BEE                     u1277:
  1294   000BEE  2EE8               	decfsz	wreg,f,c
  1295   000BF0  D7FE               	bra	u1277
  1296   000BF2  2E0D               	decfsz	??_startTimer^0,f,c
  1297   000BF4  D7FC               	bra	u1277
  1298   000BF6  F000               	nop	
  1299   000BF8                     
  1300                           ;main.c: 330:                         LATAbits.LATA0 = 0;
  1301   000BF8  9089               	bcf	137,0,c	;volatile
  1302   000BFA                     
  1303                           ;main.c: 334:                         LATAbits.LATA1 = 1;
  1304   000BFA  8289               	bsf	137,1,c	;volatile
  1305   000BFC                     
  1306                           ;main.c: 335:                         PORTB = segment[hour_second_digit];
  1307   000BFC  0E2B               	movlw	low _segment
  1308   000BFE  243F               	addwf	_hour_second_digit^0,w,c
  1309   000C00  6ED9               	movwf	fsr2l,c
  1310   000C02  0E00               	movlw	high _segment
  1311   000C04  2040               	addwfc	(_hour_second_digit+1)^0,w,c
  1312   000C06  6EDA               	movwf	fsr2h,c
  1313   000C08  50DF               	movf	indf2,w,c
  1314   000C0A  6E81               	movwf	129,c	;volatile
  1315   000C0C                     
  1316                           ;main.c: 336:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1317   000C0C  0E3F               	movlw	63
  1318   000C0E  6E0D               	movwf	??_startTimer^0,c
  1319   000C10  0E55               	movlw	85
  1320   000C12                     u1287:
  1321   000C12  2EE8               	decfsz	wreg,f,c
  1322   000C14  D7FE               	bra	u1287
  1323   000C16  2E0D               	decfsz	??_startTimer^0,f,c
  1324   000C18  D7FC               	bra	u1287
  1325   000C1A  F000               	nop	
  1326   000C1C                     
  1327                           ;main.c: 337:                         LATAbits.LATA1 = 0;
  1328   000C1C  9289               	bcf	137,1,c	;volatile
  1329   000C1E                     
  1330                           ;main.c: 341:                         LATAbits.LATA2 = 1;
  1331   000C1E  8489               	bsf	137,2,c	;volatile
  1332   000C20                     
  1333                           ;main.c: 342:                         PORTB = segment[minute_first_digit];
  1334   000C20  0E2B               	movlw	low _segment
  1335   000C22  243D               	addwf	_minute_first_digit^0,w,c
  1336   000C24  6ED9               	movwf	fsr2l,c
  1337   000C26  0E00               	movlw	high _segment
  1338   000C28  203E               	addwfc	(_minute_first_digit+1)^0,w,c
  1339   000C2A  6EDA               	movwf	fsr2h,c
  1340   000C2C  50DF               	movf	indf2,w,c
  1341   000C2E  6E81               	movwf	129,c	;volatile
  1342   000C30                     
  1343                           ;main.c: 343:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1344   000C30  0E3F               	movlw	63
  1345   000C32  6E0D               	movwf	??_startTimer^0,c
  1346   000C34  0E55               	movlw	85
  1347   000C36                     u1297:
  1348   000C36  2EE8               	decfsz	wreg,f,c
  1349   000C38  D7FE               	bra	u1297
  1350   000C3A  2E0D               	decfsz	??_startTimer^0,f,c
  1351   000C3C  D7FC               	bra	u1297
  1352   000C3E  F000               	nop	
  1353   000C40                     
  1354                           ;main.c: 344:                         LATAbits.LATA2 = 0;
  1355   000C40  9489               	bcf	137,2,c	;volatile
  1356   000C42                     
  1357                           ;main.c: 347:                         LATAbits.LATA3 = 1;
  1358   000C42  8689               	bsf	137,3,c	;volatile
  1359   000C44                     
  1360                           ;main.c: 348:                         PORTB = segment[minute_second_digit];
  1361   000C44  0E2B               	movlw	low _segment
  1362   000C46  243B               	addwf	_minute_second_digit^0,w,c
  1363   000C48  6ED9               	movwf	fsr2l,c
  1364   000C4A  0E00               	movlw	high _segment
  1365   000C4C  203C               	addwfc	(_minute_second_digit+1)^0,w,c
  1366   000C4E  6EDA               	movwf	fsr2h,c
  1367   000C50  50DF               	movf	indf2,w,c
  1368   000C52  6E81               	movwf	129,c	;volatile
  1369   000C54                     
  1370                           ;main.c: 349:                         _delay((unsigned long)((3)*(64000000/4000.0)));
  1371   000C54  0E3F               	movlw	63
  1372   000C56  6E0D               	movwf	??_startTimer^0,c
  1373   000C58  0E55               	movlw	85
  1374   000C5A                     u1307:
  1375   000C5A  2EE8               	decfsz	wreg,f,c
  1376   000C5C  D7FE               	bra	u1307
  1377   000C5E  2E0D               	decfsz	??_startTimer^0,f,c
  1378   000C60  D7FC               	bra	u1307
  1379   000C62  F000               	nop	
  1380   000C64                     
  1381                           ;main.c: 350:                         LATAbits.LATA3 = 0;
  1382   000C64  9689               	bcf	137,3,c	;volatile
  1383   000C66                     
  1384                           ;main.c: 352:                         LATAbits.LATA7 = 0;
  1385   000C66  9E89               	bcf	137,7,c	;volatile
  1386   000C68                     
  1387                           ;main.c: 354:                         if (DEL % 79 == 0)
  1388   000C68  C039  F001         	movff	_DEL,___awmod@dividend
  1389   000C6C  C03A  F002         	movff	_DEL+1,___awmod@dividend+1
  1390   000C70  0E00               	movlw	0
  1391   000C72  6E04               	movwf	(___awmod@divisor+1)^0,c
  1392   000C74  0E4F               	movlw	79
  1393   000C76  6E03               	movwf	___awmod@divisor^0,c
  1394   000C78  EC99  F008         	call	___awmod	;wreg free
  1395   000C7C  5001               	movf	?___awmod^0,w,c
  1396   000C7E  1002               	iorwf	(?___awmod+1)^0,w,c
  1397   000C80  A4D8               	btfss	status,2,c
  1398   000C82  EF45  F006         	goto	u841
  1399   000C86  EF47  F006         	goto	u840
  1400   000C8A                     u841:
  1401   000C8A  EF53  F006         	goto	l1953
  1402   000C8E                     u840:
  1403   000C8E                     
  1404                           ;main.c: 355:                         {;main.c: 356:                             LATAbit
      +                          s.LATA1 = 1;
  1405   000C8E  8289               	bsf	137,1,c	;volatile
  1406   000C90                     
  1407                           ;main.c: 357:                             PORTB = 0x80;
  1408   000C90  0E80               	movlw	128
  1409   000C92  6E81               	movwf	129,c	;volatile
  1410   000C94                     
  1411                           ;main.c: 358:                             _delay((unsigned long)((3)*(64000000/4000.0)))
      +                          ;
  1412   000C94  0E3F               	movlw	63
  1413   000C96  6E0D               	movwf	??_startTimer^0,c
  1414   000C98  0E55               	movlw	85
  1415   000C9A                     u1317:
  1416   000C9A  2EE8               	decfsz	wreg,f,c
  1417   000C9C  D7FE               	bra	u1317
  1418   000C9E  2E0D               	decfsz	??_startTimer^0,f,c
  1419   000CA0  D7FC               	bra	u1317
  1420   000CA2  F000               	nop	
  1421   000CA4                     
  1422                           ;main.c: 359:                             LATAbits.LATA1 = 0;
  1423   000CA4  9289               	bcf	137,1,c	;volatile
  1424   000CA6                     l1953:
  1425                           
  1426                           ;main.c: 363:                         if (PORTCbits.RC2 == 0)
  1427   000CA6  B482               	btfsc	130,2,c	;volatile
  1428   000CA8  EF58  F006         	goto	u851
  1429   000CAC  EF5A  F006         	goto	u850
  1430   000CB0                     u851:
  1431   000CB0  EF60  F006         	goto	l1957
  1432   000CB4                     u850:
  1433   000CB4                     
  1434                           ;main.c: 364:                         {;main.c: 365:                             RESET =
      +                           1;
  1435   000CB4  0E00               	movlw	0
  1436   000CB6  6E17               	movwf	(startTimer@RESET+1)^0,c
  1437   000CB8  0E01               	movlw	1
  1438   000CBA  6E16               	movwf	startTimer@RESET^0,c
  1439                           
  1440                           ;main.c: 366:                             break;
  1441   000CBC  EF70  F006         	goto	l1961
  1442   000CC0                     l1957:
  1443                           
  1444                           ;main.c: 368:                     }
  1445   000CC0  0639               	decf	_DEL^0,f,c
  1446   000CC2  A0D8               	btfss	status,0,c
  1447   000CC4  063A               	decf	(_DEL+1)^0,f,c
  1448   000CC6  BE3A               	btfsc	(_DEL+1)^0,7,c
  1449   000CC8  EF70  F006         	goto	u860
  1450   000CCC  503A               	movf	(_DEL+1)^0,w,c
  1451   000CCE  E106               	bnz	u861
  1452   000CD0  0439               	decf	_DEL^0,w,c
  1453   000CD2  B0D8               	btfsc	status,0,c
  1454   000CD4  EF6E  F006         	goto	u861
  1455   000CD8  EF70  F006         	goto	u860
  1456   000CDC                     u861:
  1457   000CDC  EFE8  F005         	goto	l1905
  1458   000CE0                     u860:
  1459   000CE0                     l1961:
  1460                           
  1461                           ;main.c: 370:                     if (RESET || timeUp)
  1462   000CE0  5016               	movf	startTimer@RESET^0,w,c
  1463   000CE2  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1464   000CE4  A4D8               	btfss	status,2,c
  1465   000CE6  EF77  F006         	goto	u871
  1466   000CEA  EF79  F006         	goto	u870
  1467   000CEE                     u871:
  1468   000CEE  EF8E  F006         	goto	l1969
  1469   000CF2                     u870:
  1470   000CF2  5014               	movf	startTimer@timeUp^0,w,c
  1471   000CF4  1015               	iorwf	(startTimer@timeUp+1)^0,w,c
  1472   000CF6  B4D8               	btfsc	status,2,c
  1473   000CF8  EF80  F006         	goto	u881
  1474   000CFC  EF82  F006         	goto	u880
  1475   000D00                     u881:
  1476   000D00  EF84  F006         	goto	l1965
  1477   000D04                     u880:
  1478   000D04  EF8E  F006         	goto	l1969
  1479   000D08                     l1965:
  1480                           
  1481                           ;main.c: 373:                 }
  1482   000D08  063B               	decf	_minute_second_digit^0,f,c
  1483   000D0A  A0D8               	btfss	status,0,c
  1484   000D0C  063C               	decf	(_minute_second_digit+1)^0,f,c
  1485   000D0E                     l1967:
  1486   000D0E  BE3C               	btfsc	(_minute_second_digit+1)^0,7,c
  1487   000D10  EF8E  F006         	goto	u890
  1488   000D14  EF8C  F006         	goto	u891
  1489   000D18                     u891:
  1490   000D18  EFBA  F005         	goto	l1889
  1491   000D1C                     u890:
  1492   000D1C                     l1969:
  1493                           
  1494                           ;main.c: 375:                 if (RESET || timeUp)
  1495   000D1C  5016               	movf	startTimer@RESET^0,w,c
  1496   000D1E  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1497   000D20  A4D8               	btfss	status,2,c
  1498   000D22  EF95  F006         	goto	u901
  1499   000D26  EF97  F006         	goto	u900
  1500   000D2A                     u901:
  1501   000D2A  EFAC  F006         	goto	l1977
  1502   000D2E                     u900:
  1503   000D2E  5014               	movf	startTimer@timeUp^0,w,c
  1504   000D30  1015               	iorwf	(startTimer@timeUp+1)^0,w,c
  1505   000D32  B4D8               	btfsc	status,2,c
  1506   000D34  EF9E  F006         	goto	u911
  1507   000D38  EFA0  F006         	goto	u910
  1508   000D3C                     u911:
  1509   000D3C  EFA2  F006         	goto	l1973
  1510   000D40                     u910:
  1511   000D40  EFAC  F006         	goto	l1977
  1512   000D44                     l1973:
  1513                           
  1514                           ;main.c: 378:             }
  1515   000D44  063D               	decf	_minute_first_digit^0,f,c
  1516   000D46  A0D8               	btfss	status,0,c
  1517   000D48  063E               	decf	(_minute_first_digit+1)^0,f,c
  1518   000D4A                     l1975:
  1519   000D4A  BE3E               	btfsc	(_minute_first_digit+1)^0,7,c
  1520   000D4C  EFAC  F006         	goto	u920
  1521   000D50  EFAA  F006         	goto	u921
  1522   000D54                     u921:
  1523   000D54  EFA0  F005         	goto	l1885
  1524   000D58                     u920:
  1525   000D58                     l1977:
  1526                           
  1527                           ;main.c: 380:             if (RESET || timeUp)
  1528   000D58  5016               	movf	startTimer@RESET^0,w,c
  1529   000D5A  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1530   000D5C  A4D8               	btfss	status,2,c
  1531   000D5E  EFB3  F006         	goto	u931
  1532   000D62  EFB5  F006         	goto	u930
  1533   000D66                     u931:
  1534   000D66  EFCA  F006         	goto	l1985
  1535   000D6A                     u930:
  1536   000D6A  5014               	movf	startTimer@timeUp^0,w,c
  1537   000D6C  1015               	iorwf	(startTimer@timeUp+1)^0,w,c
  1538   000D6E  B4D8               	btfsc	status,2,c
  1539   000D70  EFBC  F006         	goto	u941
  1540   000D74  EFBE  F006         	goto	u940
  1541   000D78                     u941:
  1542   000D78  EFC0  F006         	goto	l1981
  1543   000D7C                     u940:
  1544   000D7C  EFCA  F006         	goto	l1985
  1545   000D80                     l1981:
  1546                           
  1547                           ;main.c: 383:         }
  1548   000D80  063F               	decf	_hour_second_digit^0,f,c
  1549   000D82  A0D8               	btfss	status,0,c
  1550   000D84  0640               	decf	(_hour_second_digit+1)^0,f,c
  1551   000D86                     l1983:
  1552   000D86  BE40               	btfsc	(_hour_second_digit+1)^0,7,c
  1553   000D88  EFCA  F006         	goto	u950
  1554   000D8C  EFC8  F006         	goto	u951
  1555   000D90                     u951:
  1556   000D90  EF74  F005         	goto	l1875
  1557   000D94                     u950:
  1558   000D94                     l1985:
  1559                           
  1560                           ;main.c: 384:     }
  1561   000D94  0641               	decf	_hour_first_digit^0,f,c
  1562   000D96  A0D8               	btfss	status,0,c
  1563   000D98  0642               	decf	(_hour_first_digit+1)^0,f,c
  1564   000D9A                     l1987:
  1565   000D9A  BE42               	btfsc	(_hour_first_digit+1)^0,7,c
  1566   000D9C  EFD4  F006         	goto	u960
  1567   000DA0  EFD2  F006         	goto	u961
  1568   000DA4                     u961:
  1569   000DA4  EF58  F005         	goto	l1867
  1570   000DA8                     u960:
  1571   000DA8                     
  1572                           ;main.c: 386:     LATAbits.LATA7 = 1;
  1573   000DA8  8E89               	bsf	137,7,c	;volatile
  1574   000DAA                     
  1575                           ;main.c: 388:     if (RESET)
  1576   000DAA  5016               	movf	startTimer@RESET^0,w,c
  1577   000DAC  1017               	iorwf	(startTimer@RESET+1)^0,w,c
  1578   000DAE  B4D8               	btfsc	status,2,c
  1579   000DB0  EFDC  F006         	goto	u971
  1580   000DB4  EFDE  F006         	goto	u970
  1581   000DB8                     u971:
  1582   000DB8  EFE2  F006         	goto	l171
  1583   000DBC                     u970:
  1584   000DBC                     
  1585                           ;main.c: 389:     {;main.c: 390:         stopTimer();
  1586   000DBC  ECF7  F009         	call	_stopTimer	;wreg free
  1587                           
  1588                           ;main.c: 391:     }
  1589   000DC0  EFE5  F006         	goto	l173
  1590   000DC4                     l171:
  1591                           
  1592                           ;main.c: 393:     {;main.c: 394:         LATCbits.LATC3 = 0;
  1593   000DC4  968B               	bcf	139,3,c	;volatile
  1594   000DC6                     
  1595                           ;main.c: 395:         stopMessage();
  1596   000DC6  ECA0  F009         	call	_stopMessage	;wreg free
  1597   000DCA                     l173:
  1598   000DCA  0012               	return		;funcret
  1599   000DCC                     __end_of_startTimer:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _stopTimer *****************
  1603 ;; Defined at:
  1604 ;;		line 404 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         0       0       0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0
  1620 ;;      Temps:          2       0       0       0       0       0       0
  1621 ;;      Totals:         2       0       0       0       0       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 1
  1625 ;; This function calls:
  1626 ;;		_red_led
  1627 ;;		_seven_segment_config
  1628 ;; This function is called by:
  1629 ;;		_startTimer
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text4
  1635   0013EE                     __ptext4:
  1636                           	callstack 0
  1637   0013EE                     _stopTimer:
  1638                           	callstack 29
  1639   0013EE                     
  1640                           ;main.c: 407:     red_led();
  1641   0013EE  ECD1  F00A         	call	_red_led	;wreg free
  1642   0013F2                     
  1643                           ;main.c: 409:     LATCbits.LATC3 = 0;
  1644   0013F2  968B               	bcf	139,3,c	;volatile
  1645                           
  1646                           ;main.c: 412:     seven_segment_config();
  1647   0013F4  ECE0  F00A         	call	_seven_segment_config	;wreg free
  1648   0013F8                     
  1649                           ;main.c: 414:     segmentCounter = 0;
  1650   0013F8  0E00               	movlw	0
  1651   0013FA  6E43               	movwf	_segmentCounter^0,c
  1652   0013FC                     
  1653                           ;main.c: 415:     PORTB = segment[segmentCounter];
  1654   0013FC  0E2B               	movlw	low _segment
  1655   0013FE  2443               	addwf	_segmentCounter^0,w,c
  1656   001400  6ED9               	movwf	fsr2l,c
  1657   001402  6ADA               	clrf	fsr2h,c
  1658   001404  0E00               	movlw	high _segment
  1659   001406  22DA               	addwfc	fsr2h,f,c
  1660   001408  50DF               	movf	indf2,w,c
  1661   00140A  6E81               	movwf	129,c	;volatile
  1662   00140C                     
  1663                           ;main.c: 416:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1664   00140C  0E09               	movlw	9
  1665   00140E  6E02               	movwf	(??_stopTimer+1)^0,c
  1666   001410  0E1E               	movlw	30
  1667   001412  6E01               	movwf	??_stopTimer^0,c
  1668   001414  0EE4               	movlw	228
  1669   001416                     u1327:
  1670   001416  2EE8               	decfsz	wreg,f,c
  1671   001418  D7FE               	bra	u1327
  1672   00141A  2E01               	decfsz	??_stopTimer^0,f,c
  1673   00141C  D7FC               	bra	u1327
  1674   00141E  2E02               	decfsz	(??_stopTimer+1)^0,f,c
  1675   001420  D7FA               	bra	u1327
  1676   001422  D000               	nop2	
  1677   001424                     
  1678                           ;main.c: 418:     LATAbits.LATA7 = 0;
  1679   001424  9E89               	bcf	137,7,c	;volatile
  1680   001426  0012               	return		;funcret
  1681   001428                     __end_of_stopTimer:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function _seven_segment_config *****************
  1685 ;; Defined at:
  1686 ;;		line 229 in file "main.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		None
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1700 ;;      Params:         0       0       0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0
  1703 ;;      Totals:         0       0       0       0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_startTimer
  1710 ;;		_stopTimer
  1711 ;;		_startUpcounter
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text5
  1716   0015C0                     __ptext5:
  1717                           	callstack 0
  1718   0015C0                     _seven_segment_config:
  1719                           	callstack 29
  1720   0015C0  0012               	return		;funcret
  1721   0015C2                     __end_of_seven_segment_config:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _stopMessage *****************
  1725 ;; Defined at:
  1726 ;;		line 425 in file "main.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  DEL             2    0        unsigned int 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1740 ;;      Params:         0       0       0       0       0       0       0
  1741 ;;      Locals:         0       0       0       0       0       0       0
  1742 ;;      Temps:          2       0       0       0       0       0       0
  1743 ;;      Totals:         2       0       0       0       0       0       0
  1744 ;;Total ram usage:        2 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 5
  1747 ;; This function calls:
  1748 ;;		_LCD_CLR
  1749 ;;		_LCD_Init
  1750 ;;		_LCD_Set_Cursor
  1751 ;;		_LCD_Write_String
  1752 ;;		_red_led
  1753 ;; This function is called by:
  1754 ;;		_startTimer
  1755 ;;		_startUpcounter
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text6
  1760   001340                     __ptext6:
  1761                           	callstack 0
  1762   001340                     _stopMessage:
  1763                           	callstack 24
  1764   001340                     
  1765                           ;main.c: 427:     unsigned int DEL;;main.c: 429:     red_led();
  1766   001340  ECD1  F00A         	call	_red_led	;wreg free
  1767   001344                     
  1768                           ;main.c: 431:     LCD_Init((0x38 << 1));
  1769   001344  0E70               	movlw	112
  1770   001346  ECC0  F007         	call	_LCD_Init
  1771   00134A                     
  1772                           ;main.c: 433:     LCD_Set_Cursor(1, 7);
  1773   00134A  0E07               	movlw	7
  1774   00134C  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  1775   00134E  0E01               	movlw	1
  1776   001350  EC39  F009         	call	_LCD_Set_Cursor
  1777   001354                     
  1778                           ;main.c: 434:     LCD_Write_String("OVER");
  1779   001354  0E01               	movlw	low STR_1
  1780   001356  6E05               	movwf	LCD_Write_String@Str^0,c
  1781   001358  0E06               	movlw	high STR_1
  1782   00135A  6E06               	movwf	(LCD_Write_String@Str+1)^0,c
  1783   00135C  ECCC  F009         	call	_LCD_Write_String	;wreg free
  1784   001360                     
  1785                           ;main.c: 436:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1786   001360  0E29               	movlw	41
  1787   001362  6E0C               	movwf	(??_stopMessage+1)^0,c
  1788   001364  0E96               	movlw	150
  1789   001366  6E0B               	movwf	??_stopMessage^0,c
  1790   001368  0E7F               	movlw	127
  1791   00136A                     u1337:
  1792   00136A  2EE8               	decfsz	wreg,f,c
  1793   00136C  D7FE               	bra	u1337
  1794   00136E  2E0B               	decfsz	??_stopMessage^0,f,c
  1795   001370  D7FC               	bra	u1337
  1796   001372  2E0C               	decfsz	(??_stopMessage+1)^0,f,c
  1797   001374  D7FA               	bra	u1337
  1798   001376  F000               	nop	
  1799   001378                     
  1800                           ;main.c: 438:     LCD_CLR();
  1801   001378  ECC1  F00A         	call	_LCD_CLR	;wreg free
  1802   00137C                     
  1803                           ;main.c: 439:     LATAbits.LATA7 = 0;
  1804   00137C  9E89               	bcf	137,7,c	;volatile
  1805   00137E                     
  1806                           ;main.c: 441:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1807   00137E  0E05               	movlw	5
  1808   001380  6E0C               	movwf	(??_stopMessage+1)^0,c
  1809   001382  0E0F               	movlw	15
  1810   001384  6E0B               	movwf	??_stopMessage^0,c
  1811   001386  0EF1               	movlw	241
  1812   001388                     u1347:
  1813   001388  2EE8               	decfsz	wreg,f,c
  1814   00138A  D7FE               	bra	u1347
  1815   00138C  2E0B               	decfsz	??_stopMessage^0,f,c
  1816   00138E  D7FC               	bra	u1347
  1817   001390  2E0C               	decfsz	(??_stopMessage+1)^0,f,c
  1818   001392  D7FA               	bra	u1347
  1819   001394  F000               	nop	
  1820   001396  0012               	return		;funcret
  1821   001398                     __end_of_stopMessage:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _red_led *****************
  1825 ;; Defined at:
  1826 ;;		line 196 in file "main.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		None
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1840 ;;      Params:         0       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_stopTimer
  1850 ;;		_stopMessage
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text7
  1856   0015A2                     __ptext7:
  1857                           	callstack 0
  1858   0015A2                     _red_led:
  1859                           	callstack 29
  1860   0015A2                     
  1861                           ;main.c: 198:     LATAbits.LATA5 = 0;
  1862   0015A2  9A89               	bcf	137,5,c	;volatile
  1863                           
  1864                           ;main.c: 200:     LATAbits.LATA4 = 1;
  1865   0015A4  8889               	bsf	137,4,c	;volatile
  1866                           
  1867                           ;main.c: 201:     LATAbits.LATA6 = 1;
  1868   0015A6  8C89               	bsf	137,6,c	;volatile
  1869   0015A8  0012               	return		;funcret
  1870   0015AA                     __end_of_red_led:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _LCD_Write_String *****************
  1874 ;; Defined at:
  1875 ;;		line 137 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  Str             2    4[COMRAM] PTR unsigned char 
  1878 ;;		 -> STR_1(5), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  i               2    8[COMRAM] int 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1890 ;;      Params:         2       0       0       0       0       0       0
  1891 ;;      Locals:         2       0       0       0       0       0       0
  1892 ;;      Temps:          2       0       0       0       0       0       0
  1893 ;;      Totals:         6       0       0       0       0       0       0
  1894 ;;Total ram usage:        6 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 4
  1897 ;; This function calls:
  1898 ;;		_LCD_Write_Char
  1899 ;; This function is called by:
  1900 ;;		_stopMessage
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text8
  1905   001398                     __ptext8:
  1906                           	callstack 0
  1907   001398                     _LCD_Write_String:
  1908                           	callstack 24
  1909   001398                     
  1910                           ;main.c: 137: void LCD_Write_String(char *Str);main.c: 138: {;main.c: 139:     for (int 
      +                          i = 0; Str[i] != '\0'; i++)
  1911   001398  0E00               	movlw	0
  1912   00139A  6E0A               	movwf	(LCD_Write_String@i+1)^0,c
  1913   00139C  0E00               	movlw	0
  1914   00139E  6E09               	movwf	LCD_Write_String@i^0,c
  1915   0013A0  EFE2  F009         	goto	l1741
  1916   0013A4                     l1737:
  1917                           
  1918                           ;main.c: 140:         LCD_Write_Char(Str[i]);
  1919   0013A4  5009               	movf	LCD_Write_String@i^0,w,c
  1920   0013A6  2405               	addwf	LCD_Write_String@Str^0,w,c
  1921   0013A8  6E07               	movwf	??_LCD_Write_String^0,c
  1922   0013AA  500A               	movf	(LCD_Write_String@i+1)^0,w,c
  1923   0013AC  2006               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  1924   0013AE  6E08               	movwf	(??_LCD_Write_String+1)^0,c
  1925   0013B0  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
  1926   0013B4  C008  FFF7         	movff	??_LCD_Write_String+1,tblptrh
  1927   0013B8                     	if	0	;tblptru may be non-zero
  1928   0013B8                     	endif
  1929   0013B8                     	if	0	;tblptru may be non-zero
  1930   0013B8                     	endif
  1931   0013B8  0008               	tblrd		*
  1932   0013BA  50F5               	movf	tablat,w,c
  1933   0013BC  EC57  F00A         	call	_LCD_Write_Char
  1934   0013C0  4A09               	infsnz	LCD_Write_String@i^0,f,c
  1935   0013C2  2A0A               	incf	(LCD_Write_String@i+1)^0,f,c
  1936   0013C4                     l1741:
  1937   0013C4  5009               	movf	LCD_Write_String@i^0,w,c
  1938   0013C6  2405               	addwf	LCD_Write_String@Str^0,w,c
  1939   0013C8  6E07               	movwf	??_LCD_Write_String^0,c
  1940   0013CA  500A               	movf	(LCD_Write_String@i+1)^0,w,c
  1941   0013CC  2006               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  1942   0013CE  6E08               	movwf	(??_LCD_Write_String+1)^0,c
  1943   0013D0  C007  FFF6         	movff	??_LCD_Write_String,tblptrl
  1944   0013D4  C008  FFF7         	movff	??_LCD_Write_String+1,tblptrh
  1945   0013D8                     	if	0	;tblptru may be non-zero
  1946   0013D8                     	endif
  1947   0013D8                     	if	0	;tblptru may be non-zero
  1948   0013D8                     	endif
  1949   0013D8  0008               	tblrd		*
  1950   0013DA  50F5               	movf	tablat,w,c
  1951   0013DC  0900               	iorlw	0
  1952   0013DE  A4D8               	btfss	status,2,c
  1953   0013E0  EFF4  F009         	goto	u661
  1954   0013E4  EFF6  F009         	goto	u660
  1955   0013E8                     u661:
  1956   0013E8  EFD2  F009         	goto	l1737
  1957   0013EC                     u660:
  1958   0013EC  0012               	return		;funcret
  1959   0013EE                     __end_of_LCD_Write_String:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _LCD_Init *****************
  1963 ;; Defined at:
  1964 ;;		line 83 in file "main.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  I2C_Add         1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  I2C_Add         1    6[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         0       0       0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0       0       0
  1980 ;;      Temps:          2       0       0       0       0       0       0
  1981 ;;      Totals:         3       0       0       0       0       0       0
  1982 ;;Total ram usage:        3 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 4
  1985 ;; This function calls:
  1986 ;;		_IO_Expander_Write
  1987 ;;		_LCD_CMD
  1988 ;; This function is called by:
  1989 ;;		_stopMessage
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text9
  1995   000F80                     __ptext9:
  1996                           	callstack 0
  1997   000F80                     _LCD_Init:
  1998                           	callstack 24
  1999                           
  2000                           ;incstack = 0
  2001                           ;LCD_Init@I2C_Add stored from wreg
  2002   000F80  6E07               	movwf	LCD_Init@I2C_Add^0,c
  2003   000F82                     
  2004                           ;main.c: 83: void LCD_Init(unsigned char I2C_Add);main.c: 84: {;main.c: 85:     i2c_add 
      +                          = I2C_Add;
  2005   000F82  C007  F045         	movff	LCD_Init@I2C_Add,_i2c_add
  2006   000F86                     
  2007                           ;main.c: 86:     IO_Expander_Write(0x00);
  2008   000F86  0E00               	movlw	0
  2009   000F88  EC71  F00A         	call	_IO_Expander_Write
  2010   000F8C                     
  2011                           ;main.c: 87:     _delay((unsigned long)((30)*(64000000/4000.0)));
  2012   000F8C  0E03               	movlw	3
  2013   000F8E  6E06               	movwf	(??_LCD_Init+1)^0,c
  2014   000F90  0E70               	movlw	112
  2015   000F92  6E05               	movwf	??_LCD_Init^0,c
  2016   000F94  0E5C               	movlw	92
  2017   000F96                     u1357:
  2018   000F96  2EE8               	decfsz	wreg,f,c
  2019   000F98  D7FE               	bra	u1357
  2020   000F9A  2E05               	decfsz	??_LCD_Init^0,f,c
  2021   000F9C  D7FC               	bra	u1357
  2022   000F9E  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2023   000FA0  D7FA               	bra	u1357
  2024   000FA2  D000               	nop2	
  2025                           
  2026                           ;main.c: 88:     LCD_CMD(0x03);
  2027   000FA4  0E03               	movlw	3
  2028   000FA6  EC64  F00A         	call	_LCD_CMD
  2029   000FAA                     
  2030                           ;main.c: 89:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2031   000FAA  0E68               	movlw	104
  2032   000FAC  6E05               	movwf	??_LCD_Init^0,c
  2033   000FAE  0EE4               	movlw	228
  2034   000FB0                     u1367:
  2035   000FB0  2EE8               	decfsz	wreg,f,c
  2036   000FB2  D7FE               	bra	u1367
  2037   000FB4  2E05               	decfsz	??_LCD_Init^0,f,c
  2038   000FB6  D7FC               	bra	u1367
  2039   000FB8  D000               	nop2	
  2040   000FBA                     
  2041                           ;main.c: 90:     LCD_CMD(0x03);
  2042   000FBA  0E03               	movlw	3
  2043   000FBC  EC64  F00A         	call	_LCD_CMD
  2044                           
  2045                           ;main.c: 91:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2046   000FC0  0E68               	movlw	104
  2047   000FC2  6E05               	movwf	??_LCD_Init^0,c
  2048   000FC4  0EE4               	movlw	228
  2049   000FC6                     u1377:
  2050   000FC6  2EE8               	decfsz	wreg,f,c
  2051   000FC8  D7FE               	bra	u1377
  2052   000FCA  2E05               	decfsz	??_LCD_Init^0,f,c
  2053   000FCC  D7FC               	bra	u1377
  2054   000FCE  D000               	nop2	
  2055   000FD0                     
  2056                           ;main.c: 92:     LCD_CMD(0x03);
  2057   000FD0  0E03               	movlw	3
  2058   000FD2  EC64  F00A         	call	_LCD_CMD
  2059   000FD6                     
  2060                           ;main.c: 93:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2061   000FD6  0E68               	movlw	104
  2062   000FD8  6E05               	movwf	??_LCD_Init^0,c
  2063   000FDA  0EE4               	movlw	228
  2064   000FDC                     u1387:
  2065   000FDC  2EE8               	decfsz	wreg,f,c
  2066   000FDE  D7FE               	bra	u1387
  2067   000FE0  2E05               	decfsz	??_LCD_Init^0,f,c
  2068   000FE2  D7FC               	bra	u1387
  2069   000FE4  D000               	nop2	
  2070                           
  2071                           ;main.c: 94:     LCD_CMD(0x02);
  2072   000FE6  0E02               	movlw	2
  2073   000FE8  EC64  F00A         	call	_LCD_CMD
  2074   000FEC                     
  2075                           ;main.c: 95:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2076   000FEC  0E68               	movlw	104
  2077   000FEE  6E05               	movwf	??_LCD_Init^0,c
  2078   000FF0  0EE4               	movlw	228
  2079   000FF2                     u1397:
  2080   000FF2  2EE8               	decfsz	wreg,f,c
  2081   000FF4  D7FE               	bra	u1397
  2082   000FF6  2E05               	decfsz	??_LCD_Init^0,f,c
  2083   000FF8  D7FC               	bra	u1397
  2084   000FFA  D000               	nop2	
  2085   000FFC                     
  2086                           ;main.c: 96:     LCD_CMD(0x20 | (2 << 2));
  2087   000FFC  0E28               	movlw	40
  2088   000FFE  EC64  F00A         	call	_LCD_CMD
  2089                           
  2090                           ;main.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2091   001002  0E05               	movlw	5
  2092   001004  6E06               	movwf	(??_LCD_Init+1)^0,c
  2093   001006  0E0F               	movlw	15
  2094   001008  6E05               	movwf	??_LCD_Init^0,c
  2095   00100A  0EF1               	movlw	241
  2096   00100C                     u1407:
  2097   00100C  2EE8               	decfsz	wreg,f,c
  2098   00100E  D7FE               	bra	u1407
  2099   001010  2E05               	decfsz	??_LCD_Init^0,f,c
  2100   001012  D7FC               	bra	u1407
  2101   001014  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2102   001016  D7FA               	bra	u1407
  2103   001018  F000               	nop	
  2104   00101A                     
  2105                           ;main.c: 98:     LCD_CMD(0x0C);
  2106   00101A  0E0C               	movlw	12
  2107   00101C  EC64  F00A         	call	_LCD_CMD
  2108   001020                     
  2109                           ;main.c: 99:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2110   001020  0E05               	movlw	5
  2111   001022  6E06               	movwf	(??_LCD_Init+1)^0,c
  2112   001024  0E0F               	movlw	15
  2113   001026  6E05               	movwf	??_LCD_Init^0,c
  2114   001028  0EF1               	movlw	241
  2115   00102A                     u1417:
  2116   00102A  2EE8               	decfsz	wreg,f,c
  2117   00102C  D7FE               	bra	u1417
  2118   00102E  2E05               	decfsz	??_LCD_Init^0,f,c
  2119   001030  D7FC               	bra	u1417
  2120   001032  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2121   001034  D7FA               	bra	u1417
  2122   001036  F000               	nop	
  2123                           
  2124                           ;main.c: 100:     LCD_CMD(0x01);
  2125   001038  0E01               	movlw	1
  2126   00103A  EC64  F00A         	call	_LCD_CMD
  2127   00103E                     
  2128                           ;main.c: 101:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2129   00103E  0E05               	movlw	5
  2130   001040  6E06               	movwf	(??_LCD_Init+1)^0,c
  2131   001042  0E0F               	movlw	15
  2132   001044  6E05               	movwf	??_LCD_Init^0,c
  2133   001046  0EF1               	movlw	241
  2134   001048                     u1427:
  2135   001048  2EE8               	decfsz	wreg,f,c
  2136   00104A  D7FE               	bra	u1427
  2137   00104C  2E05               	decfsz	??_LCD_Init^0,f,c
  2138   00104E  D7FC               	bra	u1427
  2139   001050  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2140   001052  D7FA               	bra	u1427
  2141   001054  F000               	nop	
  2142   001056                     
  2143                           ;main.c: 102:     LCD_CMD(0x04 | 0x02);
  2144   001056  0E06               	movlw	6
  2145   001058  EC64  F00A         	call	_LCD_CMD
  2146                           
  2147                           ;main.c: 103:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2148   00105C  0E05               	movlw	5
  2149   00105E  6E06               	movwf	(??_LCD_Init+1)^0,c
  2150   001060  0E0F               	movlw	15
  2151   001062  6E05               	movwf	??_LCD_Init^0,c
  2152   001064  0EF1               	movlw	241
  2153   001066                     u1437:
  2154   001066  2EE8               	decfsz	wreg,f,c
  2155   001068  D7FE               	bra	u1437
  2156   00106A  2E05               	decfsz	??_LCD_Init^0,f,c
  2157   00106C  D7FC               	bra	u1437
  2158   00106E  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  2159   001070  D7FA               	bra	u1437
  2160   001072  F000               	nop	
  2161   001074  0012               	return		;funcret
  2162   001076                     __end_of_LCD_Init:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function _LCD_CLR *****************
  2166 ;; Defined at:
  2167 ;;		line 186 in file "main.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2181 ;;      Params:         0       0       0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 4
  2188 ;; This function calls:
  2189 ;;		_LCD_CMD
  2190 ;; This function is called by:
  2191 ;;		_stopMessage
  2192 ;;		_startUpcounter
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text10
  2197   001582                     __ptext10:
  2198                           	callstack 0
  2199   001582                     _LCD_CLR:
  2200                           	callstack 24
  2201   001582                     
  2202                           ;main.c: 188:     LCD_CMD(0x01);
  2203   001582  0E01               	movlw	1
  2204   001584  EC64  F00A         	call	_LCD_CMD
  2205   001588                     
  2206                           ;main.c: 189:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  2207   001588  0ED5               	movlw	213
  2208   00158A                     u1447:
  2209   00158A  2EE8               	decfsz	wreg,f,c
  2210   00158C  D7FE               	bra	u1447
  2211   00158E  F000               	nop	
  2212   001590  0012               	return		;funcret
  2213   001592                     __end_of_LCD_CLR:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _green_led *****************
  2217 ;; Defined at:
  2218 ;;		line 204 in file "main.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		None
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2232 ;;      Params:         0       0       0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0
  2235 ;;      Totals:         0       0       0       0       0       0       0
  2236 ;;Total ram usage:        0 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_startTimer
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text11
  2246   0015AA                     __ptext11:
  2247                           	callstack 0
  2248   0015AA                     _green_led:
  2249                           	callstack 29
  2250   0015AA                     
  2251                           ;main.c: 207:     LATAbits.LATA4 = 0;
  2252   0015AA  9889               	bcf	137,4,c	;volatile
  2253                           
  2254                           ;main.c: 209:     LATAbits.LATA5 = 1;
  2255   0015AC  8A89               	bsf	137,5,c	;volatile
  2256                           
  2257                           ;main.c: 210:     LATAbits.LATA6 = 1;
  2258   0015AE  8C89               	bsf	137,6,c	;volatile
  2259   0015B0  0012               	return		;funcret
  2260   0015B2                     __end_of_green_led:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function ___awmod *****************
  2264 ;; Defined at:
  2265 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  dividend        2    0[COMRAM] int 
  2268 ;;  divisor         2    2[COMRAM] int 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  sign            1    5[COMRAM] unsigned char 
  2271 ;;  counter         1    4[COMRAM] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    0[COMRAM] int 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         4       0       0       0       0       0       0
  2282 ;;      Locals:         2       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0
  2284 ;;      Totals:         6       0       0       0       0       0       0
  2285 ;;Total ram usage:        6 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_startTimer
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text12
  2295   001132                     __ptext12:
  2296                           	callstack 0
  2297   001132                     ___awmod:
  2298                           	callstack 29
  2299   001132  0E00               	movlw	0
  2300   001134  6E06               	movwf	___awmod@sign^0,c
  2301   001136  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2302   001138  EFA2  F008         	goto	u680
  2303   00113C  EFA0  F008         	goto	u681
  2304   001140                     u681:
  2305   001140  EFA8  F008         	goto	l1809
  2306   001144                     u680:
  2307   001144  6C01               	negf	___awmod@dividend^0,c
  2308   001146  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2309   001148  B0D8               	btfsc	status,0,c
  2310   00114A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2311   00114C  0E01               	movlw	1
  2312   00114E  6E06               	movwf	___awmod@sign^0,c
  2313   001150                     l1809:
  2314   001150  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2315   001152  EFAF  F008         	goto	u690
  2316   001156  EFAD  F008         	goto	u691
  2317   00115A                     u691:
  2318   00115A  EFB3  F008         	goto	l1813
  2319   00115E                     u690:
  2320   00115E  6C03               	negf	___awmod@divisor^0,c
  2321   001160  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2322   001162  B0D8               	btfsc	status,0,c
  2323   001164  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2324   001166                     l1813:
  2325   001166  5003               	movf	___awmod@divisor^0,w,c
  2326   001168  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2327   00116A  B4D8               	btfsc	status,2,c
  2328   00116C  EFBA  F008         	goto	u701
  2329   001170  EFBC  F008         	goto	u700
  2330   001174                     u701:
  2331   001174  EFE0  F008         	goto	l1829
  2332   001178                     u700:
  2333   001178  0E01               	movlw	1
  2334   00117A  6E05               	movwf	___awmod@counter^0,c
  2335   00117C  EFC4  F008         	goto	l1819
  2336   001180                     l1817:
  2337   001180  90D8               	bcf	status,0,c
  2338   001182  3603               	rlcf	___awmod@divisor^0,f,c
  2339   001184  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2340   001186  2A05               	incf	___awmod@counter^0,f,c
  2341   001188                     l1819:
  2342   001188  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2343   00118A  EFC9  F008         	goto	u711
  2344   00118E  EFCB  F008         	goto	u710
  2345   001192                     u711:
  2346   001192  EFC0  F008         	goto	l1817
  2347   001196                     u710:
  2348   001196                     l1821:
  2349   001196  5003               	movf	___awmod@divisor^0,w,c
  2350   001198  5C01               	subwf	___awmod@dividend^0,w,c
  2351   00119A  5004               	movf	(___awmod@divisor+1)^0,w,c
  2352   00119C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2353   00119E  A0D8               	btfss	status,0,c
  2354   0011A0  EFD4  F008         	goto	u721
  2355   0011A4  EFD6  F008         	goto	u720
  2356   0011A8                     u721:
  2357   0011A8  EFDA  F008         	goto	l1825
  2358   0011AC                     u720:
  2359   0011AC  5003               	movf	___awmod@divisor^0,w,c
  2360   0011AE  5E01               	subwf	___awmod@dividend^0,f,c
  2361   0011B0  5004               	movf	(___awmod@divisor+1)^0,w,c
  2362   0011B2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2363   0011B4                     l1825:
  2364   0011B4  90D8               	bcf	status,0,c
  2365   0011B6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2366   0011B8  3203               	rrcf	___awmod@divisor^0,f,c
  2367   0011BA  2E05               	decfsz	___awmod@counter^0,f,c
  2368   0011BC  EFCB  F008         	goto	l1821
  2369   0011C0                     l1829:
  2370   0011C0  5006               	movf	___awmod@sign^0,w,c
  2371   0011C2  B4D8               	btfsc	status,2,c
  2372   0011C4  EFE6  F008         	goto	u731
  2373   0011C8  EFE8  F008         	goto	u730
  2374   0011CC                     u731:
  2375   0011CC  EFEC  F008         	goto	l1833
  2376   0011D0                     u730:
  2377   0011D0  6C01               	negf	___awmod@dividend^0,c
  2378   0011D2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2379   0011D4  B0D8               	btfsc	status,0,c
  2380   0011D6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2381   0011D8                     l1833:
  2382   0011D8  C001  F001         	movff	___awmod@dividend,?___awmod
  2383   0011DC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2384   0011E0  0012               	return		;funcret
  2385   0011E2                     __end_of___awmod:
  2386                           	callstack 0
  2387                           
  2388 ;; *************** function _display *****************
  2389 ;; Defined at:
  2390 ;;		line 530 in file "main.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  buttonCounte    2    8[COMRAM] unsigned int 
  2393 ;;  update          2   10[COMRAM] unsigned int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  minute_s_dig    2   20[COMRAM] unsigned int 
  2396 ;;  minute_f_dig    2   18[COMRAM] unsigned int 
  2397 ;;  hour_s_digit    2   16[COMRAM] unsigned int 
  2398 ;;  hour_f_digit    2   14[COMRAM] unsigned int 
  2399 ;;  minute_secon    1    0        unsigned char 
  2400 ;;  minute_first    1    0        unsigned char 
  2401 ;;  hour_second_    1    0        unsigned char 
  2402 ;;  hour_first_d    1    0        unsigned char 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2412 ;;      Params:         4       0       0       0       0       0       0
  2413 ;;      Locals:         8       0       0       0       0       0       0
  2414 ;;      Temps:          2       0       0       0       0       0       0
  2415 ;;      Totals:        14       0       0       0       0       0       0
  2416 ;;Total ram usage:       14 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 5
  2419 ;; This function calls:
  2420 ;;		_EEPROM_Read
  2421 ;;		_EEPROM_Write
  2422 ;;		_LCD_Set_Cursor
  2423 ;;		_LCD_Write_Char
  2424 ;;		___lwmod
  2425 ;;		_inttochar
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text13
  2432   000608                     __ptext13:
  2433                           	callstack 0
  2434   000608                     _display:
  2435                           	callstack 25
  2436   000608                     
  2437                           ;main.c: 530: void display(unsigned int buttonCounter, unsigned int update);main.c: 531:
      +                           {;main.c: 532:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2438   000608  0E05               	movlw	5
  2439   00060A  6E0E               	movwf	(??_display+1)^0,c
  2440   00060C  0E0F               	movlw	15
  2441   00060E  6E0D               	movwf	??_display^0,c
  2442   000610  0EF1               	movlw	241
  2443   000612                     u1457:
  2444   000612  2EE8               	decfsz	wreg,f,c
  2445   000614  D7FE               	bra	u1457
  2446   000616  2E0D               	decfsz	??_display^0,f,c
  2447   000618  D7FC               	bra	u1457
  2448   00061A  2E0E               	decfsz	(??_display+1)^0,f,c
  2449   00061C  D7FA               	bra	u1457
  2450   00061E  F000               	nop	
  2451   000620                     
  2452                           ;main.c: 534:     display_function_count = display_function_count + 1;
  2453   000620  0E01               	movlw	1
  2454   000622  2437               	addwf	_display_function_count^0,w,c
  2455   000624  6E37               	movwf	_display_function_count^0,c
  2456   000626  0E00               	movlw	0
  2457   000628  2038               	addwfc	(_display_function_count+1)^0,w,c
  2458   00062A  6E38               	movwf	(_display_function_count+1)^0,c
  2459   00062C                     
  2460                           ;main.c: 536:     unsigned char hour_first_digit, hour_second_digit, minute_first_digit,
      +                           minute_second_digit;;main.c: 537:     unsigned int hour_f_digit, hour_s_digit, minute_f
      +                          _digit, minute_s_digit;;main.c: 555:         if (buttonCounter == 1)
  2461   00062C  0409               	decf	display@buttonCounter^0,w,c
  2462   00062E  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2463   000630  A4D8               	btfss	status,2,c
  2464   000632  EF1D  F003         	goto	u1011
  2465   000636  EF1F  F003         	goto	u1010
  2466   00063A                     u1011:
  2467   00063A  EF35  F003         	goto	l2039
  2468   00063E                     u1010:
  2469   00063E                     
  2470                           ;main.c: 556:         {;main.c: 557:             LCD_Set_Cursor(1, 6);
  2471   00063E  0E06               	movlw	6
  2472   000640  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2473   000642  0E01               	movlw	1
  2474   000644  EC39  F009         	call	_LCD_Set_Cursor
  2475                           
  2476                           ;main.c: 558:             LCD_Write_Char(' ');
  2477   000648  0E20               	movlw	32
  2478   00064A  EC57  F00A         	call	_LCD_Write_Char
  2479   00064E                     
  2480                           ;main.c: 560:              _delay((unsigned long)((200)*(64000000/4000.0)));
  2481   00064E  0E11               	movlw	17
  2482   000650  6E0E               	movwf	(??_display+1)^0,c
  2483   000652  0E3C               	movlw	60
  2484   000654  6E0D               	movwf	??_display^0,c
  2485   000656  0ECB               	movlw	203
  2486   000658                     u1467:
  2487   000658  2EE8               	decfsz	wreg,f,c
  2488   00065A  D7FE               	bra	u1467
  2489   00065C  2E0D               	decfsz	??_display^0,f,c
  2490   00065E  D7FC               	bra	u1467
  2491   000660  2E0E               	decfsz	(??_display+1)^0,f,c
  2492   000662  D7FA               	bra	u1467
  2493   000664  F000               	nop	
  2494                           
  2495                           ;main.c: 561:         }else{
  2496   000666  EF45  F003         	goto	l2041
  2497   00066A                     l2039:
  2498                           
  2499                           ;main.c: 562:             LCD_Set_Cursor(1, 6);
  2500   00066A  0E06               	movlw	6
  2501   00066C  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2502   00066E  0E01               	movlw	1
  2503   000670  EC39  F009         	call	_LCD_Set_Cursor
  2504                           
  2505                           ;main.c: 563:             LCD_Write_Char(inttochar(EEPROM_Read(0x0A)));
  2506   000674  0E0A               	movlw	10
  2507   000676  ECC9  F00A         	call	_EEPROM_Read
  2508   00067A  6E0D               	movwf	??_display^0,c
  2509   00067C  500D               	movf	??_display^0,w,c
  2510   00067E  6E02               	movwf	inttochar@digit^0,c
  2511   000680  6A03               	clrf	(inttochar@digit+1)^0,c
  2512   000682  ECDD  F00A         	call	_inttochar	;wreg free
  2513   000686  EC57  F00A         	call	_LCD_Write_Char
  2514   00068A                     l2041:
  2515                           
  2516                           ;main.c: 573:         if (buttonCounter == 2)
  2517   00068A  0E02               	movlw	2
  2518   00068C  1809               	xorwf	display@buttonCounter^0,w,c
  2519   00068E  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2520   000690  A4D8               	btfss	status,2,c
  2521   000692  EF4D  F003         	goto	u1021
  2522   000696  EF4F  F003         	goto	u1020
  2523   00069A                     u1021:
  2524   00069A  EF65  F003         	goto	l2047
  2525   00069E                     u1020:
  2526   00069E                     
  2527                           ;main.c: 574:         {;main.c: 575:             LCD_Set_Cursor(1, 8);
  2528   00069E  0E08               	movlw	8
  2529   0006A0  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2530   0006A2  0E01               	movlw	1
  2531   0006A4  EC39  F009         	call	_LCD_Set_Cursor
  2532                           
  2533                           ;main.c: 576:             LCD_Write_Char(' ');
  2534   0006A8  0E20               	movlw	32
  2535   0006AA  EC57  F00A         	call	_LCD_Write_Char
  2536   0006AE                     
  2537                           ;main.c: 578:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2538   0006AE  0E11               	movlw	17
  2539   0006B0  6E0E               	movwf	(??_display+1)^0,c
  2540   0006B2  0E3C               	movlw	60
  2541   0006B4  6E0D               	movwf	??_display^0,c
  2542   0006B6  0ECB               	movlw	203
  2543   0006B8                     u1477:
  2544   0006B8  2EE8               	decfsz	wreg,f,c
  2545   0006BA  D7FE               	bra	u1477
  2546   0006BC  2E0D               	decfsz	??_display^0,f,c
  2547   0006BE  D7FC               	bra	u1477
  2548   0006C0  2E0E               	decfsz	(??_display+1)^0,f,c
  2549   0006C2  D7FA               	bra	u1477
  2550   0006C4  F000               	nop	
  2551                           
  2552                           ;main.c: 579:         }else{
  2553   0006C6  EF75  F003         	goto	l2049
  2554   0006CA                     l2047:
  2555                           
  2556                           ;main.c: 580:             LCD_Set_Cursor(1, 8);
  2557   0006CA  0E08               	movlw	8
  2558   0006CC  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2559   0006CE  0E01               	movlw	1
  2560   0006D0  EC39  F009         	call	_LCD_Set_Cursor
  2561                           
  2562                           ;main.c: 581:             LCD_Write_Char(inttochar(EEPROM_Read(0x0B)));
  2563   0006D4  0E0B               	movlw	11
  2564   0006D6  ECC9  F00A         	call	_EEPROM_Read
  2565   0006DA  6E0D               	movwf	??_display^0,c
  2566   0006DC  500D               	movf	??_display^0,w,c
  2567   0006DE  6E02               	movwf	inttochar@digit^0,c
  2568   0006E0  6A03               	clrf	(inttochar@digit+1)^0,c
  2569   0006E2  ECDD  F00A         	call	_inttochar	;wreg free
  2570   0006E6  EC57  F00A         	call	_LCD_Write_Char
  2571   0006EA                     l2049:
  2572                           
  2573                           ;main.c: 592:         if (buttonCounter == 3)
  2574   0006EA  0E03               	movlw	3
  2575   0006EC  1809               	xorwf	display@buttonCounter^0,w,c
  2576   0006EE  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2577   0006F0  A4D8               	btfss	status,2,c
  2578   0006F2  EF7D  F003         	goto	u1031
  2579   0006F6  EF7F  F003         	goto	u1030
  2580   0006FA                     u1031:
  2581   0006FA  EF95  F003         	goto	l2055
  2582   0006FE                     u1030:
  2583   0006FE                     
  2584                           ;main.c: 593:         {;main.c: 594:             LCD_Set_Cursor(1, 10);
  2585   0006FE  0E0A               	movlw	10
  2586   000700  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2587   000702  0E01               	movlw	1
  2588   000704  EC39  F009         	call	_LCD_Set_Cursor
  2589                           
  2590                           ;main.c: 595:             LCD_Write_Char(' ');
  2591   000708  0E20               	movlw	32
  2592   00070A  EC57  F00A         	call	_LCD_Write_Char
  2593   00070E                     
  2594                           ;main.c: 597:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2595   00070E  0E11               	movlw	17
  2596   000710  6E0E               	movwf	(??_display+1)^0,c
  2597   000712  0E3C               	movlw	60
  2598   000714  6E0D               	movwf	??_display^0,c
  2599   000716  0ECB               	movlw	203
  2600   000718                     u1487:
  2601   000718  2EE8               	decfsz	wreg,f,c
  2602   00071A  D7FE               	bra	u1487
  2603   00071C  2E0D               	decfsz	??_display^0,f,c
  2604   00071E  D7FC               	bra	u1487
  2605   000720  2E0E               	decfsz	(??_display+1)^0,f,c
  2606   000722  D7FA               	bra	u1487
  2607   000724  F000               	nop	
  2608                           
  2609                           ;main.c: 598:         }else{
  2610   000726  EFA5  F003         	goto	l2057
  2611   00072A                     l2055:
  2612                           
  2613                           ;main.c: 599:             LCD_Set_Cursor(1, 10);
  2614   00072A  0E0A               	movlw	10
  2615   00072C  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2616   00072E  0E01               	movlw	1
  2617   000730  EC39  F009         	call	_LCD_Set_Cursor
  2618                           
  2619                           ;main.c: 600:             LCD_Write_Char(inttochar(EEPROM_Read(0x0C)));
  2620   000734  0E0C               	movlw	12
  2621   000736  ECC9  F00A         	call	_EEPROM_Read
  2622   00073A  6E0D               	movwf	??_display^0,c
  2623   00073C  500D               	movf	??_display^0,w,c
  2624   00073E  6E02               	movwf	inttochar@digit^0,c
  2625   000740  6A03               	clrf	(inttochar@digit+1)^0,c
  2626   000742  ECDD  F00A         	call	_inttochar	;wreg free
  2627   000746  EC57  F00A         	call	_LCD_Write_Char
  2628   00074A                     l2057:
  2629                           
  2630                           ;main.c: 610:         if (buttonCounter == 4)
  2631   00074A  0E04               	movlw	4
  2632   00074C  1809               	xorwf	display@buttonCounter^0,w,c
  2633   00074E  100A               	iorwf	(display@buttonCounter+1)^0,w,c
  2634   000750  A4D8               	btfss	status,2,c
  2635   000752  EFAD  F003         	goto	u1041
  2636   000756  EFAF  F003         	goto	u1040
  2637   00075A                     u1041:
  2638   00075A  EFC5  F003         	goto	l2063
  2639   00075E                     u1040:
  2640   00075E                     
  2641                           ;main.c: 611:         {;main.c: 612:             LCD_Set_Cursor(1, 12);
  2642   00075E  0E0C               	movlw	12
  2643   000760  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2644   000762  0E01               	movlw	1
  2645   000764  EC39  F009         	call	_LCD_Set_Cursor
  2646                           
  2647                           ;main.c: 613:             LCD_Write_Char(' ');
  2648   000768  0E20               	movlw	32
  2649   00076A  EC57  F00A         	call	_LCD_Write_Char
  2650   00076E                     
  2651                           ;main.c: 615:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2652   00076E  0E11               	movlw	17
  2653   000770  6E0E               	movwf	(??_display+1)^0,c
  2654   000772  0E3C               	movlw	60
  2655   000774  6E0D               	movwf	??_display^0,c
  2656   000776  0ECB               	movlw	203
  2657   000778                     u1497:
  2658   000778  2EE8               	decfsz	wreg,f,c
  2659   00077A  D7FE               	bra	u1497
  2660   00077C  2E0D               	decfsz	??_display^0,f,c
  2661   00077E  D7FC               	bra	u1497
  2662   000780  2E0E               	decfsz	(??_display+1)^0,f,c
  2663   000782  D7FA               	bra	u1497
  2664   000784  F000               	nop	
  2665                           
  2666                           ;main.c: 616:         }else{
  2667   000786  EFD5  F003         	goto	l2065
  2668   00078A                     l2063:
  2669                           
  2670                           ;main.c: 617:             LCD_Set_Cursor(1, 12);
  2671   00078A  0E0C               	movlw	12
  2672   00078C  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2673   00078E  0E01               	movlw	1
  2674   000790  EC39  F009         	call	_LCD_Set_Cursor
  2675                           
  2676                           ;main.c: 618:             LCD_Write_Char(inttochar(EEPROM_Read(0x0D)));
  2677   000794  0E0D               	movlw	13
  2678   000796  ECC9  F00A         	call	_EEPROM_Read
  2679   00079A  6E0D               	movwf	??_display^0,c
  2680   00079C  500D               	movf	??_display^0,w,c
  2681   00079E  6E02               	movwf	inttochar@digit^0,c
  2682   0007A0  6A03               	clrf	(inttochar@digit+1)^0,c
  2683   0007A2  ECDD  F00A         	call	_inttochar	;wreg free
  2684   0007A6  EC57  F00A         	call	_LCD_Write_Char
  2685   0007AA                     l2065:
  2686                           
  2687                           ;main.c: 621:         LATAbits.LATA7 = 0;
  2688   0007AA  9E89               	bcf	137,7,c	;volatile
  2689                           
  2690                           ;main.c: 624:         if ((display_function_count % 12 == 0) || (display_function_count 
      +                          % 6 == 0))
  2691   0007AC  C037  F001         	movff	_display_function_count,___lwmod@dividend
  2692   0007B0  C038  F002         	movff	_display_function_count+1,___lwmod@dividend+1
  2693   0007B4  0E00               	movlw	0
  2694   0007B6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2695   0007B8  0E0C               	movlw	12
  2696   0007BA  6E03               	movwf	___lwmod@divisor^0,c
  2697   0007BC  EC6E  F009         	call	___lwmod	;wreg free
  2698   0007C0  5001               	movf	?___lwmod^0,w,c
  2699   0007C2  1002               	iorwf	(?___lwmod+1)^0,w,c
  2700   0007C4  B4D8               	btfsc	status,2,c
  2701   0007C6  EFE7  F003         	goto	u1051
  2702   0007CA  EFE9  F003         	goto	u1050
  2703   0007CE                     u1051:
  2704   0007CE  EF52  F004         	goto	l2087
  2705   0007D2                     u1050:
  2706   0007D2  C037  F001         	movff	_display_function_count,___lwmod@dividend
  2707   0007D6  C038  F002         	movff	_display_function_count+1,___lwmod@dividend+1
  2708   0007DA  0E00               	movlw	0
  2709   0007DC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2710   0007DE  0E06               	movlw	6
  2711   0007E0  6E03               	movwf	___lwmod@divisor^0,c
  2712   0007E2  EC6E  F009         	call	___lwmod	;wreg free
  2713   0007E6  5001               	movf	?___lwmod^0,w,c
  2714   0007E8  1002               	iorwf	(?___lwmod+1)^0,w,c
  2715   0007EA  A4D8               	btfss	status,2,c
  2716   0007EC  EFFA  F003         	goto	u1061
  2717   0007F0  EFFC  F003         	goto	u1060
  2718   0007F4                     u1061:
  2719   0007F4  EF70  F004         	goto	l2089
  2720   0007F8                     u1060:
  2721   0007F8  EF52  F004         	goto	l2087
  2722   0007FC                     l2069:
  2723                           
  2724                           ;main.c: 629:                 LCD_Set_Cursor(1, 6);
  2725   0007FC  0E06               	movlw	6
  2726   0007FE  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2727   000800  0E01               	movlw	1
  2728   000802  EC39  F009         	call	_LCD_Set_Cursor
  2729                           
  2730                           ;main.c: 630:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0A)));
  2731   000806  0E0A               	movlw	10
  2732   000808  ECC9  F00A         	call	_EEPROM_Read
  2733   00080C  6E0D               	movwf	??_display^0,c
  2734   00080E  500D               	movf	??_display^0,w,c
  2735   000810  6E02               	movwf	inttochar@digit^0,c
  2736   000812  6A03               	clrf	(inttochar@digit+1)^0,c
  2737   000814  ECDD  F00A         	call	_inttochar	;wreg free
  2738   000818  EC57  F00A         	call	_LCD_Write_Char
  2739   00081C                     l2071:
  2740                           
  2741                           ;main.c: 632:                 _delay((unsigned long)((200)*(64000000/4000.0)));
  2742   00081C  0E11               	movlw	17
  2743   00081E  6E0E               	movwf	(??_display+1)^0,c
  2744   000820  0E3C               	movlw	60
  2745   000822  6E0D               	movwf	??_display^0,c
  2746   000824  0ECB               	movlw	203
  2747   000826                     u1507:
  2748   000826  2EE8               	decfsz	wreg,f,c
  2749   000828  D7FE               	bra	u1507
  2750   00082A  2E0D               	decfsz	??_display^0,f,c
  2751   00082C  D7FC               	bra	u1507
  2752   00082E  2E0E               	decfsz	(??_display+1)^0,f,c
  2753   000830  D7FA               	bra	u1507
  2754   000832  F000               	nop	
  2755                           
  2756                           ;main.c: 633:                 break;
  2757   000834  EF70  F004         	goto	l2089
  2758   000838                     l2073:
  2759                           
  2760                           ;main.c: 636:                 LCD_Set_Cursor(1, 8);
  2761   000838  0E08               	movlw	8
  2762   00083A  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2763   00083C  0E01               	movlw	1
  2764   00083E  EC39  F009         	call	_LCD_Set_Cursor
  2765                           
  2766                           ;main.c: 637:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0B)));
  2767   000842  0E0B               	movlw	11
  2768   000844  ECC9  F00A         	call	_EEPROM_Read
  2769   000848  6E0D               	movwf	??_display^0,c
  2770   00084A  500D               	movf	??_display^0,w,c
  2771   00084C  6E02               	movwf	inttochar@digit^0,c
  2772   00084E  6A03               	clrf	(inttochar@digit+1)^0,c
  2773   000850  ECDD  F00A         	call	_inttochar	;wreg free
  2774   000854  EC57  F00A         	call	_LCD_Write_Char
  2775   000858  EF0E  F004         	goto	l2071
  2776   00085C                     l2077:
  2777                           
  2778                           ;main.c: 643:                 LCD_Set_Cursor(1, 10);
  2779   00085C  0E0A               	movlw	10
  2780   00085E  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2781   000860  0E01               	movlw	1
  2782   000862  EC39  F009         	call	_LCD_Set_Cursor
  2783                           
  2784                           ;main.c: 644:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0C)));
  2785   000866  0E0C               	movlw	12
  2786   000868  ECC9  F00A         	call	_EEPROM_Read
  2787   00086C  6E0D               	movwf	??_display^0,c
  2788   00086E  500D               	movf	??_display^0,w,c
  2789   000870  6E02               	movwf	inttochar@digit^0,c
  2790   000872  6A03               	clrf	(inttochar@digit+1)^0,c
  2791   000874  ECDD  F00A         	call	_inttochar	;wreg free
  2792   000878  EC57  F00A         	call	_LCD_Write_Char
  2793   00087C  EF0E  F004         	goto	l2071
  2794   000880                     l2081:
  2795                           
  2796                           ;main.c: 650:                 LCD_Set_Cursor(1, 12);
  2797   000880  0E0C               	movlw	12
  2798   000882  6E05               	movwf	LCD_Set_Cursor@COL^0,c
  2799   000884  0E01               	movlw	1
  2800   000886  EC39  F009         	call	_LCD_Set_Cursor
  2801                           
  2802                           ;main.c: 651:                 LCD_Write_Char(inttochar(EEPROM_Read(0x0D)));
  2803   00088A  0E0D               	movlw	13
  2804   00088C  ECC9  F00A         	call	_EEPROM_Read
  2805   000890  6E0D               	movwf	??_display^0,c
  2806   000892  500D               	movf	??_display^0,w,c
  2807   000894  6E02               	movwf	inttochar@digit^0,c
  2808   000896  6A03               	clrf	(inttochar@digit+1)^0,c
  2809   000898  ECDD  F00A         	call	_inttochar	;wreg free
  2810   00089C  EC57  F00A         	call	_LCD_Write_Char
  2811   0008A0  EF0E  F004         	goto	l2071
  2812   0008A4                     l2087:
  2813   0008A4  C009  F00D         	movff	display@buttonCounter,??_display
  2814   0008A8  C00A  F00E         	movff	display@buttonCounter+1,??_display+1
  2815                           
  2816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2817                           ; Switch size 1, requested type "simple"
  2818                           ; Number of cases is 1, Range of values is 0 to 0
  2819                           ; switch strategies available:
  2820                           ; Name         Instructions Cycles
  2821                           ; simple_byte            4     3 (average)
  2822                           ;	Chosen strategy is simple_byte
  2823   0008AC  500E               	movf	(??_display+1)^0,w,c
  2824   0008AE  0A00               	xorlw	0	; case 0
  2825   0008B0  B4D8               	btfsc	status,2,c
  2826   0008B2  EF5D  F004         	goto	l2341
  2827   0008B6  EF70  F004         	goto	l2089
  2828   0008BA                     l2341:
  2829                           
  2830                           ; Switch size 1, requested type "simple"
  2831                           ; Number of cases is 4, Range of values is 1 to 4
  2832                           ; switch strategies available:
  2833                           ; Name         Instructions Cycles
  2834                           ; simple_byte           13     7 (average)
  2835                           ;	Chosen strategy is simple_byte
  2836   0008BA  500D               	movf	??_display^0,w,c
  2837   0008BC  0A01               	xorlw	1	; case 1
  2838   0008BE  B4D8               	btfsc	status,2,c
  2839   0008C0  EFFE  F003         	goto	l2069
  2840   0008C4  0A03               	xorlw	3	; case 2
  2841   0008C6  B4D8               	btfsc	status,2,c
  2842   0008C8  EF1C  F004         	goto	l2073
  2843   0008CC  0A01               	xorlw	1	; case 3
  2844   0008CE  B4D8               	btfsc	status,2,c
  2845   0008D0  EF2E  F004         	goto	l2077
  2846   0008D4  0A07               	xorlw	7	; case 4
  2847   0008D6  B4D8               	btfsc	status,2,c
  2848   0008D8  EF40  F004         	goto	l2081
  2849   0008DC  EF70  F004         	goto	l2089
  2850   0008E0                     l2089:
  2851                           
  2852                           ;main.c: 662:     if (update && (display_function_count % 2 == 0))
  2853   0008E0  500B               	movf	display@update^0,w,c
  2854   0008E2  100C               	iorwf	(display@update+1)^0,w,c
  2855   0008E4  B4D8               	btfsc	status,2,c
  2856   0008E6  EF77  F004         	goto	u1071
  2857   0008EA  EF79  F004         	goto	u1070
  2858   0008EE                     u1071:
  2859   0008EE  EF20  F005         	goto	l2131
  2860   0008F2                     u1070:
  2861   0008F2  B037               	btfsc	_display_function_count^0,0,c
  2862   0008F4  EF7E  F004         	goto	u1081
  2863   0008F8  EF80  F004         	goto	u1080
  2864   0008FC                     u1081:
  2865   0008FC  EF20  F005         	goto	l2131
  2866   000900                     u1080:
  2867   000900  EF02  F005         	goto	l2129
  2868   000904                     l2095:
  2869                           
  2870                           ;main.c: 667:             hour_f_digit = EEPROM_Read(0x0A) + 1;
  2871   000904  0E0A               	movlw	10
  2872   000906  ECC9  F00A         	call	_EEPROM_Read
  2873   00090A  6E0D               	movwf	??_display^0,c
  2874   00090C  0E01               	movlw	1
  2875   00090E  240D               	addwf	??_display^0,w,c
  2876   000910  6E0F               	movwf	display@hour_f_digit^0,c
  2877   000912  6A10               	clrf	(display@hour_f_digit+1)^0,c
  2878   000914  0E00               	movlw	0
  2879   000916  2210               	addwfc	(display@hour_f_digit+1)^0,f,c
  2880   000918                     
  2881                           ;main.c: 669:             if (hour_f_digit > 9)
  2882   000918  5010               	movf	(display@hour_f_digit+1)^0,w,c
  2883   00091A  E109               	bnz	u1090
  2884   00091C  0E0A               	movlw	10
  2885   00091E  5C0F               	subwf	display@hour_f_digit^0,w,c
  2886   000920  A0D8               	btfss	status,0,c
  2887   000922  EF95  F004         	goto	u1091
  2888   000926  EF97  F004         	goto	u1090
  2889   00092A                     u1091:
  2890   00092A  EF9B  F004         	goto	l2101
  2891   00092E                     u1090:
  2892   00092E                     
  2893                           ;main.c: 670:                 hour_f_digit = 0;
  2894   00092E  0E00               	movlw	0
  2895   000930  6E10               	movwf	(display@hour_f_digit+1)^0,c
  2896   000932  0E00               	movlw	0
  2897   000934  6E0F               	movwf	display@hour_f_digit^0,c
  2898   000936                     l2101:
  2899                           
  2900                           ;main.c: 671:             EEPROM_Write(0x0A, hour_f_digit);
  2901   000936  C00F  F001         	movff	display@hour_f_digit,EEPROM_Write@data
  2902   00093A  0E0A               	movlw	10
  2903   00093C  EC2F  F00A         	call	_EEPROM_Write
  2904                           
  2905                           ;main.c: 672:             break;
  2906   000940  EF20  F005         	goto	l2131
  2907   000944                     l2103:
  2908                           
  2909                           ;main.c: 674:             hour_s_digit = EEPROM_Read(0x0B) + 1;
  2910   000944  0E0B               	movlw	11
  2911   000946  ECC9  F00A         	call	_EEPROM_Read
  2912   00094A  6E0D               	movwf	??_display^0,c
  2913   00094C  0E01               	movlw	1
  2914   00094E  240D               	addwf	??_display^0,w,c
  2915   000950  6E11               	movwf	display@hour_s_digit^0,c
  2916   000952  6A12               	clrf	(display@hour_s_digit+1)^0,c
  2917   000954  0E00               	movlw	0
  2918   000956  2212               	addwfc	(display@hour_s_digit+1)^0,f,c
  2919   000958                     
  2920                           ;main.c: 676:             if (hour_s_digit > 9)
  2921   000958  5012               	movf	(display@hour_s_digit+1)^0,w,c
  2922   00095A  E109               	bnz	u1100
  2923   00095C  0E0A               	movlw	10
  2924   00095E  5C11               	subwf	display@hour_s_digit^0,w,c
  2925   000960  A0D8               	btfss	status,0,c
  2926   000962  EFB5  F004         	goto	u1101
  2927   000966  EFB7  F004         	goto	u1100
  2928   00096A                     u1101:
  2929   00096A  EFBB  F004         	goto	l2109
  2930   00096E                     u1100:
  2931   00096E                     
  2932                           ;main.c: 677:                 hour_s_digit = 0;
  2933   00096E  0E00               	movlw	0
  2934   000970  6E12               	movwf	(display@hour_s_digit+1)^0,c
  2935   000972  0E00               	movlw	0
  2936   000974  6E11               	movwf	display@hour_s_digit^0,c
  2937   000976                     l2109:
  2938                           
  2939                           ;main.c: 678:             EEPROM_Write(0x0B, hour_s_digit);
  2940   000976  C011  F001         	movff	display@hour_s_digit,EEPROM_Write@data
  2941   00097A  0E0B               	movlw	11
  2942   00097C  EC2F  F00A         	call	_EEPROM_Write
  2943                           
  2944                           ;main.c: 679:             break;
  2945   000980  EF20  F005         	goto	l2131
  2946   000984                     l2111:
  2947                           
  2948                           ;main.c: 681:             minute_f_digit = EEPROM_Read(0x0C) + 1;
  2949   000984  0E0C               	movlw	12
  2950   000986  ECC9  F00A         	call	_EEPROM_Read
  2951   00098A  6E0D               	movwf	??_display^0,c
  2952   00098C  0E01               	movlw	1
  2953   00098E  240D               	addwf	??_display^0,w,c
  2954   000990  6E13               	movwf	display@minute_f_digit^0,c
  2955   000992  6A14               	clrf	(display@minute_f_digit+1)^0,c
  2956   000994  0E00               	movlw	0
  2957   000996  2214               	addwfc	(display@minute_f_digit+1)^0,f,c
  2958   000998                     
  2959                           ;main.c: 683:             if (minute_f_digit > 5)
  2960   000998  5014               	movf	(display@minute_f_digit+1)^0,w,c
  2961   00099A  E109               	bnz	u1110
  2962   00099C  0E06               	movlw	6
  2963   00099E  5C13               	subwf	display@minute_f_digit^0,w,c
  2964   0009A0  A0D8               	btfss	status,0,c
  2965   0009A2  EFD5  F004         	goto	u1111
  2966   0009A6  EFD7  F004         	goto	u1110
  2967   0009AA                     u1111:
  2968   0009AA  EFDB  F004         	goto	l2117
  2969   0009AE                     u1110:
  2970   0009AE                     
  2971                           ;main.c: 684:                 minute_f_digit = 0;
  2972   0009AE  0E00               	movlw	0
  2973   0009B0  6E14               	movwf	(display@minute_f_digit+1)^0,c
  2974   0009B2  0E00               	movlw	0
  2975   0009B4  6E13               	movwf	display@minute_f_digit^0,c
  2976   0009B6                     l2117:
  2977                           
  2978                           ;main.c: 685:             EEPROM_Write(0x0C, minute_f_digit);
  2979   0009B6  C013  F001         	movff	display@minute_f_digit,EEPROM_Write@data
  2980   0009BA  0E0C               	movlw	12
  2981   0009BC  EC2F  F00A         	call	_EEPROM_Write
  2982                           
  2983                           ;main.c: 686:             break;
  2984   0009C0  EF20  F005         	goto	l2131
  2985   0009C4                     l2119:
  2986                           
  2987                           ;main.c: 688:             minute_s_digit = EEPROM_Read(0x0D) + 1;
  2988   0009C4  0E0D               	movlw	13
  2989   0009C6  ECC9  F00A         	call	_EEPROM_Read
  2990   0009CA  6E0D               	movwf	??_display^0,c
  2991   0009CC  0E01               	movlw	1
  2992   0009CE  240D               	addwf	??_display^0,w,c
  2993   0009D0  6E15               	movwf	display@minute_s_digit^0,c
  2994   0009D2  6A16               	clrf	(display@minute_s_digit+1)^0,c
  2995   0009D4  0E00               	movlw	0
  2996   0009D6  2216               	addwfc	(display@minute_s_digit+1)^0,f,c
  2997   0009D8                     
  2998                           ;main.c: 690:             if (minute_s_digit > 9)
  2999   0009D8  5016               	movf	(display@minute_s_digit+1)^0,w,c
  3000   0009DA  E109               	bnz	u1120
  3001   0009DC  0E0A               	movlw	10
  3002   0009DE  5C15               	subwf	display@minute_s_digit^0,w,c
  3003   0009E0  A0D8               	btfss	status,0,c
  3004   0009E2  EFF5  F004         	goto	u1121
  3005   0009E6  EFF7  F004         	goto	u1120
  3006   0009EA                     u1121:
  3007   0009EA  EFFB  F004         	goto	l2125
  3008   0009EE                     u1120:
  3009   0009EE                     
  3010                           ;main.c: 691:                 minute_s_digit = 0;
  3011   0009EE  0E00               	movlw	0
  3012   0009F0  6E16               	movwf	(display@minute_s_digit+1)^0,c
  3013   0009F2  0E00               	movlw	0
  3014   0009F4  6E15               	movwf	display@minute_s_digit^0,c
  3015   0009F6                     l2125:
  3016                           
  3017                           ;main.c: 692:             EEPROM_Write(0x0D, minute_s_digit);
  3018   0009F6  C015  F001         	movff	display@minute_s_digit,EEPROM_Write@data
  3019   0009FA  0E0D               	movlw	13
  3020   0009FC  EC2F  F00A         	call	_EEPROM_Write
  3021                           
  3022                           ;main.c: 693:             break;
  3023   000A00  EF20  F005         	goto	l2131
  3024   000A04                     l2129:
  3025   000A04  C009  F00D         	movff	display@buttonCounter,??_display
  3026   000A08  C00A  F00E         	movff	display@buttonCounter+1,??_display+1
  3027                           
  3028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3029                           ; Switch size 1, requested type "simple"
  3030                           ; Number of cases is 1, Range of values is 0 to 0
  3031                           ; switch strategies available:
  3032                           ; Name         Instructions Cycles
  3033                           ; simple_byte            4     3 (average)
  3034                           ;	Chosen strategy is simple_byte
  3035   000A0C  500E               	movf	(??_display+1)^0,w,c
  3036   000A0E  0A00               	xorlw	0	; case 0
  3037   000A10  B4D8               	btfsc	status,2,c
  3038   000A12  EF0D  F005         	goto	l2343
  3039   000A16  EF20  F005         	goto	l2131
  3040   000A1A                     l2343:
  3041                           
  3042                           ; Switch size 1, requested type "simple"
  3043                           ; Number of cases is 4, Range of values is 1 to 4
  3044                           ; switch strategies available:
  3045                           ; Name         Instructions Cycles
  3046                           ; simple_byte           13     7 (average)
  3047                           ;	Chosen strategy is simple_byte
  3048   000A1A  500D               	movf	??_display^0,w,c
  3049   000A1C  0A01               	xorlw	1	; case 1
  3050   000A1E  B4D8               	btfsc	status,2,c
  3051   000A20  EF82  F004         	goto	l2095
  3052   000A24  0A03               	xorlw	3	; case 2
  3053   000A26  B4D8               	btfsc	status,2,c
  3054   000A28  EFA2  F004         	goto	l2103
  3055   000A2C  0A01               	xorlw	1	; case 3
  3056   000A2E  B4D8               	btfsc	status,2,c
  3057   000A30  EFC2  F004         	goto	l2111
  3058   000A34  0A07               	xorlw	7	; case 4
  3059   000A36  B4D8               	btfsc	status,2,c
  3060   000A38  EFE2  F004         	goto	l2119
  3061   000A3C  EF20  F005         	goto	l2131
  3062   000A40                     l2131:
  3063                           
  3064                           ;main.c: 701:     if (display_function_count > 1000)
  3065   000A40  0EE9               	movlw	233
  3066   000A42  5C37               	subwf	_display_function_count^0,w,c
  3067   000A44  0E03               	movlw	3
  3068   000A46  5838               	subwfb	(_display_function_count+1)^0,w,c
  3069   000A48  A0D8               	btfss	status,0,c
  3070   000A4A  EF29  F005         	goto	u1131
  3071   000A4E  EF2B  F005         	goto	u1130
  3072   000A52                     u1131:
  3073   000A52  EF2F  F005         	goto	l229
  3074   000A56                     u1130:
  3075   000A56                     
  3076                           ;main.c: 702:         display_function_count = 0;
  3077   000A56  0E00               	movlw	0
  3078   000A58  6E38               	movwf	(_display_function_count+1)^0,c
  3079   000A5A  0E00               	movlw	0
  3080   000A5C  6E37               	movwf	_display_function_count^0,c
  3081   000A5E                     l229:
  3082   000A5E  0012               	return		;funcret
  3083   000A60                     __end_of_display:
  3084                           	callstack 0
  3085                           
  3086 ;; *************** function _inttochar *****************
  3087 ;; Defined at:
  3088 ;;		line 708 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  digit           2    1[COMRAM] unsigned int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      unsigned char 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3102 ;;      Params:         2       0       0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0
  3105 ;;      Totals:         2       0       0       0       0       0       0
  3106 ;;Total ram usage:        2 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_startUpcounter
  3112 ;;		_display
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text14
  3117   0015BA                     __ptext14:
  3118                           	callstack 0
  3119   0015BA                     _inttochar:
  3120                           	callstack 29
  3121   0015BA                     
  3122                           ;main.c: 708: unsigned char inttochar(unsigned int digit);main.c: 709: {;main.c: 713:   
      +                            return digit + '0';
  3123   0015BA  5002               	movf	inttochar@digit^0,w,c
  3124   0015BC  0F30               	addlw	48
  3125   0015BE  0012               	return		;funcret
  3126   0015C0                     __end_of_inttochar:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function ___lwmod *****************
  3130 ;; Defined at:
  3131 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  dividend        2    0[COMRAM] unsigned int 
  3134 ;;  divisor         2    2[COMRAM] unsigned int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  counter         1    4[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    0[COMRAM] unsigned int 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3146 ;;      Params:         4       0       0       0       0       0       0
  3147 ;;      Locals:         1       0       0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0
  3149 ;;      Totals:         5       0       0       0       0       0       0
  3150 ;;Total ram usage:        5 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_display
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text15
  3160   0012DC                     __ptext15:
  3161                           	callstack 0
  3162   0012DC                     ___lwmod:
  3163                           	callstack 29
  3164   0012DC  5003               	movf	___lwmod@divisor^0,w,c
  3165   0012DE  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3166   0012E0  B4D8               	btfsc	status,2,c
  3167   0012E2  EF75  F009         	goto	u741
  3168   0012E6  EF77  F009         	goto	u740
  3169   0012EA                     u741:
  3170   0012EA  EF9B  F009         	goto	l831
  3171   0012EE                     u740:
  3172   0012EE  0E01               	movlw	1
  3173   0012F0  6E05               	movwf	___lwmod@counter^0,c
  3174   0012F2  EF7F  F009         	goto	l1843
  3175   0012F6                     l1841:
  3176   0012F6  90D8               	bcf	status,0,c
  3177   0012F8  3603               	rlcf	___lwmod@divisor^0,f,c
  3178   0012FA  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3179   0012FC  2A05               	incf	___lwmod@counter^0,f,c
  3180   0012FE                     l1843:
  3181   0012FE  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3182   001300  EF84  F009         	goto	u751
  3183   001304  EF86  F009         	goto	u750
  3184   001308                     u751:
  3185   001308  EF7B  F009         	goto	l1841
  3186   00130C                     u750:
  3187   00130C                     l1845:
  3188   00130C  5003               	movf	___lwmod@divisor^0,w,c
  3189   00130E  5C01               	subwf	___lwmod@dividend^0,w,c
  3190   001310  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3191   001312  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3192   001314  A0D8               	btfss	status,0,c
  3193   001316  EF8F  F009         	goto	u761
  3194   00131A  EF91  F009         	goto	u760
  3195   00131E                     u761:
  3196   00131E  EF95  F009         	goto	l1849
  3197   001322                     u760:
  3198   001322  5003               	movf	___lwmod@divisor^0,w,c
  3199   001324  5E01               	subwf	___lwmod@dividend^0,f,c
  3200   001326  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3201   001328  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3202   00132A                     l1849:
  3203   00132A  90D8               	bcf	status,0,c
  3204   00132C  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3205   00132E  3203               	rrcf	___lwmod@divisor^0,f,c
  3206   001330  2E05               	decfsz	___lwmod@counter^0,f,c
  3207   001332  EF86  F009         	goto	l1845
  3208   001336                     l831:
  3209   001336  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3210   00133A  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3211   00133E  0012               	return		;funcret
  3212   001340                     __end_of___lwmod:
  3213                           	callstack 0
  3214                           
  3215 ;; *************** function _LCD_Write_Char *****************
  3216 ;; Defined at:
  3217 ;;		line 130 in file "main.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  Data            1    wreg     unsigned char 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  Data            1    3[COMRAM] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3231 ;;      Params:         0       0       0       0       0       0       0
  3232 ;;      Locals:         1       0       0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0
  3234 ;;      Totals:         1       0       0       0       0       0       0
  3235 ;;Total ram usage:        1 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 3
  3238 ;; This function calls:
  3239 ;;		_LCD_Write_4Bit
  3240 ;; This function is called by:
  3241 ;;		_LCD_Write_String
  3242 ;;		_display
  3243 ;;		_lcd_print
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text16
  3248   0014AE                     __ptext16:
  3249                           	callstack 0
  3250   0014AE                     _LCD_Write_Char:
  3251                           	callstack 24
  3252                           
  3253                           ;incstack = 0
  3254                           ;LCD_Write_Char@Data stored from wreg
  3255   0014AE  6E04               	movwf	LCD_Write_Char@Data^0,c
  3256   0014B0                     
  3257                           ;main.c: 130: void LCD_Write_Char(char Data);main.c: 131: {;main.c: 132:     RS = 1;
  3258   0014B0  0E01               	movlw	1
  3259   0014B2  6E44               	movwf	_RS^0,c
  3260   0014B4                     
  3261                           ;main.c: 133:     LCD_Write_4Bit(Data & 0xF0);
  3262   0014B4  5004               	movf	LCD_Write_Char@Data^0,w,c
  3263   0014B6  0BF0               	andlw	240
  3264   0014B8  EC47  F00A         	call	_LCD_Write_4Bit
  3265   0014BC                     
  3266                           ;main.c: 134:     LCD_Write_4Bit((Data << 4) & 0xF0);
  3267   0014BC  3804               	swapf	LCD_Write_Char@Data^0,w,c
  3268   0014BE  0BF0               	andlw	240
  3269   0014C0  0BF0               	andlw	240
  3270   0014C2  EC47  F00A         	call	_LCD_Write_4Bit
  3271   0014C6  0012               	return		;funcret
  3272   0014C8                     __end_of_LCD_Write_Char:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _LCD_Set_Cursor *****************
  3276 ;; Defined at:
  3277 ;;		line 143 in file "main.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  ROW             1    wreg     unsigned char 
  3280 ;;  COL             1    4[COMRAM] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  ROW             1    7[COMRAM] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3292 ;;      Params:         1       0       0       0       0       0       0
  3293 ;;      Locals:         1       0       0       0       0       0       0
  3294 ;;      Temps:          2       0       0       0       0       0       0
  3295 ;;      Totals:         4       0       0       0       0       0       0
  3296 ;;Total ram usage:        4 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 4
  3299 ;; This function calls:
  3300 ;;		_LCD_CMD
  3301 ;; This function is called by:
  3302 ;;		_stopMessage
  3303 ;;		_display
  3304 ;;		_lcd_print
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text17
  3309   001272                     __ptext17:
  3310                           	callstack 0
  3311   001272                     _LCD_Set_Cursor:
  3312                           	callstack 24
  3313                           
  3314                           ;incstack = 0
  3315                           ;LCD_Set_Cursor@ROW stored from wreg
  3316   001272  6E08               	movwf	LCD_Set_Cursor@ROW^0,c
  3317   001274                     
  3318                           ;main.c: 143: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);main.c: 144: {;m
      +                          ain.c: 145:     switch (ROW)
  3319   001274  EF54  F009         	goto	l1753
  3320   001278                     l1745:
  3321                           
  3322                           ;main.c: 148:         LCD_CMD(0xC0 + COL - 1);
  3323   001278  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3324   00127A  0FBF               	addlw	191
  3325   00127C  EC64  F00A         	call	_LCD_CMD
  3326                           
  3327                           ;main.c: 149:         break;
  3328   001280  EF6D  F009         	goto	l108
  3329   001284                     l1747:
  3330                           
  3331                           ;main.c: 151:         LCD_CMD(0x94 + COL - 1);
  3332   001284  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3333   001286  0F93               	addlw	147
  3334   001288  EC64  F00A         	call	_LCD_CMD
  3335                           
  3336                           ;main.c: 152:         break;
  3337   00128C  EF6D  F009         	goto	l108
  3338   001290                     l1749:
  3339                           
  3340                           ;main.c: 154:         LCD_CMD(0xD4 + COL - 1);
  3341   001290  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3342   001292  0FD3               	addlw	211
  3343   001294  EC64  F00A         	call	_LCD_CMD
  3344                           
  3345                           ;main.c: 155:         break;
  3346   001298  EF6D  F009         	goto	l108
  3347   00129C                     l1751:
  3348                           
  3349                           ;main.c: 158:         LCD_CMD(0x80 + COL - 1);
  3350   00129C  5005               	movf	LCD_Set_Cursor@COL^0,w,c
  3351   00129E  0F7F               	addlw	127
  3352   0012A0  EC64  F00A         	call	_LCD_CMD
  3353                           
  3354                           ;main.c: 159:     }
  3355   0012A4  EF6D  F009         	goto	l108
  3356   0012A8                     l1753:
  3357   0012A8  5008               	movf	LCD_Set_Cursor@ROW^0,w,c
  3358   0012AA  6E06               	movwf	??_LCD_Set_Cursor^0,c
  3359   0012AC  6A07               	clrf	(??_LCD_Set_Cursor+1)^0,c
  3360                           
  3361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3362                           ; Switch size 1, requested type "simple"
  3363                           ; Number of cases is 1, Range of values is 0 to 0
  3364                           ; switch strategies available:
  3365                           ; Name         Instructions Cycles
  3366                           ; simple_byte            4     3 (average)
  3367                           ;	Chosen strategy is simple_byte
  3368   0012AE  5007               	movf	(??_LCD_Set_Cursor+1)^0,w,c
  3369   0012B0  0A00               	xorlw	0	; case 0
  3370   0012B2  B4D8               	btfsc	status,2,c
  3371   0012B4  EF5E  F009         	goto	l2345
  3372   0012B8  EF4E  F009         	goto	l1751
  3373   0012BC                     l2345:
  3374                           
  3375                           ; Switch size 1, requested type "simple"
  3376                           ; Number of cases is 3, Range of values is 2 to 4
  3377                           ; switch strategies available:
  3378                           ; Name         Instructions Cycles
  3379                           ; simple_byte           10     6 (average)
  3380                           ;	Chosen strategy is simple_byte
  3381   0012BC  5006               	movf	??_LCD_Set_Cursor^0,w,c
  3382   0012BE  0A02               	xorlw	2	; case 2
  3383   0012C0  B4D8               	btfsc	status,2,c
  3384   0012C2  EF3C  F009         	goto	l1745
  3385   0012C6  0A01               	xorlw	1	; case 3
  3386   0012C8  B4D8               	btfsc	status,2,c
  3387   0012CA  EF42  F009         	goto	l1747
  3388   0012CE  0A07               	xorlw	7	; case 4
  3389   0012D0  B4D8               	btfsc	status,2,c
  3390   0012D2  EF48  F009         	goto	l1749
  3391   0012D6  EF4E  F009         	goto	l1751
  3392   0012DA                     l108:
  3393   0012DA  0012               	return		;funcret
  3394   0012DC                     __end_of_LCD_Set_Cursor:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _LCD_CMD *****************
  3398 ;; Defined at:
  3399 ;;		line 123 in file "main.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  CMD             1    wreg     unsigned char 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  CMD             1    3[COMRAM] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3413 ;;      Params:         0       0       0       0       0       0       0
  3414 ;;      Locals:         1       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0
  3416 ;;      Totals:         1       0       0       0       0       0       0
  3417 ;;Total ram usage:        1 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 3
  3420 ;; This function calls:
  3421 ;;		_LCD_Write_4Bit
  3422 ;; This function is called by:
  3423 ;;		_LCD_Init
  3424 ;;		_LCD_Set_Cursor
  3425 ;;		_LCD_CLR
  3426 ;;		_LCD_SL
  3427 ;;		_LCD_SR
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text18
  3432   0014C8                     __ptext18:
  3433                           	callstack 0
  3434   0014C8                     _LCD_CMD:
  3435                           	callstack 24
  3436                           
  3437                           ;incstack = 0
  3438                           ;LCD_CMD@CMD stored from wreg
  3439   0014C8  6E04               	movwf	LCD_CMD@CMD^0,c
  3440   0014CA                     
  3441                           ;main.c: 123: void LCD_CMD(unsigned char CMD);main.c: 124: {;main.c: 125:     RS = 0;
  3442   0014CA  0E00               	movlw	0
  3443   0014CC  6E44               	movwf	_RS^0,c
  3444   0014CE                     
  3445                           ;main.c: 126:     LCD_Write_4Bit(CMD & 0xF0);
  3446   0014CE  5004               	movf	LCD_CMD@CMD^0,w,c
  3447   0014D0  0BF0               	andlw	240
  3448   0014D2  EC47  F00A         	call	_LCD_Write_4Bit
  3449   0014D6                     
  3450                           ;main.c: 127:     LCD_Write_4Bit((CMD << 4) & 0xF0);
  3451   0014D6  3804               	swapf	LCD_CMD@CMD^0,w,c
  3452   0014D8  0BF0               	andlw	240
  3453   0014DA  0BF0               	andlw	240
  3454   0014DC  EC47  F00A         	call	_LCD_Write_4Bit
  3455   0014E0  0012               	return		;funcret
  3456   0014E2                     __end_of_LCD_CMD:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _LCD_Write_4Bit *****************
  3460 ;; Defined at:
  3461 ;;		line 114 in file "main.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  Nibble          1    wreg     unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  Nibble          1    2[COMRAM] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3475 ;;      Params:         0       0       0       0       0       0       0
  3476 ;;      Locals:         1       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0
  3478 ;;      Totals:         1       0       0       0       0       0       0
  3479 ;;Total ram usage:        1 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 2
  3482 ;; This function calls:
  3483 ;;		_IO_Expander_Write
  3484 ;; This function is called by:
  3485 ;;		_LCD_CMD
  3486 ;;		_LCD_Write_Char
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text19
  3491   00148E                     __ptext19:
  3492                           	callstack 0
  3493   00148E                     _LCD_Write_4Bit:
  3494                           	callstack 24
  3495                           
  3496                           ;incstack = 0
  3497                           ;LCD_Write_4Bit@Nibble stored from wreg
  3498   00148E  6E03               	movwf	LCD_Write_4Bit@Nibble^0,c
  3499   001490                     
  3500                           ;main.c: 114: void LCD_Write_4Bit(unsigned char Nibble);main.c: 115: {;main.c: 117:     
      +                          Nibble |= RS;
  3501   001490  5044               	movf	_RS^0,w,c
  3502   001492  1203               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  3503   001494                     
  3504                           ;main.c: 118:     IO_Expander_Write(Nibble | 0x04);
  3505   001494  5003               	movf	LCD_Write_4Bit@Nibble^0,w,c
  3506   001496  0904               	iorlw	4
  3507   001498  EC71  F00A         	call	_IO_Expander_Write
  3508   00149C                     
  3509                           ;main.c: 119:     IO_Expander_Write(Nibble & 0xFB);
  3510   00149C  5003               	movf	LCD_Write_4Bit@Nibble^0,w,c
  3511   00149E  0BFB               	andlw	251
  3512   0014A0  EC71  F00A         	call	_IO_Expander_Write
  3513   0014A4                     
  3514                           ;main.c: 120:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3515   0014A4  0EA0               	movlw	160
  3516   0014A6                     u1517:
  3517   0014A6  D000               	nop2	
  3518   0014A8  2EE8               	decfsz	wreg,f,c
  3519   0014AA  D7FD               	bra	u1517
  3520   0014AC  0012               	return		;funcret
  3521   0014AE                     __end_of_LCD_Write_4Bit:
  3522                           	callstack 0
  3523                           
  3524 ;; *************** function _IO_Expander_Write *****************
  3525 ;; Defined at:
  3526 ;;		line 106 in file "main.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  Data            1    wreg     unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  Data            1    1[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3540 ;;      Params:         0       0       0       0       0       0       0
  3541 ;;      Locals:         1       0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0
  3543 ;;      Totals:         1       0       0       0       0       0       0
  3544 ;;Total ram usage:        1 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 1
  3547 ;; This function calls:
  3548 ;;		_I2C2_Send
  3549 ;;		_I2C2_Start
  3550 ;;		_I2C2_Stop
  3551 ;; This function is called by:
  3552 ;;		_LCD_Init
  3553 ;;		_LCD_Write_4Bit
  3554 ;;		_Backlight
  3555 ;;		_noBacklight
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text20
  3560   0014E2                     __ptext20:
  3561                           	callstack 0
  3562   0014E2                     _IO_Expander_Write:
  3563                           	callstack 24
  3564                           
  3565                           ;incstack = 0
  3566                           ;IO_Expander_Write@Data stored from wreg
  3567   0014E2  6E02               	movwf	IO_Expander_Write@Data^0,c
  3568   0014E4                     
  3569                           ;main.c: 106: void IO_Expander_Write(unsigned char Data);main.c: 107: {;main.c: 108:    
      +                           I2C2_Start();
  3570   0014E4  ECB7  F00A         	call	_I2C2_Start	;wreg free
  3571   0014E8                     
  3572                           ;main.c: 109:     I2C2_Send(i2c_add);
  3573   0014E8  5045               	movf	_i2c_add^0,w,c
  3574   0014EA  EC7E  F00A         	call	_I2C2_Send
  3575   0014EE                     
  3576                           ;main.c: 110:     I2C2_Send(Data | BackLight_State);
  3577   0014EE  5002               	movf	IO_Expander_Write@Data^0,w,c
  3578   0014F0  1036               	iorwf	_BackLight_State^0,w,c
  3579   0014F2  EC7E  F00A         	call	_I2C2_Send
  3580   0014F6                     
  3581                           ;main.c: 111:     I2C2_Stop();
  3582   0014F6  ECAD  F00A         	call	_I2C2_Stop	;wreg free
  3583   0014FA  0012               	return		;funcret
  3584   0014FC                     __end_of_IO_Expander_Write:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _I2C2_Stop *****************
  3588 ;; Defined at:
  3589 ;;		line 82 in file "i2c.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		None
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3603 ;;      Params:         0       0       0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_IO_Expander_Write
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text21
  3617   00155A                     __ptext21:
  3618                           	callstack 0
  3619   00155A                     _I2C2_Stop:
  3620                           	callstack 24
  3621   00155A                     
  3622                           ;i2c.c: 83:  SSP2CON2bits.PEN = 1;
  3623   00155A  846B               	bsf	107,2,c	;volatile
  3624   00155C                     l300:
  3625   00155C  AEA4               	btfss	164,7,c	;volatile
  3626   00155E  EFB3  F00A         	goto	u31
  3627   001562  EFB5  F00A         	goto	u30
  3628   001566                     u31:
  3629   001566  EFAE  F00A         	goto	l300
  3630   00156A                     u30:
  3631   00156A                     
  3632                           ;i2c.c: 85:  PIR3bits.SSP2IF = 0;
  3633   00156A  9EA4               	bcf	164,7,c	;volatile
  3634   00156C  0012               	return		;funcret
  3635   00156E                     __end_of_I2C2_Stop:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _I2C2_Start *****************
  3639 ;; Defined at:
  3640 ;;		line 51 in file "i2c.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3654 ;;      Params:         0       0       0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_IO_Expander_Write
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text22
  3668   00156E                     __ptext22:
  3669                           	callstack 0
  3670   00156E                     _I2C2_Start:
  3671                           	callstack 24
  3672   00156E                     
  3673                           ;i2c.c: 52:  SSP2CON2bits.SEN = 1;
  3674   00156E  806B               	bsf	107,0,c	;volatile
  3675   001570                     l288:
  3676   001570  AEA4               	btfss	164,7,c	;volatile
  3677   001572  EFBD  F00A         	goto	u11
  3678   001576  EFBF  F00A         	goto	u10
  3679   00157A                     u11:
  3680   00157A  EFB8  F00A         	goto	l288
  3681   00157E                     u10:
  3682   00157E                     
  3683                           ;i2c.c: 54:  PIR3bits.SSP2IF = 0;
  3684   00157E  9EA4               	bcf	164,7,c	;volatile
  3685   001580  0012               	return		;funcret
  3686   001582                     __end_of_I2C2_Start:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _I2C2_Send *****************
  3690 ;; Defined at:
  3691 ;;		line 131 in file "i2c.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  BYTE            1    wreg     unsigned char 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  BYTE            1    0[COMRAM] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      unsigned char 
  3698 ;; Registers used:
  3699 ;;		wreg
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3705 ;;      Params:         0       0       0       0       0       0       0
  3706 ;;      Locals:         1       0       0       0       0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0
  3708 ;;      Totals:         1       0       0       0       0       0       0
  3709 ;;Total ram usage:        1 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_IO_Expander_Write
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text23
  3719   0014FC                     __ptext23:
  3720                           	callstack 0
  3721   0014FC                     _I2C2_Send:
  3722                           	callstack 24
  3723                           
  3724                           ;incstack = 0
  3725                           ;I2C2_Send@BYTE stored from wreg
  3726   0014FC  6E01               	movwf	I2C2_Send@BYTE^0,c
  3727   0014FE                     
  3728                           ;i2c.c: 132:  SSP2BUF = BYTE;
  3729   0014FE  C001  FF6F         	movff	I2C2_Send@BYTE,3951	;volatile
  3730   001502                     l318:
  3731   001502  AEA4               	btfss	164,7,c	;volatile
  3732   001504  EF86  F00A         	goto	u21
  3733   001508  EF88  F00A         	goto	u20
  3734   00150C                     u21:
  3735   00150C  EF81  F00A         	goto	l318
  3736   001510                     u20:
  3737   001510                     
  3738                           ;i2c.c: 134:  PIR3bits.SSP2IF = 0;
  3739   001510  9EA4               	bcf	164,7,c	;volatile
  3740                           
  3741                           ;i2c.c: 135:  return SSP2CON2bits.ACKSTAT;;	Return value of _I2C2_Send is never used
  3742   001512  506B               	movf	107,w,c	;volatile
  3743   001514  0012               	return		;funcret
  3744   001516                     __end_of_I2C2_Send:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _blue_led *****************
  3748 ;; Defined at:
  3749 ;;		line 213 in file "main.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		None
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3763 ;;      Params:         0       0       0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0
  3766 ;;      Totals:         0       0       0       0       0       0       0
  3767 ;;Total ram usage:        0 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text24
  3777   0015B2                     __ptext24:
  3778                           	callstack 0
  3779   0015B2                     _blue_led:
  3780                           	callstack 30
  3781   0015B2                     
  3782                           ;main.c: 215:     LATAbits.LATA6 = 0;
  3783   0015B2  9C89               	bcf	137,6,c	;volatile
  3784                           
  3785                           ;main.c: 217:     LATAbits.LATA5 = 1;
  3786   0015B4  8A89               	bsf	137,5,c	;volatile
  3787                           
  3788                           ;main.c: 218:     LATAbits.LATA4 = 1;
  3789   0015B6  8889               	bsf	137,4,c	;volatile
  3790   0015B8  0012               	return		;funcret
  3791   0015BA                     __end_of_blue_led:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _I2C2_Init *****************
  3795 ;; Defined at:
  3796 ;;		line 20 in file "i2c.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         0       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text25
  3824   001516                     __ptext25:
  3825                           	callstack 0
  3826   001516                     _I2C2_Init:
  3827                           	callstack 30
  3828   001516                     
  3829                           ;i2c.c: 21:     TRISBbits.RB2 = 1;
  3830   001516  8493               	bsf	147,2,c	;volatile
  3831                           
  3832                           ;i2c.c: 22:     TRISBbits.RB1 = 1;
  3833   001518  8293               	bsf	147,1,c	;volatile
  3834                           
  3835                           ;i2c.c: 25:     ANSELBbits.ANSB2 = 0;
  3836   00151A  010F               	movlb	15	; () banked
  3837   00151C  9539               	bcf	57,2,b	;volatile
  3838                           
  3839                           ;i2c.c: 26:     ANSELBbits.ANSB1 = 0;
  3840   00151E  9339               	bcf	57,1,b	;volatile
  3841   001520                     
  3842                           ; BSR set to: 15
  3843                           ;i2c.c: 28:     SSP2STAT = 0b10000000;
  3844   001520  0E80               	movlw	128
  3845   001522  6E6D               	movwf	109,c	;volatile
  3846                           
  3847                           ;i2c.c: 37:  SSP2CON1 = 0b00101000;
  3848   001524  0E28               	movlw	40
  3849   001526  6E6C               	movwf	108,c	;volatile
  3850                           
  3851                           ;i2c.c: 38:     SSP2ADD = 159u;
  3852   001528  0E9F               	movlw	159
  3853   00152A  6E6E               	movwf	110,c	;volatile
  3854   00152C                     
  3855                           ; BSR set to: 15
  3856   00152C  0012               	return		;funcret
  3857   00152E                     __end_of_I2C2_Init:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function _EEPROM_Mem_Initialise *****************
  3861 ;; Defined at:
  3862 ;;		line 730 in file "main.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  EEPROM_Mem_c    2    4[COMRAM] unsigned int 
  3867 ;;  eeprom_addr     1    6[COMRAM] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3877 ;;      Params:         0       0       0       0       0       0       0
  3878 ;;      Locals:         3       0       0       0       0       0       0
  3879 ;;      Temps:          2       0       0       0       0       0       0
  3880 ;;      Totals:         5       0       0       0       0       0       0
  3881 ;;Total ram usage:        5 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 1
  3884 ;; This function calls:
  3885 ;;		_EEPROM_Read
  3886 ;;		_EEPROM_Write
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text26
  3893   0011E2                     __ptext26:
  3894                           	callstack 0
  3895   0011E2                     _EEPROM_Mem_Initialise:
  3896                           	callstack 29
  3897   0011E2                     
  3898                           ;main.c: 731:     unsigned char eeprom_addr;;main.c: 732:     unsigned int EEPROM_Mem_ch
      +                          eck;;main.c: 735:    _delay((unsigned long)((1500)*(64000000/4000.0)));
  3899   0011E2  0E7A               	movlw	122
  3900   0011E4  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  3901   0011E6  0EC1               	movlw	193
  3902   0011E8  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  3903   0011EA  0E82               	movlw	130
  3904   0011EC                     u1527:
  3905   0011EC  2EE8               	decfsz	wreg,f,c
  3906   0011EE  D7FE               	bra	u1527
  3907   0011F0  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  3908   0011F2  D7FC               	bra	u1527
  3909   0011F4  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  3910   0011F6  D7FA               	bra	u1527
  3911   0011F8                     
  3912                           ;main.c: 737:     EEPROM_Mem_check = EEPROM_Read(0x01);
  3913   0011F8  0E01               	movlw	1
  3914   0011FA  ECC9  F00A         	call	_EEPROM_Read
  3915   0011FE  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  3916   001200  5003               	movf	??_EEPROM_Mem_Initialise^0,w,c
  3917   001202  6E05               	movwf	EEPROM_Mem_Initialise@EEPROM_Mem_check^0,c
  3918   001204  6A06               	clrf	(EEPROM_Mem_Initialise@EEPROM_Mem_check+1)^0,c
  3919   001206                     
  3920                           ;main.c: 739:     if(EEPROM_Mem_check != 1){
  3921   001206  0405               	decf	EEPROM_Mem_Initialise@EEPROM_Mem_check^0,w,c
  3922   001208  1006               	iorwf	(EEPROM_Mem_Initialise@EEPROM_Mem_check+1)^0,w,c
  3923   00120A  B4D8               	btfsc	status,2,c
  3924   00120C  EF0A  F009         	goto	u1141
  3925   001210  EF0C  F009         	goto	u1140
  3926   001214                     u1141:
  3927   001214  EF38  F009         	goto	l241
  3928   001218                     u1140:
  3929   001218                     
  3930                           ;main.c: 741:         for(eeprom_addr = 0x0A; eeprom_addr < 0x0E; eeprom_addr++){
  3931   001218  0E0A               	movlw	10
  3932   00121A  6E07               	movwf	EEPROM_Mem_Initialise@eeprom_addr^0,c
  3933   00121C                     l2155:
  3934                           
  3935                           ;main.c: 742:             EEPROM_Write(eeprom_addr, 1);
  3936   00121C  0E01               	movlw	1
  3937   00121E  6E01               	movwf	EEPROM_Write@data^0,c
  3938   001220  5007               	movf	EEPROM_Mem_Initialise@eeprom_addr^0,w,c
  3939   001222  EC2F  F00A         	call	_EEPROM_Write
  3940   001226                     
  3941                           ;main.c: 743:             _delay((unsigned long)((20)*(64000000/4000.0)));
  3942   001226  0E02               	movlw	2
  3943   001228  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  3944   00122A  0EA0               	movlw	160
  3945   00122C  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  3946   00122E  0E92               	movlw	146
  3947   001230                     u1537:
  3948   001230  2EE8               	decfsz	wreg,f,c
  3949   001232  D7FE               	bra	u1537
  3950   001234  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  3951   001236  D7FC               	bra	u1537
  3952   001238  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  3953   00123A  D7FA               	bra	u1537
  3954   00123C  D000               	nop2	
  3955   00123E                     
  3956                           ;main.c: 744:         }
  3957   00123E  2A07               	incf	EEPROM_Mem_Initialise@eeprom_addr^0,f,c
  3958   001240  0E0D               	movlw	13
  3959   001242  6407               	cpfsgt	EEPROM_Mem_Initialise@eeprom_addr^0,c
  3960   001244  EF26  F009         	goto	u1151
  3961   001248  EF28  F009         	goto	u1150
  3962   00124C                     u1151:
  3963   00124C  EF0E  F009         	goto	l2155
  3964   001250                     u1150:
  3965   001250                     
  3966                           ;main.c: 746:         EEPROM_Write(0x01, 1);
  3967   001250  0E01               	movlw	1
  3968   001252  6E01               	movwf	EEPROM_Write@data^0,c
  3969   001254  0E01               	movlw	1
  3970   001256  EC2F  F00A         	call	_EEPROM_Write
  3971   00125A                     
  3972                           ;main.c: 748:         _delay((unsigned long)((1500)*(64000000/4000.0)));
  3973   00125A  0E7A               	movlw	122
  3974   00125C  6E04               	movwf	(??_EEPROM_Mem_Initialise+1)^0,c
  3975   00125E  0EC1               	movlw	193
  3976   001260  6E03               	movwf	??_EEPROM_Mem_Initialise^0,c
  3977   001262  0E82               	movlw	130
  3978   001264                     u1547:
  3979   001264  2EE8               	decfsz	wreg,f,c
  3980   001266  D7FE               	bra	u1547
  3981   001268  2E03               	decfsz	??_EEPROM_Mem_Initialise^0,f,c
  3982   00126A  D7FC               	bra	u1547
  3983   00126C  2E04               	decfsz	(??_EEPROM_Mem_Initialise+1)^0,f,c
  3984   00126E  D7FA               	bra	u1547
  3985   001270                     l241:
  3986   001270  0012               	return		;funcret
  3987   001272                     __end_of_EEPROM_Mem_Initialise:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _EEPROM_Write *****************
  3991 ;; Defined at:
  3992 ;;		line 484 in file "main.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  address         1    wreg     unsigned char 
  3995 ;;  data            1    0[COMRAM] unsigned char 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  address         1    1[COMRAM] unsigned char 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4007 ;;      Params:         1       0       0       0       0       0       0
  4008 ;;      Locals:         1       0       0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0
  4010 ;;      Totals:         2       0       0       0       0       0       0
  4011 ;;Total ram usage:        2 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_display
  4017 ;;		_EEPROM_Mem_Initialise
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text27
  4022   00145E                     __ptext27:
  4023                           	callstack 0
  4024   00145E                     _EEPROM_Write:
  4025                           	callstack 29
  4026                           
  4027                           ;incstack = 0
  4028                           ;EEPROM_Write@address stored from wreg
  4029   00145E  6E02               	movwf	EEPROM_Write@address^0,c
  4030   001460                     
  4031                           ;main.c: 484: void EEPROM_Write(unsigned char address, unsigned char data);main.c: 485: 
      +                          {;main.c: 487:     EEADR = address;
  4032   001460  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  4033   001464                     
  4034                           ;main.c: 488:     EEDATA = data;
  4035   001464  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  4036   001468                     
  4037                           ;main.c: 489:     EECON1bits.EEPGD = 0;
  4038   001468  9EA6               	bcf	166,7,c	;volsfr
  4039   00146A                     
  4040                           ;main.c: 490:     EECON1bits.CFGS = 0;
  4041   00146A  9CA6               	bcf	166,6,c	;volsfr
  4042   00146C                     
  4043                           ;main.c: 491:     EECON1bits.WREN = 1;
  4044   00146C  84A6               	bsf	166,2,c	;volsfr
  4045   00146E                     
  4046                           ;main.c: 492:     INTCONbits.GIE = 0;
  4047   00146E  9EF2               	bcf	242,7,c	;volatile
  4048   001470                     
  4049                           ;main.c: 496:     EECON2 = 0x55;
  4050   001470  0E55               	movlw	85
  4051   001472  6EA7               	movwf	167,c	;volsfr
  4052   001474                     
  4053                           ;main.c: 497:     EECON2 = 0xAA;
  4054   001474  0EAA               	movlw	170
  4055   001476  6EA7               	movwf	167,c	;volsfr
  4056   001478                     
  4057                           ;main.c: 499:     EECON1bits.WR = 1;
  4058   001478  82A6               	bsf	166,1,c	;volsfr
  4059   00147A                     
  4060                           ;main.c: 500:     INTCONbits.GIE = 1;
  4061   00147A  8EF2               	bsf	242,7,c	;volatile
  4062   00147C                     l189:
  4063                           
  4064                           ;main.c: 502:     while (PIR2bits.EEIF == 0)
  4065   00147C  A8A1               	btfss	161,4,c	;volatile
  4066   00147E  EF43  F00A         	goto	u671
  4067   001482  EF45  F00A         	goto	u670
  4068   001486                     u671:
  4069   001486  EF3E  F00A         	goto	l189
  4070   00148A                     u670:
  4071   00148A                     
  4072                           ;main.c: 504:     PIR2bits.EEIF = 0;
  4073   00148A  98A1               	bcf	161,4,c	;volatile
  4074   00148C  0012               	return		;funcret
  4075   00148E                     __end_of_EEPROM_Write:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _EEPROM_Read *****************
  4079 ;; Defined at:
  4080 ;;		line 514 in file "main.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  address         1    wreg     unsigned char 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  address         1    0[COMRAM] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      unsigned char 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4094 ;;      Params:         0       0       0       0       0       0       0
  4095 ;;      Locals:         1       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0
  4097 ;;      Totals:         1       0       0       0       0       0       0
  4098 ;;Total ram usage:        1 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_startTimer
  4104 ;;		_display
  4105 ;;		_EEPROM_Mem_Initialise
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text28
  4110   001592                     __ptext28:
  4111                           	callstack 0
  4112   001592                     _EEPROM_Read:
  4113                           	callstack 29
  4114                           
  4115                           ;incstack = 0
  4116                           ;EEPROM_Read@address stored from wreg
  4117   001592  6E01               	movwf	EEPROM_Read@address^0,c
  4118   001594                     
  4119                           ;main.c: 514: char EEPROM_Read(unsigned char address);main.c: 515: {;main.c: 517:     EE
      +                          ADR = address;
  4120   001594  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  4121   001598                     
  4122                           ;main.c: 518:     EECON1bits.WREN = 0;
  4123   001598  94A6               	bcf	166,2,c	;volsfr
  4124   00159A                     
  4125                           ;main.c: 519:     EECON1bits.EEPGD = 0;
  4126   00159A  9EA6               	bcf	166,7,c	;volsfr
  4127   00159C                     
  4128                           ;main.c: 520:     EECON1bits.RD = 1;
  4129   00159C  80A6               	bsf	166,0,c	;volsfr
  4130   00159E                     
  4131                           ;main.c: 521:     return (EEDATA);
  4132   00159E  50A8               	movf	168,w,c	;volatile
  4133   0015A0  0012               	return		;funcret
  4134   0015A2                     __end_of_EEPROM_Read:
  4135                           	callstack 0
  4136                           
  4137                           	psect	rparam
  4138   000000                     
  4139                           	psect	idloc
  4140                           
  4141                           ;Config register IDLOC0 @ 0x200000
  4142                           ;	unspecified, using default values
  4143   200000                     	org	2097152
  4144   200000  FF                 	db	255
  4145                           
  4146                           ;Config register IDLOC1 @ 0x200001
  4147                           ;	unspecified, using default values
  4148   200001                     	org	2097153
  4149   200001  FF                 	db	255
  4150                           
  4151                           ;Config register IDLOC2 @ 0x200002
  4152                           ;	unspecified, using default values
  4153   200002                     	org	2097154
  4154   200002  FF                 	db	255
  4155                           
  4156                           ;Config register IDLOC3 @ 0x200003
  4157                           ;	unspecified, using default values
  4158   200003                     	org	2097155
  4159   200003  FF                 	db	255
  4160                           
  4161                           ;Config register IDLOC4 @ 0x200004
  4162                           ;	unspecified, using default values
  4163   200004                     	org	2097156
  4164   200004  FF                 	db	255
  4165                           
  4166                           ;Config register IDLOC5 @ 0x200005
  4167                           ;	unspecified, using default values
  4168   200005                     	org	2097157
  4169   200005  FF                 	db	255
  4170                           
  4171                           ;Config register IDLOC6 @ 0x200006
  4172                           ;	unspecified, using default values
  4173   200006                     	org	2097158
  4174   200006  FF                 	db	255
  4175                           
  4176                           ;Config register IDLOC7 @ 0x200007
  4177                           ;	unspecified, using default values
  4178   200007                     	org	2097159
  4179   200007  FF                 	db	255
  4180                           
  4181                           	psect	config
  4182                           
  4183                           ; Padding undefined space
  4184   300000                     	org	3145728
  4185   300000  FF                 	db	255
  4186                           
  4187                           ;Config register CONFIG1H @ 0x300001
  4188                           ;	Oscillator Selection bits
  4189                           ;	FOSC = INTIO67, Internal oscillator block
  4190                           ;	4X PLL Enable
  4191                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4192                           ;	Primary clock enable bit
  4193                           ;	PRICLKEN = ON, Primary clock enabled
  4194                           ;	Fail-Safe Clock Monitor Enable bit
  4195                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4196                           ;	Internal/External Oscillator Switchover bit
  4197                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4198   300001                     	org	3145729
  4199   300001  38                 	db	56
  4200                           
  4201                           ;Config register CONFIG2L @ 0x300002
  4202                           ;	Power-up Timer Enable bit
  4203                           ;	PWRTEN = OFF, Power up timer disabled
  4204                           ;	Brown-out Reset Enable bits
  4205                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4206                           ;	Brown Out Reset Voltage bits
  4207                           ;	BORV = 250, VBOR set to 2.50 V nominal
  4208   300002                     	org	3145730
  4209   300002  0F                 	db	15
  4210                           
  4211                           ;Config register CONFIG2H @ 0x300003
  4212                           ;	Watchdog Timer Enable bits
  4213                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4214                           ;	Watchdog Timer Postscale Select bits
  4215                           ;	WDTPS = 32768, 1:32768
  4216   300003                     	org	3145731
  4217   300003  3C                 	db	60
  4218                           
  4219                           ; Padding undefined space
  4220   300004                     	org	3145732
  4221   300004  FF                 	db	255
  4222                           
  4223                           ;Config register CONFIG3H @ 0x300005
  4224                           ;	CCP2 MUX bit
  4225                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4226                           ;	PORTB A/D Enable bit
  4227                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4228                           ;	P3A/CCP3 Mux bit
  4229                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4230                           ;	HFINTOSC Fast Start-up
  4231                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4232                           ;	Timer3 Clock input mux bit
  4233                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4234                           ;	ECCP2 B output mux bit
  4235                           ;	P2BMX = PORTB5, P2B is on RB5
  4236                           ;	MCLR Pin Enable bit
  4237                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4238   300005                     	org	3145733
  4239   300005  BF                 	db	191
  4240                           
  4241                           ;Config register CONFIG4L @ 0x300006
  4242                           ;	Stack Full/Underflow Reset Enable bit
  4243                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4244                           ;	Single-Supply ICSP Enable bit
  4245                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4246                           ;	Extended Instruction Set Enable bit
  4247                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4248                           ;	Background Debug
  4249                           ;	DEBUG = 0x1, unprogrammed default
  4250   300006                     	org	3145734
  4251   300006  85                 	db	133
  4252                           
  4253                           ; Padding undefined space
  4254   300007                     	org	3145735
  4255   300007  FF                 	db	255
  4256                           
  4257                           ;Config register CONFIG5L @ 0x300008
  4258                           ;	Code Protection Block 0
  4259                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4260                           ;	Code Protection Block 1
  4261                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4262                           ;	Code Protection Block 2
  4263                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4264                           ;	Code Protection Block 3
  4265                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4266   300008                     	org	3145736
  4267   300008  0F                 	db	15
  4268                           
  4269                           ;Config register CONFIG5H @ 0x300009
  4270                           ;	Boot Block Code Protection bit
  4271                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4272                           ;	Data EEPROM Code Protection bit
  4273                           ;	CPD = OFF, Data EEPROM not code-protected
  4274   300009                     	org	3145737
  4275   300009  C0                 	db	192
  4276                           
  4277                           ;Config register CONFIG6L @ 0x30000A
  4278                           ;	Write Protection Block 0
  4279                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4280                           ;	Write Protection Block 1
  4281                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4282                           ;	Write Protection Block 2
  4283                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4284                           ;	Write Protection Block 3
  4285                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4286   30000A                     	org	3145738
  4287   30000A  0F                 	db	15
  4288                           
  4289                           ;Config register CONFIG6H @ 0x30000B
  4290                           ;	Configuration Register Write Protection bit
  4291                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4292                           ;	Boot Block Write Protection bit
  4293                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4294                           ;	Data EEPROM Write Protection bit
  4295                           ;	WRTD = OFF, Data EEPROM not write-protected
  4296   30000B                     	org	3145739
  4297   30000B  E0                 	db	224
  4298                           
  4299                           ;Config register CONFIG7L @ 0x30000C
  4300                           ;	Table Read Protection Block 0
  4301                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4302                           ;	Table Read Protection Block 1
  4303                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4304                           ;	Table Read Protection Block 2
  4305                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4306                           ;	Table Read Protection Block 3
  4307                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4308   30000C                     	org	3145740
  4309   30000C  0F                 	db	15
  4310                           
  4311                           ;Config register CONFIG7H @ 0x30000D
  4312                           ;	Boot Block Table Read Protection bit
  4313                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4314   30000D                     	org	3145741
  4315   30000D  40                 	db	64
  4316                           tosu	equ	0xFFF
  4317                           tosh	equ	0xFFE
  4318                           tosl	equ	0xFFD
  4319                           stkptr	equ	0xFFC
  4320                           pclatu	equ	0xFFB
  4321                           pclath	equ	0xFFA
  4322                           pcl	equ	0xFF9
  4323                           tblptru	equ	0xFF8
  4324                           tblptrh	equ	0xFF7
  4325                           tblptrl	equ	0xFF6
  4326                           tablat	equ	0xFF5
  4327                           prodh	equ	0xFF4
  4328                           prodl	equ	0xFF3
  4329                           indf0	equ	0xFEF
  4330                           postinc0	equ	0xFEE
  4331                           postdec0	equ	0xFED
  4332                           preinc0	equ	0xFEC
  4333                           plusw0	equ	0xFEB
  4334                           fsr0h	equ	0xFEA
  4335                           fsr0l	equ	0xFE9
  4336                           wreg	equ	0xFE8
  4337                           indf1	equ	0xFE7
  4338                           postinc1	equ	0xFE6
  4339                           postdec1	equ	0xFE5
  4340                           preinc1	equ	0xFE4
  4341                           plusw1	equ	0xFE3
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           bsr	equ	0xFE0
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           preinc2	equ	0xFDC
  4349                           plusw2	equ	0xFDB
  4350                           fsr2h	equ	0xFDA
  4351                           fsr2l	equ	0xFD9
  4352                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        23
    BSS         14
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      69
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_startTimer
    _startUpcounter->_stopMessage
    _lcd_print->_LCD_Set_Cursor
    _startTimer->_stopMessage
    _stopMessage->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Init->_LCD_CMD
    _LCD_CLR->_LCD_CMD
    _display->_LCD_Set_Cursor
    _inttochar->_EEPROM_Read
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C2_Send
    _EEPROM_Mem_Initialise->_EEPROM_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   11889
                                             23 COMRAM     8     8      0
              _EEPROM_Mem_Initialise
                          _I2C2_Init
                           _LCD_Init
                           _blue_led
                            _display
                            _red_led
                         _startTimer
                     _startUpcounter
                          _stopTimer
 ---------------------------------------------------------------------------------
 (1) _startUpcounter                                       6     6      0    4378
                                             12 COMRAM     6     6      0
                            _LCD_CLR
                          _inttochar
                          _lcd_print
               _seven_segment_config
                        _stopMessage
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            3     1      2    1724
                                              8 COMRAM     3     1      2
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                          _inttochar (ARG)
 ---------------------------------------------------------------------------------
 (1) _startTimer                                          11    11      0    2504
                                             12 COMRAM    11    11      0
                        _EEPROM_Read
                            ___awmod
                          _green_led
               _seven_segment_config
                        _stopMessage
                          _stopTimer
 ---------------------------------------------------------------------------------
 (1) _stopTimer                                            2     2      0       0
                                              0 COMRAM     2     2      0
                            _red_led
               _seven_segment_config
 ---------------------------------------------------------------------------------
 (2) _seven_segment_config                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _stopMessage                                          4     4      0    1745
                                             10 COMRAM     2     2      0
                            _LCD_CLR
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _red_led
 ---------------------------------------------------------------------------------
 (2) _red_led                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     6     4      2     256
                                              4 COMRAM     6     4      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Init                                             3     3      0     135
                                              4 COMRAM     3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CLR                                              0     0      0      90
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _green_led                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display                                             18    14      4    3984
                                              8 COMRAM    14    10      4
                        _EEPROM_Read
                       _EEPROM_Write
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                            ___lwmod
                          _inttochar
 ---------------------------------------------------------------------------------
 (2) _inttochar                                            2     0      2     706
                                              1 COMRAM     2     0      2
                        _EEPROM_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       1     1      0      90
                                              3 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       4     3      1    1264
                                              4 COMRAM     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (5) _LCD_Write_4Bit                                       1     1      0      60
                                              2 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (6) _IO_Expander_Write                                    1     1      0      30
                                              1 COMRAM     1     1      0
                          _I2C2_Send
                         _I2C2_Start
                          _I2C2_Stop
 ---------------------------------------------------------------------------------
 (7) _I2C2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C2_Send                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _blue_led                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Mem_Initialise                                5     5      0     606
                                              2 COMRAM     5     5      0
                        _EEPROM_Read
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Mem_Initialise
     _EEPROM_Read
     _EEPROM_Write
   _I2C2_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C2_Send
       _I2C2_Start
       _I2C2_Stop
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _blue_led
   _display
     _EEPROM_Read
     _EEPROM_Write
     _LCD_Set_Cursor
       _LCD_CMD
     _LCD_Write_Char
       _LCD_Write_4Bit
     ___lwmod
     _inttochar
       _EEPROM_Read (ARG)
   _red_led
   _startTimer
     _EEPROM_Read
     ___awmod
     _green_led
     _seven_segment_config
     _stopMessage
       _LCD_CLR
         _LCD_CMD
       _LCD_Init
       _LCD_Set_Cursor
       _LCD_Write_String
         _LCD_Write_Char
       _red_led
     _stopTimer
       _red_led
       _seven_segment_config
   _startUpcounter
     _LCD_CLR
     _inttochar
     _lcd_print
       _LCD_Set_Cursor
       _LCD_Write_Char
       _inttochar (ARG)
     _seven_segment_config
     _stopMessage
   _stopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      45       1       72.6%
BITBIGSFRllhl       30      0       0      26        0.0%
BITBIGSFRhhhll      29      0       0      17        0.0%
BITBIGSFRhhhlh      1E      0       0      16        0.0%
BITBIGSFRllhh       11      0       0      25        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRhhllll      6      0       0      21        0.0%
BITBIGSFRlh          6      0       0      24        0.0%
BITBIGSFRhhllll      6      0       0      22        0.0%
BITBIGSFRhhlllh      5      0       0      20        0.0%
BITBIGSFRhhllhl      2      0       0      19        0.0%
BITBIGSFRhhllhh      1      0       0      18        0.0%
BITBIGSFRhl          1      0       0      23        0.0%
BITBIGSFRlll         1      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      28        0.0%
DATA                 0      0      45      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 12 06:20:14 2023

                  display@hour_s_digit 0011                                     l81 1074  
                                   l90 14E0                                     l84 14FA  
                                   l93 14C6                                     l87 14AC  
                                   l99 13EC                                     u10 157E  
                                   u11 157A                                     u20 1510  
                                   u21 150C                                     u30 156A  
                                   u31 1566                                     _RS 0044  
                 _seven_segment_config 15C0                                    l123 1590  
                                  l132 15B8                                    l300 155C  
                                  l108 12DA                                    l302 156A  
                                  l126 15A8                                    l303 156C  
                                  l135 15C0                                    l320 1510  
                                  l232 15BE                                    l241 1270  
                                  l321 1514                                    l129 15B0  
                                  l170 0DA8                                    l171 0DC4  
                                  l235 1558                                    l229 0A5E  
                                  l173 0DCA                                    l318 1502  
                                  l182 1092                                    l191 148A  
                                  l247 0E3C                                    l192 148C  
                                  l176 1426                                    l249 0ECC  
                                  l290 157E                                    l186 1130  
                                  l195 15A0                                    l291 1580  
                                  l179 1396                                    l189 147C  
                                  l285 152C                                    l288 1570  
                                  l574 11E0                                    l831 1336  
                                  l838 133E                                    _DEL 0039  
                                  u700 1178                                    u701 1174  
                                  u710 1196                                    u711 1192  
                                  u720 11AC                                    u800 0B86  
                                  u721 11A8                                    u801 0B82  
                                  u730 11D0                                    u810 0B98  
                                  u731 11CC                                    u811 0B94  
                                  u740 12EE                                    u660 13EC  
                                  u900 0D2E                                    u820 0BAA  
                                  u741 12EA                                    u661 13E8  
                                  u901 0D2A                                    u821 0BA6  
                                  u670 148A                                    u750 130C  
                                  u910 0D40                                    u830 0BBC  
                                  u671 1486                                    u751 1308  
                                  u911 0D3C                                    u831 0BB8  
                                  u760 1322                                    u680 1144  
                                  u920 0D58                                    u840 0C8E  
                                  u761 131E                                    u681 1140  
                                  u921 0D54                                    u841 0C8A  
                                  u690 115E                                    u930 0D6A  
                                  u850 0CB4                                    u770 0ADC  
                                  u691 115A                                    u931 0D66  
                                  u851 0CB0                                    u771 0AD8  
                                  u940 0D7C                                    u860 0CE0  
                                  u780 0B14                                    u941 0D78  
                                  u861 0CDC                                    u781 0B10  
                                  u950 0D94                                    u870 0CF2  
                                  u790 0B68                                    u951 0D90  
                                  u871 0CEE                                    u791 0B64  
                                  u960 0DA8                                    u880 0D04  
                                  u961 0DA4                                    u881 0D00  
                                  u970 0DBC                                    u890 0D1C  
                                  u971 0DB8                                    u891 0D18  
                                  u980 108E                                    u981 108A  
                                  u990 10E4                                    u991 10E0  
                         ___awmod@sign 0006                                    wreg 0FE8  
                      __end_of_LCD_CMD 14E2                        __end_of_LCD_CLR 1592  
                     _segment_with_dot 0020                    LCD_Write_String@Str 0005  
                       _LCD_Set_Cursor 1272                                   l1003 156E  
                                 l1011 14E8                                   l1101 159C  
                                 l1005 14FE                                   l1013 14EE  
                                 l1021 149C                                   l1103 159E  
                                 l1007 155A                                   l1015 14F6  
                                 l1023 14A4                                   l1031 14B0  
                                 l1111 13F8                                   l1009 14E4  
                                 l1017 1490                                   l1025 14CA  
                                 l1033 14B4                                   l1041 0F8C  
                                 l1113 13FC                                   l1019 1494  
                                 l1027 14CE                                   l1035 14BC  
                                 l1051 0FEC                                   l1043 0FAA  
                                 l1115 140C                                   l1107 13EE  
                                 l2011 10A6                                   l2003 1094  
                                 l1213 15B2                                   l1029 14D6  
                                 l2101 0936                                   l1061 1056  
                                 l1053 0FFC                                   l1045 0FBA  
                                 l1037 0F82                                   l1117 1424  
                                 l1109 13F2                                   l2021 10FC  
                                 l2013 10BC                                   l2111 0984  
                                 l2103 0944                                   l2031 0620  
                                 l1055 101A                                   l1047 0FD0  
                                 l1039 0F86                                   l2023 1116  
                                 l2015 10CA                                   l2121 09D8  
                                 l2113 0998                                   l2105 0958  
                                 l2041 068A                                   l2033 062C  
                                 l1057 1020                                   l1049 0FD6  
                                 l2017 10CE                                   l2009 109C  
                                 l2025 1128                                   l2201 0DFE  
                                 l2123 09EE                                   l2115 09AE  
                                 l2107 096E                                   l2131 0A40  
                                 l2051 06FE                                   l2043 069E  
                                 l2035 063E                                   l1059 103E  
                                 l1091 15A2                                   l2027 112C  
                                 l2019 10E4                                   l2211 0E1A  
                                 l2203 0E02                                   l2133 0A56  
                                 l2125 09F6                                   l2117 09B6  
                                 l2109 0976                                   l2061 076E  
                                 l2053 070E                                   l2045 06AE  
                                 l2037 064E                                   l2029 0608  
                                 l1093 15AA                                   l2221 0E2E  
                                 l2213 0E1A                                   l2205 0E0A  
                                 l1095 1594                                   l2143 11E2  
                                 l2119 09C4                                   l2071 081C  
                                 l2063 078A                                   l2055 072A  
                                 l2047 06CA                                   l2039 066A  
                                 l1087 1582                                   l2231 0E66  
                                 l2223 0E36                                   l2215 0E1A  
                                 l2207 0E12                                   l1097 1598  
                                 l2161 1240                                   l2145 11F8  
                                 l2129 0A04                                   l2081 0880  
                                 l2073 0838                                   l2065 07AA  
                                 l2057 074A                                   l2049 06EA  
                                 l1089 1588                                   l2233 0E7E  
                                 l2241 0EBC                                   l2225 0E4A  
                                 l2217 0E28                                   l2209 0E1A  
                                 l1099 159A                                   l2163 1250  
                                 l2155 121C                                   l2147 1206  
                                 l1531 1520                                   l2091 08F2  
                                 l2067 07D2                                   l2059 075E  
                                 l2251 0EEE                                   l2243 0EC4  
                                 l2235 0E94                                   l2227 0E4C  
                                 l2219 0E2A                                   l2171 0DD6  
                                 l2165 125A                                   l2157 1226  
                                 l2149 1218                                   l2341 08BA  
                                 l2077 085C                                   l2069 07FC  
                                 l2253 0EEE                                   l2245 0EDA  
                                 l2261 0F16                                   l2237 0E9C  
                                 l2229 0E54                                   l2181 0DE2  
                                 l2173 0DD8                                   l2159 123E  
                                 l2343 0A1A                                   l2095 0904  
                                 l2087 08A4                                   l2271 0F46  
                                 l2263 0F16                                   l2255 0F06  
                                 l2247 0EDC                                   l2239 0EA4  
                                 l2191 0DEC                                   l2183 0DE4  
                                 l2175 0DDA                                   l2167 0DCC  
                                 l1529 1516                                   l2345 12BC  
                                 l2097 0918                                   l2089 08E0  
                                 l1801 1132                                   l2265 0F28  
                                 l2273 0F5E                                   l2257 0F0E  
                                 l2249 0EDC                                   l2193 0DEE  
                                 l2185 0DE6                                   l2177 0DDE  
                                 l2169 0DD4                                   l2099 092E  
                                 l1811 115E                                   l1803 1136  
                                 l2275 0F5E                                   l2267 0F2C  
                                 l2259 0F0E                                   l2195 0DF0  
                                 l2187 0DE8                                   l2179 0DE0  
                                 l1821 1196                                   l1813 1166  
                                 l1805 1144                                   l1741 13C4  
                                 l2277 0F62                                   l2269 0F3E  
                                 l2197 0DF4                                   l2189 0DEA  
                                 l1751 129C                                   l1743 1274  
                                 l1831 11D0                                   l1823 11AC  
                                 l1815 1178                                   l1807 114C  
                                 l1735 1398                                   l1911 0BD8  
                                 l2279 0F76                                   l2199 0DFA  
                                 l1745 1278                                   l1753 12A8  
                                 l1841 12F6                                   l1833 11D8  
                                 l1825 11B4                                   l1817 1180  
                                 l1809 1150                                   l1737 13A4  
                                 l1761 1344                                   l1921 0C0C  
                                 l1913 0BE8                                   l1905 0BD0  
                                 l1747 1284                                   l1851 1330  
                                 l1843 12FE                                   l1827 11BA  
                                 l1819 1188                                   l1739 13C0  
                                 l1771 137C                                   l1763 134A  
                                 l1931 0C40                                   l1923 0C1C  
                                 l1915 0BF8                                   l1907 0BD4  
                                 l1781 1460                                   l1749 1290  
                                 l1845 130C                                   l1837 12DC  
                                 l1829 11C0                                   l1773 137E  
                                 l1765 1354                                   l1941 0C66  
                                 l1933 0C42                                   l1925 0C1E  
                                 l1917 0BFA                                   l1909 0BD6  
                                 l1861 0A8E                                   l1853 0A60  
                                 l1791 146E                                   l1783 1464  
                                 l1847 1322                                   l1839 12EE  
                                 l1775 15BA                                   l1767 1360  
                                 l1759 1340                                   l1951 0CA4  
                                 l1943 0C68                                   l1935 0C44  
                                 l1927 0C20                                   l1919 0BFC  
                                 l1871 0AC0                                   l1863 0A90  
                                 l1855 0A88                                   l1793 1470  
                                 l1785 1468                                   l1849 132A  
                                 l1769 1378                                   l1961 0CE0  
                                 l1945 0C8E                                   l1953 0CA6  
                                 l1937 0C54                                   l1929 0C30  
                                 l1881 0B14                                   l1873 0ADC  
                                 l1865 0A9E                                   l1857 0A8A  
                                 l1795 1474                                   l1787 146A  
                                 l1971 0D2E                                   l1963 0CF2  
                                 l1955 0CB4                                   l1947 0C90  
                                 l1939 0C64                                   l1891 0B86  
                                 l1883 0B20                                   l1875 0AE8  
                                 l1867 0AB0                                   l1859 0A8C  
                                 l1779 1548                                   l1797 1478  
                                 l1789 146C                                   l1981 0D80  
                                 l1973 0D44                                   l1965 0D08  
                                 l1957 0CC0                                   l1949 0C94  
                                 l1893 0B98                                   l1885 0B40  
                                 l1877 0AF4                                   l1869 0AB4  
                                 l1799 147A                                   l1991 0DBC  
                                 l1959 0CC6                                   l1895 0BAA  
                                 l1887 0B68                                   l1967 0D0E  
                                 l1975 0D4A                                   l1879 0AF8  
                                 l1983 0D86                                   l1993 0DC6  
                                 l1985 0D94                                   l1977 0D58  
                                 l1969 0D1C                                   l1897 0BBC  
                                 l1889 0B74                                   l1979 0D6A  
                                 l1899 0BC8                                   l1987 0D9A  
                                 l1995 1076                                   l1989 0DAA  
                                 l1997 107A                                   l1999 107E  
                                 STR_1 0601                                   u1000 1128  
                                 u1001 1124                                   u1010 063E  
                                 u1011 063A                                   u1100 096E  
                                 u1020 069E                                   u1101 096A  
                                 u1021 069A                                   u1110 09AE  
                                 u1030 06FE                                   u1111 09AA  
                                 u1031 06FA                                   u1120 09EE  
                                 u1040 075E                                   u1200 0EDA  
                                 u1121 09EA                                   u1041 075A  
                                 u1201 0ED6                                   u1130 0A56  
                                 u1050 07D2                                   u1210 0EEE  
                                 u1131 0A52                                   u1051 07CE  
                                 u1211 0EEA                                   u1140 1218  
                                 u1060 07F8                                   u1220 0F28  
                                 u1141 1214                                   u1061 07F4  
                                 u1221 0F24                                   u1150 1250  
                                 u1070 08F2                                   u1230 0F3E  
                                 u1151 124C                                   u1071 08EE  
                                 u1231 0F3A                                   u1080 0900  
                                 u1160 0E28                                   u1081 08FC  
                                 u1161 0E24                                   u1090 092E  
                                 u1170 0E4A                                   u1091 092A  
                                 u1307 0C5A                                   u1171 0E46  
                                 u1180 0E66                                   u1317 0C9A  
                                 u1181 0E62                                   u1190 0E94  
                                 u1407 100C                                   u1327 1416  
                                 u1191 0E90                                   u1247 0E70  
                                 u1417 102A                                   u1337 136A  
                                 u1257 10EE                                   u1507 0826  
                                 u1427 1048                                   u1347 1388  
                                 u1267 1108                            _stopMessage 1340  
                                 u1517 14A6                                   u1437 1066  
                                 u1357 0F96                                   u1277 0BEE  
                                 u1527 11EC                                   u1447 158A  
                                 u1367 0FB0                                   u1287 0C12  
                                 u1537 1230                                   u1457 0612  
                                 u1377 0FC6                                   u1297 0C36  
                                 u1547 1264                                   u1467 0658  
                                 u1387 0FDC                                   u1477 06B8  
                                 u1397 0FF2                                   u1487 0718  
                                 u1497 0778                      ?_LCD_Write_String 0005  
                                 _main 0DCC                                   indf2 0FDF  
                                 fsr1l 0FE1                                   fsr2l 0FD9  
                                 start 0000                     ??_LCD_Write_String 0007  
                         ___param_bank 0000                   LCD_Write_4Bit@Nibble 0003  
                 __end_of_EEPROM_Write 148E                       __end_of_LCD_Init 1076  
                ?_seven_segment_config 0001                      __end_of_I2C2_Init 152E  
               ?_EEPROM_Mem_Initialise 0001                                  ?_main 0001  
                    __end_of_I2C2_Send 1516                                  _EEADR 0FA9  
                      __end_of___awmod 11E2                      __end_of_I2C2_Stop 156E  
                      __end_of___lwmod 1340                                  _PORTB 0F81  
                         lcd_print@col 0009                 __end_of_LCD_Set_Cursor 12DC  
                         lcd_print@row 000B                        __end_of_display 0A60  
                      __end_of_red_led 15AA                 _display_function_count 0037  
                                tablat 0FF5                                  status 0FD8  
                     EEPROM_Write@data 0001                         _LCD_Write_4Bit 148E  
                         ??_I2C2_Start 0001                         _LCD_Write_Char 14AE  
                      __initialization 1428                           __end_of_main 0F80  
                    _IO_Expander_Write 14E2                     ?_IO_Expander_Write 0001  
                               ??_main 0018                          __activetblptr 0002  
                            ??_LCD_CMD 0004                              ??_LCD_CLR 0005  
                  ??_IO_Expander_Write 0002                        ?_LCD_Set_Cursor 0005  
                       _startUpcounter 1076                                 _EEDATA 0FA8  
                               _EECON2 0FA7                     __end_of_I2C2_Start 1582  
                               _OSCCON 0FD3                 __end_of_LCD_Write_4Bit 14AE  
               __end_of_LCD_Write_Char 14C8                          lcd_print@Data 000A  
                     __end_of_blue_led 15BA              __end_of_IO_Expander_Write 14FC  
                            ??___awmod 0005                          display@update 000B  
                            ??___lwmod 0005                     _minute_first_digit 003D  
               ??_seven_segment_config 0001                                 clear_0 144E  
                      ___awmod@divisor 0003                                 isa$std 0001  
                      ___awmod@counter 0005                              ??_display 000D  
                         __pdataCOMRAM 0020                              ??_red_led 0001  
                       _segmentCounter 0043                           __mediumconst 0000  
               __end_of_startUpcounter 1132                                 tblptrh 0FF7  
                               tblptrl 0FF6                  display@minute_f_digit 0013  
                               tblptru 0FF8                  display@minute_s_digit 0015  
                        main@stop_flag 001A                             __accesstop 0060  
              __end_of__initialization 1454                              ?_LCD_Init 0001  
                      ?_LCD_Write_4Bit 0001                          ___rparam_used 0001  
                      ?_LCD_Write_Char 0001                         __pcstackCOMRAM 0001  
            startTimer@hour_first_flag 000E                        ?_startUpcounter 0001  
                         ?_stopMessage 0001                           _EEPROM_Write 145E  
                       main@isEditMode 001C                             ??_LCD_Init 0005  
                           __pnvCOMRAM 0045                ??_EEPROM_Mem_Initialise 0003  
                              _LCD_CMD 14C8                                _LCD_CLR 1582  
                            _I2C2_Init 1516                              _I2C2_Send 14FC  
                            _I2C2_Stop 155A                                _OSCTUNE 0F9B  
                              _SSP2ADD 0F6E                                _SSP2BUF 0F6F  
                            ?_blue_led 0001           startTimer@minute_second_flag 0012  
                     startTimer@timeUp 0014                                _i2c_add 0045  
                              __Hparam 0000                                __Lparam 0000  
                    __end_of_lcd_print 155A                                ___awmod 1132  
                              ___lwmod 12DC                           __psmallconst 0600  
                              __pcinit 1428                                __ramtop 0600  
                    __end_of_green_led 15B2                       ??_LCD_Set_Cursor 0006  
                              __ptext0 0DCC                                __ptext1 1076  
                              __ptext2 1546                                __ptext3 0A60  
                              __ptext4 13EE                                __ptext5 15C0  
                              __ptext6 1340                                __ptext7 15A2  
                              __ptext8 1398                                __ptext9 0F80  
                              _display 0608                                _red_led 15A2  
                     ___awmod@dividend 0001                             ?_I2C2_Init 0001  
                              _segment 002B                             ?_I2C2_Send 0001  
                           ?_I2C2_Stop 0001                             ??_blue_led 0001  
                    __end_of_inttochar 15C0                   end_of_initialization 1454  
                        ??_EEPROM_Read 0001                          __Lmediumconst 0000  
                              postdec1 0FE5                                postinc0 0FEE  
                    __end_of_stopTimer 1428                              _PORTCbits 0F82  
                           LCD_CMD@CMD 0004                              _TRISAbits 0F92  
                            _TRISBbits 0F93                              _TRISCbits 0F94  
                     ??_LCD_Write_4Bit 0003                             _startTimer 0A60  
                    LCD_Write_String@i 0009                       ??_LCD_Write_Char 0004  
                  __end_of_EEPROM_Read 15A2                       _LCD_Write_String 1398  
                        __pidataCOMRAM 152E                      _hour_second_digit 003F  
                     ??_startUpcounter 000D                    start_initialization 1428  
                          ??_I2C2_Init 0001                            ??_I2C2_Send 0001  
                          ??_I2C2_Stop 0001          __end_of_EEPROM_Mem_Initialise 1272  
                             ?_LCD_CMD 0001                               ?_LCD_CLR 0001  
                          __pbssCOMRAM 0037            startTimer@minute_first_flag 0010  
                  _minute_second_digit 003B                            ?_startTimer 0001  
                          _EEPROM_Read 1592               startUpcounter@displaypos 0011  
                IO_Expander_Write@Data 0002                       _hour_first_digit 0041  
                             ?___awmod 0001                        startTimer@RESET 0016  
                             ?___lwmod 0001                              _lcd_print 1546  
                       inttochar@digit 0002                               ?_display 0009  
                          __smallconst 0600                               ?_red_led 0001  
                            _green_led 15AA                       main@shiftCounter 001E  
                             _LCD_Init 0F80                               _LATAbits 0F89  
                             _LATCbits 0F8B                              _inttochar 15BA  
                             _PIR2bits 0FA1                               _PIR3bits 0FA4  
                           _I2C2_Start 156E                               _SSP2CON1 0F6C  
                             _SSP2STAT 0F6D                             ?_lcd_print 0009  
                            _stopTimer 13EE                             ?_green_led 0001  
                            copy_data0 143C               __end_of_LCD_Write_String 13EE  
                           ?_inttochar 0002                             _EECON1bits 0FA6  
                             __Hrparam 0000                               __Lrparam 0000  
              startUpcounter@actualpos 000F                             _ANSELBbits 0F39  
                           _ANSELCbits 0F3A                             ?_stopTimer 0001  
                             __ptext10 1582                               __ptext11 15AA  
                             __ptext20 14E2                               __ptext12 1132  
                             __ptext21 155A                               __ptext13 0608  
                             __ptext22 156E                               __ptext14 15BA  
                             __ptext23 14FC                               __ptext15 12DC  
                             __ptext24 15B2                               __ptext16 14AE  
                             __ptext25 1516                               __ptext17 1272  
                             __ptext26 11E2                               __ptext18 14C8  
                             __ptext27 145E                               __ptext19 148E  
                             __ptext28 1592                               _blue_led 15B2  
                        ??_stopMessage 000B                          ?_EEPROM_Write 0001  
                         _SSP2CON2bits 0F6B           __end_of_seven_segment_config 15C2  
                 display@buttonCounter 0009                        _BackLight_State 0036  
                          ?_I2C2_Start 0001                               isa$xinst 0000  
                          ??_lcd_print 000B  EEPROM_Mem_Initialise@EEPROM_Mem_check 0005  
                           _INTCONbits 0FF2                            ??_green_led 0001  
                   LCD_Write_Char@Data 0004                         ??_EEPROM_Write 0002  
                         ??_startTimer 000D                       ___lwmod@dividend 0001  
                         ?_EEPROM_Read 0001                            ??_inttochar 0004  
                  __end_of_stopMessage 1398                     EEPROM_Read@address 0001  
                      LCD_Init@I2C_Add 0007       EEPROM_Mem_Initialise@eeprom_addr 0007  
                   __end_of_startTimer 0DCC                  _EEPROM_Mem_Initialise 11E2  
                      ___lwmod@divisor 0003                          I2C2_Send@BYTE 0001  
                          ??_stopTimer 0001                        ___lwmod@counter 0005  
                    LCD_Set_Cursor@COL 0005                      LCD_Set_Cursor@ROW 0008  
                  display@hour_f_digit 000F                    EEPROM_Write@address 0002  
